# 1 "q_plsf_5.c"
# 1 "/home/posadash/trabajo/scope/plugins/trunk/scope_xml_plugin/examples/vocoder/c_base/coder//"
# 1 "<interno>"
# 1 "<lÃ­nea de orden>"
# 1 "/home/posadash/trabajo/scope/scope//include/scope.h" 1 3 4
# 44 "/home/posadash/trabajo/scope/scope//include/scope.h" 3 4
# 1 "/usr/include/stdio.h" 1 3 4
# 28 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 335 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 360 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 361 "/usr/include/sys/cdefs.h" 2 3 4
# 336 "/usr/include/features.h" 2 3 4
# 359 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 5 "/usr/include/gnu/stubs.h" 2 3 4


# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 360 "/usr/include/features.h" 2 3 4
# 29 "/usr/include/stdio.h" 2 3 4

extern "C" {



# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 214 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
typedef unsigned int size_t;
# 35 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 28 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 131 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 132 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 37 "/usr/include/stdio.h" 2 3 4
# 45 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 65 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 75 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 78 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 53 "/usr/include/_G_config.h" 3 4
typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
# 33 "/usr/include/libio.h" 2 3 4
# 53 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 1 3 4
# 43 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/libio.h" 2 3 4
# 170 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 203 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 271 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 328 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 364 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 458 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 488 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 550 "/usr/include/libio.h" 3 4
}
# 76 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 89 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 141 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 142 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;









extern int remove (__const char *__filename) throw ();

extern int rename (__const char *__old, __const char *__new) throw ();




extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) throw ();








extern FILE *tmpfile (void) ;
# 184 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;





extern char *tmpnam_r (char *__s) throw () ;
# 206 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 231 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 241 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes) ;




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 274 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (__const char *__restrict __filename,
        __const char *__restrict __modes) ;
extern FILE *freopen64 (__const char *__restrict __filename,
   __const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, __const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     __const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;


extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;







extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;




extern int scanf (__const char *__restrict __format, ...) ;

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) throw ();
# 443 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 502 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 530 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 541 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 574 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;






extern char *gets (char *__s) ;

# 620 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 636 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s) ;

# 697 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (__const char *__restrict __s,
      FILE *__restrict __stream);
# 708 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream) ;








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 744 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 763 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 786 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;








extern void perror (__const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];


extern int _sys_nerr;
extern __const char *__const _sys_errlist[];
# 825 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 844 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       __const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 914 "/usr/include/stdio.h" 3 4
}
# 45 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 31 "/usr/include/time.h" 3 4
extern "C" {







# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 40 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/bits/time.h" 1 3 4
# 44 "/usr/include/time.h" 2 3 4
# 59 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 75 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 93 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 105 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 121 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };








struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  __const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;





typedef __pid_t pid_t;








extern clock_t clock (void) throw ();


extern time_t time (time_t *__timer) throw ();


extern double difftime (time_t __time1, time_t __time0)
     throw () __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) throw ();





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   __const char *__restrict __format,
   __const struct tm *__restrict __tp) throw ();





extern char *strptime (__const char *__restrict __s,
         __const char *__restrict __fmt, struct tm *__tp)
     throw ();





# 1 "/usr/include/xlocale.h" 1 3 4
# 28 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;
# 217 "/usr/include/time.h" 2 3 4

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     __const char *__restrict __format,
     __const struct tm *__restrict __tp,
     __locale_t __loc) throw ();

extern char *strptime_l (__const char *__restrict __s,
    __const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) throw ();






extern struct tm *gmtime (__const time_t *__timer) throw ();



extern struct tm *localtime (__const time_t *__timer) throw ();





extern struct tm *gmtime_r (__const time_t *__restrict __timer,
       struct tm *__restrict __tp) throw ();



extern struct tm *localtime_r (__const time_t *__restrict __timer,
          struct tm *__restrict __tp) throw ();





extern char *asctime (__const struct tm *__tp) throw ();


extern char *ctime (__const time_t *__timer) throw ();







extern char *asctime_r (__const struct tm *__restrict __tp,
   char *__restrict __buf) throw ();


extern char *ctime_r (__const time_t *__restrict __timer,
        char *__restrict __buf) throw ();




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) throw ();



extern int daylight;
extern long int timezone;





extern int stime (__const time_t *__when) throw ();
# 312 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) throw ();


extern time_t timelocal (struct tm *__tp) throw ();


extern int dysize (int __year) throw () __attribute__ ((__const__));
# 327 "/usr/include/time.h" 3 4
extern int nanosleep (__const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) throw ();


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) throw ();


extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)
     throw ();






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       __const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) throw ();




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) throw ();


extern int timer_delete (timer_t __timerid) throw ();


extern int timer_settime (timer_t __timerid, int __flags,
     __const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) throw ();


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     throw ();


extern int timer_getoverrun (timer_t __timerid) throw ();
# 389 "/usr/include/time.h" 3 4
extern int getdate_err;
# 398 "/usr/include/time.h" 3 4
extern struct tm *getdate (__const char *__string);
# 412 "/usr/include/time.h" 3 4
extern int getdate_r (__const char *__restrict __string,
        struct tm *__restrict __resbufp);


}
# 33 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 1 3 4
# 37 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 33 "/home/posadash/trabajo/scope/scope//include/time.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 38 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/signal.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/signal.h" 3 4
# 1 "/usr/include/signal.h" 1 3 4
# 31 "/usr/include/signal.h" 3 4
extern "C" {

# 1 "/usr/include/bits/sigset.h" 1 3 4
# 24 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 104 "/usr/include/bits/sigset.h" 3 4
extern int __sigismember (__const __sigset_t *, int);
extern int __sigaddset (__sigset_t *, int);
extern int __sigdelset (__sigset_t *, int);
# 34 "/usr/include/signal.h" 2 3 4







typedef __sig_atomic_t sig_atomic_t;








typedef __sigset_t sigset_t;







# 1 "/usr/include/bits/signum.h" 1 3 4
# 59 "/usr/include/signal.h" 2 3 4
# 68 "/usr/include/signal.h" 3 4
typedef __uid_t uid_t;






typedef void (*__sighandler_t) (int);




extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     throw ();

extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)
     throw ();







extern __sighandler_t signal (int __sig, __sighandler_t __handler)
     throw ();
# 104 "/usr/include/signal.h" 3 4





extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)
     throw ();






extern int kill (__pid_t __pid, int __sig) throw ();






extern int killpg (__pid_t __pgrp, int __sig) throw ();




extern int raise (int __sig) throw ();




extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)
     throw ();
extern int gsignal (int __sig) throw ();




extern void psignal (int __sig, __const char *__s);
# 153 "/usr/include/signal.h" 3 4
extern int __sigpause (int __sig_or_mask, int __is_sig);
# 162 "/usr/include/signal.h" 3 4
extern int sigpause (int __sig) __asm__ ("__xpg_sigpause");
# 181 "/usr/include/signal.h" 3 4
extern int sigblock (int __mask) throw () __attribute__ ((__deprecated__));


extern int sigsetmask (int __mask) throw () __attribute__ ((__deprecated__));


extern int siggetmask (void) throw () __attribute__ ((__deprecated__));
# 196 "/usr/include/signal.h" 3 4
typedef __sighandler_t sighandler_t;




typedef __sighandler_t sig_t;







# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 210 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/bits/siginfo.h" 1 3 4
# 25 "/usr/include/bits/siginfo.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 26 "/usr/include/bits/siginfo.h" 2 3 4







typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 51 "/usr/include/bits/siginfo.h" 3 4
typedef struct siginfo
  {
    int si_signo;
    int si_errno;

    int si_code;

    union
      {
 int _pad[((128 / sizeof (int)) - 3)];


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
   } _kill;


 struct
   {
     int si_tid;
     int si_overrun;
     sigval_t si_sigval;
   } _timer;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     sigval_t si_sigval;
   } _rt;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     int si_status;
     __clock_t si_utime;
     __clock_t si_stime;
   } _sigchld;


 struct
   {
     void *si_addr;
   } _sigfault;


 struct
   {
     long int si_band;
     int si_fd;
   } _sigpoll;
      } _sifields;
  } siginfo_t;
# 129 "/usr/include/bits/siginfo.h" 3 4
enum
{
  SI_ASYNCNL = -60,

  SI_TKILL = -6,

  SI_SIGIO,

  SI_ASYNCIO,

  SI_MESGQ,

  SI_TIMER,

  SI_QUEUE,

  SI_USER,

  SI_KERNEL = 0x80

};



enum
{
  ILL_ILLOPC = 1,

  ILL_ILLOPN,

  ILL_ILLADR,

  ILL_ILLTRP,

  ILL_PRVOPC,

  ILL_PRVREG,

  ILL_COPROC,

  ILL_BADSTK

};


enum
{
  FPE_INTDIV = 1,

  FPE_INTOVF,

  FPE_FLTDIV,

  FPE_FLTOVF,

  FPE_FLTUND,

  FPE_FLTRES,

  FPE_FLTINV,

  FPE_FLTSUB

};


enum
{
  SEGV_MAPERR = 1,

  SEGV_ACCERR

};


enum
{
  BUS_ADRALN = 1,

  BUS_ADRERR,

  BUS_OBJERR

};


enum
{
  TRAP_BRKPT = 1,

  TRAP_TRACE

};


enum
{
  CLD_EXITED = 1,

  CLD_KILLED,

  CLD_DUMPED,

  CLD_TRAPPED,

  CLD_STOPPED,

  CLD_CONTINUED

};


enum
{
  POLL_IN = 1,

  POLL_OUT,

  POLL_MSG,

  POLL_ERR,

  POLL_PRI,

  POLL_HUP

};
# 273 "/usr/include/bits/siginfo.h" 3 4
typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     void *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4

};
# 213 "/usr/include/signal.h" 2 3 4



extern int sigemptyset (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigfillset (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigaddset (sigset_t *__set, int __signo) throw () __attribute__ ((__nonnull__ (1)));


extern int sigdelset (sigset_t *__set, int __signo) throw () __attribute__ ((__nonnull__ (1)));


extern int sigismember (__const sigset_t *__set, int __signo)
     throw () __attribute__ ((__nonnull__ (1)));



extern int sigisemptyset (__const sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigandset (sigset_t *__set, __const sigset_t *__left,
        __const sigset_t *__right) throw () __attribute__ ((__nonnull__ (1, 2, 3)));


extern int sigorset (sigset_t *__set, __const sigset_t *__left,
       __const sigset_t *__right) throw () __attribute__ ((__nonnull__ (1, 2, 3)));




# 1 "/usr/include/bits/sigaction.h" 1 3 4
# 25 "/usr/include/bits/sigaction.h" 3 4
struct sigaction
  {


    union
      {

 __sighandler_t sa_handler;

 void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;







    __sigset_t sa_mask;


    int sa_flags;


    void (*sa_restorer) (void);
  };
# 247 "/usr/include/signal.h" 2 3 4


extern int sigprocmask (int __how, __const sigset_t *__restrict __set,
   sigset_t *__restrict __oset) throw ();






extern int sigsuspend (__const sigset_t *__set) __attribute__ ((__nonnull__ (1)));


extern int sigaction (int __sig, __const struct sigaction *__restrict __act,
        struct sigaction *__restrict __oact) throw ();


extern int sigpending (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));






extern int sigwait (__const sigset_t *__restrict __set, int *__restrict __sig)
     __attribute__ ((__nonnull__ (1, 2)));






extern int sigwaitinfo (__const sigset_t *__restrict __set,
   siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));






extern int sigtimedwait (__const sigset_t *__restrict __set,
    siginfo_t *__restrict __info,
    __const struct timespec *__restrict __timeout)
     __attribute__ ((__nonnull__ (1)));



extern int sigqueue (__pid_t __pid, int __sig, __const union sigval __val)
     throw ();
# 304 "/usr/include/signal.h" 3 4
extern __const char *__const _sys_siglist[65];
extern __const char *__const sys_siglist[65];


struct sigvec
  {
    __sighandler_t sv_handler;
    int sv_mask;

    int sv_flags;

  };
# 328 "/usr/include/signal.h" 3 4
extern int sigvec (int __sig, __const struct sigvec *__vec,
     struct sigvec *__ovec) throw ();



# 1 "/usr/include/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/bits/sigcontext.h" 3 4
# 1 "/usr/include/asm/sigcontext.h" 1 3 4



# 1 "/usr/include/asm/types.h" 1 3 4





typedef unsigned short umode_t;






typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;



__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
# 5 "/usr/include/asm/sigcontext.h" 2 3 4
# 21 "/usr/include/asm/sigcontext.h" 3 4
struct _fpreg {
 unsigned short significand[4];
 unsigned short exponent;
};

struct _fpxreg {
 unsigned short significand[4];
 unsigned short exponent;
 unsigned short padding[3];
};

struct _xmmreg {
 unsigned long element[4];
};

struct _fpstate {

 unsigned long cw;
 unsigned long sw;
 unsigned long tag;
 unsigned long ipoff;
 unsigned long cssel;
 unsigned long dataoff;
 unsigned long datasel;
 struct _fpreg _st[8];
 unsigned short status;
 unsigned short magic;


 unsigned long _fxsr_env[6];
 unsigned long mxcsr;
 unsigned long reserved;
 struct _fpxreg _fxsr_st[8];
 struct _xmmreg _xmm[8];
 unsigned long padding[56];
};



struct sigcontext {
 unsigned short gs, __gsh;
 unsigned short fs, __fsh;
 unsigned short es, __esh;
 unsigned short ds, __dsh;
 unsigned long edi;
 unsigned long esi;
 unsigned long ebp;
 unsigned long esp;
 unsigned long ebx;
 unsigned long edx;
 unsigned long ecx;
 unsigned long eax;
 unsigned long trapno;
 unsigned long err;
 unsigned long eip;
 unsigned short cs, __csh;
 unsigned long eflags;
 unsigned long esp_at_signal;
 unsigned short ss, __ssh;
 struct _fpstate * fpstate;
 unsigned long oldmask;
 unsigned long cr2;
};
# 29 "/usr/include/bits/sigcontext.h" 2 3 4
# 334 "/usr/include/signal.h" 2 3 4


extern int sigreturn (struct sigcontext *__scp) throw ();






# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 344 "/usr/include/signal.h" 2 3 4




extern int siginterrupt (int __sig, int __interrupt) throw ();

# 1 "/usr/include/bits/sigstack.h" 1 3 4
# 26 "/usr/include/bits/sigstack.h" 3 4
struct sigstack
  {
    void *ss_sp;
    int ss_onstack;
  };



enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};
# 50 "/usr/include/bits/sigstack.h" 3 4
typedef struct sigaltstack
  {
    void *ss_sp;
    int ss_flags;
    size_t ss_size;
  } stack_t;
# 351 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/sys/ucontext.h" 1 3 4
# 23 "/usr/include/sys/ucontext.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/signal.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/signal.h" 3 4
# 1 "/usr/include/signal.h" 1 3 4
# 33 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 24 "/usr/include/sys/ucontext.h" 2 3 4



# 1 "/usr/include/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/sys/ucontext.h" 2 3 4



typedef int greg_t;





typedef greg_t gregset_t[19];



enum
{
  REG_GS = 0,

  REG_FS,

  REG_ES,

  REG_DS,

  REG_EDI,

  REG_ESI,

  REG_EBP,

  REG_ESP,

  REG_EBX,

  REG_EDX,

  REG_ECX,

  REG_EAX,

  REG_TRAPNO,

  REG_ERR,

  REG_EIP,

  REG_CS,

  REG_EFL,

  REG_UESP,

  REG_SS

};



struct _libc_fpreg
{
  unsigned short int significand[4];
  unsigned short int exponent;
};

struct _libc_fpstate
{
  unsigned long int cw;
  unsigned long int sw;
  unsigned long int tag;
  unsigned long int ipoff;
  unsigned long int cssel;
  unsigned long int dataoff;
  unsigned long int datasel;
  struct _libc_fpreg _st[8];
  unsigned long int status;
};


typedef struct _libc_fpstate *fpregset_t;


typedef struct
  {
    gregset_t gregs;


    fpregset_t fpregs;
    unsigned long int oldmask;
    unsigned long int cr2;
  } mcontext_t;


typedef struct ucontext
  {
    unsigned long int uc_flags;
    struct ucontext *uc_link;
    stack_t uc_stack;
    mcontext_t uc_mcontext;
    __sigset_t uc_sigmask;
    struct _libc_fpstate __fpregs_mem;
  } ucontext_t;
# 354 "/usr/include/signal.h" 2 3 4





extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)
     throw () __attribute__ ((__deprecated__));



extern int sigaltstack (__const struct sigaltstack *__restrict __ss,
   struct sigaltstack *__restrict __oss) throw ();







extern int sighold (int __sig) throw ();


extern int sigrelse (int __sig) throw ();


extern int sigignore (int __sig) throw ();


extern __sighandler_t sigset (int __sig, __sighandler_t __disp) throw ();





# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 36 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


typedef union
{
  char __size[36];
  long int __align;
} pthread_attr_t;


typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;




typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;


    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };
  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;
    int __writer;
  } __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 389 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/bits/sigthread.h" 1 3 4
# 31 "/usr/include/bits/sigthread.h" 3 4
extern int pthread_sigmask (int __how,
       __const __sigset_t *__restrict __newmask,
       __sigset_t *__restrict __oldmask)throw ();


extern int pthread_kill (pthread_t __threadid, int __signo) throw ();
# 390 "/usr/include/signal.h" 2 3 4






extern int __libc_current_sigrtmin (void) throw ();

extern int __libc_current_sigrtmax (void) throw ();



}
# 33 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 36 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 29 "/usr/include/sys/types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;
# 88 "/usr/include/sys/types.h" 3 4
typedef __off_t off_t;






typedef __off64_t off64_t;
# 105 "/usr/include/sys/types.h" 3 4
typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/sys/types.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 134 "/usr/include/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 195 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 217 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 218 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/select.h" 1 3 4
# 31 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 35 "/usr/include/sys/select.h" 2 3 4
# 44 "/usr/include/sys/select.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 45 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 69 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/sys/select.h" 2 3 4
# 55 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 67 "/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 99 "/usr/include/sys/select.h" 3 4
extern "C" {
# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 121 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);


}
# 221 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 30 "/usr/include/sys/sysmacros.h" 3 4
__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     throw ();
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     throw ();
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     throw ();
# 224 "/usr/include/sys/types.h" 2 3 4




typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;
# 273 "/usr/include/sys/types.h" 3 4
}
# 33 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 2 3 4
# 36 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 2 3 4

typedef int uc_id_t;
typedef int uc_pid_t;
typedef int uc_gid_t;
typedef int uc_uid_t;
typedef int uc_pthread_t;
typedef int irqreturn_t;
typedef int atomic_t;
typedef struct __wait_queue wait_queue_t;
typedef int (*wait_queue_func_t)(wait_queue_t *wait, unsigned int mode, int sync, void *key);
typedef short unsigned int umode_t;
typedef unsigned int __u32;
# 37 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 2 3 4
# 56 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
typedef void (*uc_sighandler_t)(int);

typedef int uc_sig_atomic_t;


typedef uc_sighandler_t uc_sig_t;

union uc_sigval {
 int sival_int;
 void *sival_ptr;
};

typedef struct uc_pthread_attr uc_pthread_attr_t;



struct uc_sigevent{
 int sigev_notify;
 int sigev_signo;
 int si_code;
 union uc_sigval sigev_value;
 void (*sigev_notify_function)(union uc_sigval);
 uc_pthread_attr_t *sigev_notify_attributes;
 struct uc_timer_data *timer;
};

typedef struct{
 bool signal[64];
} uc_sigset_t;
# 93 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
typedef struct uc_siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 uc_pid_t si_pid;
 uc_uid_t si_uid;
 void *si_addr;
 int si_status;
 long si_band;
 union uc_sigval si_value;
 struct uc_timer_data *timer;
} uc_siginfo_t;




struct uc_sigaction {
 uc_sighandler_t sa_handler;
 void (*sa_sigaction)(int, uc_siginfo_t*, void*);
 int sa_flags;
 uc_sigset_t sa_mask;
};

void uc_signal_default(int signal);
void uc_signal_ignore(int signal);
void uc_signal_error(int signal);
# 293 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
int uc_kill(uc_pid_t, int);
int uc_killpg(uc_pid_t, int);
int uc_pthread_kill(uc_pthread_t, int);
int uc_pthread_sigmask(int, const uc_sigset_t *, uc_sigset_t *);
int uc_raise(int);
int uc_sigaction(int, const struct uc_sigaction *, struct uc_sigaction *);
int uc_sigaddset(uc_sigset_t *, int);
int uc_sigdelset(uc_sigset_t *, int);
int uc_sigemptyset(uc_sigset_t *);
int uc_sigfillset(uc_sigset_t *);

int uc_sigismember(const uc_sigset_t *, int);
uc_sighandler_t uc_signal(int sig, uc_sighandler_t handler);
int uc_sigpending(uc_sigset_t *);
int uc_sigprocmask(int, const uc_sigset_t *, uc_sigset_t *);
int uc_sigqueue(uc_pid_t, int, const union uc_sigval);
int uc_sigsuspend(const uc_sigset_t *);
int uc_sigtimedwait(const uc_sigset_t *, uc_siginfo_t *, const struct timespec *);
int uc_sigwait(const uc_sigset_t *, int *);
int uc_sigwaitinfo(const uc_sigset_t *, uc_siginfo_t *);

void (*uc_bsd_signal(int sig, void (*handler)(int)))(int);
void (*uc_sigset(int sig, void (*disp)(int)))(int);
int uc_sighold(int);
int uc_sigignore(int);
int uc_sigpause(int);
int uc_sigrelse(int);
int uc_siginterrupt(int, int);
# 39 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_os_defines.h" 1 3 4
# 40 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 73 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 3 4
const struct timespec uc_infinite_time = {0x7fffffff,0x7fffffff};

const struct timespec uc_timespec_zero={0,0};


clock_t uc_clock();
time_t uc_time(time_t *);
double uc_difftime(time_t time1, time_t time0);
int uc_nanosleep(const struct timespec *nseconds, struct timespec *rem);


int uc_clock_getcpuclockid(int pid, clockid_t *clockid);


int uc_clock_getres(clockid_t clock_id, struct timespec *rqtp);

int uc_clock_gettime(clockid_t clock_id, struct timespec *rqtp);

int uc_clock_settime(clockid_t clock_id, const struct timespec *rqtp);


int uc_clock_nanosleep(clockid_t clock_id, int flags,
        const struct timespec *rqtp, struct timespec *rmtp);

int uc_timer_create(clockid_t clockid, struct uc_sigevent *s_ev, timer_t *timer);
int uc_timer_delete(timer_t timer);
int uc_timer_gettime(timer_t time, struct itimerspec * spec);
int uc_timer_getoverrun(timer_t timer);
int uc_timer_settime(timer_t timer, int flags, const struct itimerspec *i_spec,
      struct itimerspec *o_spec);
# 34 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 46 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4






# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 1 3 4
# 39 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache_line.h" 1 3 4
# 41 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache_line.h" 3 4
extern "C" {


typedef struct icache_line_s {
        short size;
 char num_set;
 char hit;
} uc_icache_line_t;


typedef struct icache_tag_s {
 int tag;
 int iStart;
 int iEnd;
} uc_icache_tag_t;


 void ic_insert_line(uc_icache_line_t *line);
 void ic_search_tag(int tag, int iStart, int iEnd);

}
# 40 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 2 3 4


class UC_cpu_class;





class UC_icache_class {
public:
 UC_icache_class(int size, int assoc, int line_size, int instr_size, UC_cpu_class *cpu);
 ~UC_icache_class();

 void initialize_icache_size(int size);
 void insert_line(uc_icache_line_t *line);
 void miss_time(unsigned long long time_ns);
 void flush(void);
 unsigned long long m_total_misses;
 unsigned long long m_stall_cycles;

 UC_cpu_class *m_cpu;

 int m_annotate;
 unsigned long long m_last_annotation;

private:

 int m_size;
 int m_assoc;
 int m_line_size;
 int m_instr_size;
 int m_num_lines;
 int m_num_sets;
 int m_set_size;
 bool m_enable;
 int *m_victim_line;
 int *m_histogram;
 uc_icache_line_t ***m_data;
};
# 53 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4


extern unsigned long long uc_segment_time;
extern unsigned long long uc_segment_instr;
class UC_rtos_class;
class UC_process_class;
extern __thread UC_rtos_class *qt_parent_rtos;
extern __thread UC_process_class *qt_parent_process;

# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_posix_c.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_posix_c.h" 3 4
void UC_eat_time(unsigned long long time);
# 63 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/low_level/uc_ll_bus_io.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/low_level/uc_ll_bus_io.h" 3 4
char uc_ioread8(void *addr);
void uc_iowrite8(unsigned char value, void *addr);
long uc_ioread32(void *addr);
void uc_iowrite32(unsigned long value, void *addr);
int uc_ioreadBurst(void **value,int size, void *addr);
int uc_iowriteBurst(void *value, int size, void *addr);
# 64 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "<lÃ­nea de orden>" 2
# 1 "q_plsf_5.c"
# 27 "q_plsf_5.c"
# 1 "../common/cnst.h" 1
# 27 "../common/cnst.h"
# 1 "../common/typedef.h" 1
# 20 "../common/typedef.h"
typedef short Word16;
typedef int Word32;
typedef int Flag;
# 28 "../common/cnst.h" 2



static const Word16 F_gamma1[10] =
{
    29491, 26542, 23888, 21499, 19349,
    17414, 15672, 14105, 12694, 11425
};
static const Word16 F_gamma2[10] =
{
    19661, 11797, 7078, 4247, 2548,
    1529, 917, 550, 330, 198
};
# 28 "q_plsf_5.c" 2
# 1 "../common/typedef.h" 1
# 29 "q_plsf_5.c" 2
# 1 "../common/basic_op.h" 1





extern Flag Overflow;
extern Flag Carry;
# 21 "../common/basic_op.h"
Word16 add (Word16 var1, Word16 var2);
Word16 sub (Word16 var1, Word16 var2);
Word16 abs_s (Word16 var1);
Word16 shl (Word16 var1, Word16 var2);
Word16 shr (Word16 var1, Word16 var2);
Word16 mult (Word16 var1, Word16 var2);
Word32 L_mult (Word16 var1, Word16 var2);
Word16 negate (Word16 var1);
Word16 extract_h (Word32 L_var1);
Word16 extract_l (Word32 L_var1);
Word16 round (Word32 L_var1);
Word32 L_mac (Word32 L_var3, Word16 var1, Word16 var2);
Word32 L_msu (Word32 L_var3, Word16 var1, Word16 var2);
Word32 L_macNs (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_msuNs (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_add (Word32 L_var1, Word32 L_var2);
Word32 L_sub (Word32 L_var1, Word32 L_var2);
Word32 L_add_c (Word32 L_var1, Word32 L_var2);
Word32 L_sub_c (Word32 L_var1, Word32 L_var2);
Word32 L_negate (Word32 L_var1);
Word16 mult_r (Word16 var1, Word16 var2);
Word32 L_shl (Word32 L_var1, Word16 var2);
Word32 L_shr (Word32 L_var1, Word16 var2);
Word16 shr_r (Word16 var1, Word16 var2);

Word16 mac_r (Word32 L_var3, Word16 var1, Word16 var2);

Word16 msu_r (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_deposit_h (Word16 var1);
Word32 L_deposit_l (Word16 var1);

Word32 L_shr_r (Word32 L_var1, Word16 var2);

Word32 L_abs (Word32 L_var1);
Word32 L_sat (Word32 L_var1);
Word16 norm_s (Word16 var1);
Word16 div_s (Word16 var1, Word16 var2);
Word16 norm_l (Word32 L_var1);
# 30 "q_plsf_5.c" 2
# 1 "../common/sig_proc.h" 1






Word32 Inv_sqrt (
    Word32 L_x
);
void Log2 (
    Word32 L_x,
    Word16 *exponent,
    Word16 *fraction
);
Word32 Pow2 (
    Word16 exponent,
    Word16 fraction
);



void Init_Pre_Process (void);
void Pre_Process (
    Word16 uc_signal[],
    Word16 lg
);

Word16 Autocorr (
    Word16 x[],
    Word16 m,
    Word16 r_h[],
    Word16 r_l[],
    const Word16 wind[]
);
void Lag_window (
    Word16 m,
    Word16 r_h[],
    Word16 r_l[]
);
void Levinson (
    Word16 Rh[],
    Word16 Rl[],
 Word16 old_A[],
    Word16 A[],
    Word16 rc[]
);
void Az_lsp (
    Word16 a[],
    Word16 lsp[],
    Word16 old_lsp[]
);
void Lsp_Az (
    Word16 lsp[],
    Word16 a[]
);
void Lsf_lsp (
    Word16 lsf[],
    Word16 lsp[],
    Word16 m
);
void Lsp_lsf (
    Word16 lsp[],
    Word16 lsf[],
    Word16 m
);
void Reorder_lsf (
    Word16 *lsf,
    Word16 min_dist,
    Word16 n
);
void Weight_Fac (
    Word16 gamma,
    Word16 fac[]
);
void Weight_Ai (
    Word16 a[],
    const Word16 fac[],
    Word16 a_exp[]
);
void Residu (
    Word16 a[],
    Word16 x[],
    Word16 y[],
    Word16 lg
);
void Syn_filt (
    Word16 a[],
    Word16 x[],
    Word16 y[],
    Word16 lg,
    Word16 mem[],
    Word16 update
);
void Convolve (
    Word16 x[],
    Word16 h[],
    Word16 y[],
    Word16 L
);

void agc (
    Word16 *sig_in,
    Word16 *sig_out,
    Word16 agc_fac,
    Word16 l_trm,
    Word16 *past_gain
);
void agc2 (
    Word16 *sig_in,
    Word16 *sig_out,
    Word16 l_trm
);
void preemphasis (
    Word16 *uc_signal,
    Word16 *mem_pre,
    Word16 g,
    Word16 L
);



void Copy (
    Word16 x[],
    Word16 y[],
    Word16 L
);
void Set_zero (
    Word16 x[],
    Word16 L
);
# 31 "q_plsf_5.c" 2

# 1 "dtx_cod.h" 1
# 17 "dtx_cod.h"
# 1 "../common/dtx.h" 1
# 57 "../common/dtx.h"
static const Word16 SID_codeword_bit_idx[95] =
{
     45, 46, 48, 49, 50, 51, 52, 53, 54, 55,
     56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
     66, 67, 68, 94, 95, 96, 98, 99, 100, 101,
    102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
    112, 113, 114, 115, 116, 117, 118, 148, 149, 150,
    151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
    161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
    171, 196, 197, 198, 199, 200, 201, 202, 203, 204,
    205, 206, 207, 208, 209, 212, 213, 214, 215, 216,
    217, 218, 219, 220, 221
};


void update_lsf_history (
    Word16 lsf1[10],
    Word16 lsf2[10],
    Word16 lsf_old[7][10]
);

void update_lsf_p_CN (
    Word16 lsf_old[7][10],
    Word16 lsf_p_CN[10]
);


Word16 update_gcode0_CN (
    Word16 gain_code_old_tx[4 * 7]
);


void build_CN_code (
    Word16 cod[],
    Word32 *seed
);


Word16 pseudonoise (
    Word32 *shift_reg,
    Word16 no_bits
);
# 18 "dtx_cod.h" 2
# 28 "dtx_cod.h"
void aver_lsf_history (
    Word16 lsf_old[7][10],
    Word16 lsf1[10],
    Word16 lsf2[10],
    Word16 lsf_aver[10]
);


Word16 compute_CN_excitation_gain (
    Word16 res2[40]
);


Word16 aver_gain_code_history (
    Word16 CN_excitation_gain,
    Word16 gain_code_old[4 * 7]
);
# 33 "q_plsf_5.c" 2



void Lsf_wt (
    Word16 *lsf,
     Word16 *wf2
);

Word16 Vq_subvec (
    Word16 *lsf_r1,
    Word16 *lsf_r2,
    const Word16 *dico,
    Word16 *wf1,
    Word16 *wf2,
    Word16 dico_size
);
Word16 Vq_subvec_s (
    Word16 *lsf_r1,
    Word16 *lsf_r2,
    const Word16 *dico,
    Word16 *wf1,
    Word16 *wf2,
    Word16 dico_size
);
# 66 "q_plsf_5.c"
# 1 "../common/q_plsf_5.tab" 1







static const Word16 mean_lsf[10] =
{
    1384,
    2077,
    3420,
    5108,
    6742,
    8122,
    9863,
    11092,
    12714,
    13701
};
# 30 "../common/q_plsf_5.tab"
static const Word16 dico1_lsf[128 * 4] =
{
    -451, -1065, -529, -1305,
    -450, -756, -497, -863,
    -384, -619, -413, -669,
    -317, -538, -331, -556,
    -414, -508, -424, -378,
    -274, -324, -434, -614,
    -226, -500, -232, -514,
    -263, -377, -298, -410,
    -151, -710, -174, -818,
    -149, -412, -156, -429,
    -288, -462, -186, -203,
    -170, -302, -191, -321,
    -131, -147, -297, -395,
    -228, -214, -245, -192,
    -67, -316, -71, -327,
    -104, -205, -94, -183,
    -143, -38, -193, -95,
    16, -76, -124, -248,
    23, -237, 24, -244,
    18, -136, 44, -111,
    -33, -24, -25, 0,
    149, 19, 23, -143,
    158, -169, 174, -181,
    133, -55, 165, -26,
    111, 84, 98, 75,
    87, 183, -115, -11,
    -8, 130, 11, 170,
    254, 77, 205, 17,
    183, 112, 262, 194,
    202, 287, 95, 189,
    -42, -105, 234, 179,
    39, 186, 163, 345,
    332, 199, 299, 161,
    -54, 285, -78, 281,
    -133, 141, -182, 111,
    249, 341, 271, 364,
    93, 403, 75, 391,
    92, 510, -138, 220,
    -185, -29, -34, 361,
    -115, 320, 3, 554,
    99, 286, 218, 591,
    -245, 406, -268, 453,
    0, 580, 25, 606,
    275, 532, 148, 450,
    -73, 739, -285, 518,
    -288, 94, -203, 674,
    -140, -74, 205, 714,
    -114, 299, 176, 923,
    182, 557, 240, 705,
    -16, 513, 485, 593,
    293, 384, 451, 617,
    -38, 50, 563, 529,
    303, 209, 459, 363,
    433, 452, 450, 454,
    367, 606, 477, 741,
    432, 353, 368, 267,
    361, 716, 273, 583,
    453, 166, 510, 172,
    201, 629, 274, 191,
    568, 639, 302, 298,
    634, 387, 643, 350,
    587, 560, 612, 565,
    600, 788, 487, 672,
    512, 1015, 321, 333,
    357, 854, -125, 413,
    474, 712, 17, -151,
    564, 285, 270, -241,
    971, 889, 489, 220,
    510, 896, 549, 924,
    327, 825, 290, 911,
    540, 1108, 158, 805,
    199, 957, 511, 730,
    100, 874, 13, 791,
    435, 632, 676, 972,
    249, 900, 467, 1218,
    781, 1074, 585, 785,
    -23, 669, 267, 1043,
    619, 1084, 615, 1145,
    622, 905, 916, 1049,
    80, 331, 584, 1075,
    89, 639, 988, 961,
    770, 720, 798, 699,
    492, 447, 899, 627,
    271, 1188, 725, 1333,
    87, 603, 832, 1603,
    616, 1127, 890, 1505,
    1000, 1156, 866, 1009,
    995, 827, 1149, 858,
    817, 1450, 773, 1320,
    500, 1389, 312, 1153,
    -20, 1084, 64, 1283,
    2, 1172, 399, 1869,
    514, 1706, 502, 1636,
    886, 1522, 416, 600,
    1131, 1350, 1275, 1390,
    889, 1795, 914, 1766,
    227, 1183, 1250, 1826,
    505, 1854, 919, 2353,
    -199, 431, 152, 1735,
    -213, -28, 392, 1334,
    -153, -52, 978, 1151,
    -323, -400, 813, 1703,
    -136, 84, 1449, 2015,
    -331, -143, -137, 1192,
    -256, 534, -157, 1031,
    -307, -439, 542, 731,
    -329, -420, -97, 616,
    -362, -168, -322, 366,
    -247, -110, -211, 89,
    -196, -309, 20, 59,
    -364, -463, -286, 89,
    -336, 175, -432, 141,
    -379, -190, -434, -196,
    -79, 150, -278, -227,
    -280, 166, -555, -422,
    -155, 541, -366, 54,
    -29, -83, -301, -774,
    186, 628, -397, -264,
    242, 293, -197, -585,
    124, 410, 53, -133,
    10, 340, -570, -1065,
    65, -446, 68, -493,
    383, 937, -357, -711,
    -359, -250, -677, -1068,
    292, -26, 363, 6,
    607, 1313, -127, -10,
    1513, 1886, 713, 972,
    1469, 2181, 1443, 2016
};

static const Word16 dico2_lsf[256 * 4] =
{
    -1631, -1600, -1796, -2290,
    -1027, -1770, -1100, -2025,
    -1277, -1388, -1367, -1534,
    -947, -1461, -972, -1524,
    -999, -1222, -1020, -1172,
    -815, -987, -992, -1371,
    -1216, -1006, -1289, -1094,
    -744, -1268, -755, -1293,
    -862, -923, -905, -984,
    -678, -1051, -685, -1050,
    -1087, -985, -1062, -679,
    -989, -641, -1127, -976,
    -762, -654, -890, -806,
    -833, -1091, -706, -629,
    -621, -806, -640, -812,
    -775, -634, -779, -543,
    -996, -565, -1075, -580,
    -546, -611, -572, -619,
    -760, -290, -879, -526,
    -823, -462, -795, -253,
    -553, -415, -589, -439,
    -533, -340, -692, -935,
    -505, -772, -702, -1131,
    -263, -306, -971, -483,
    -445, -74, -555, -548,
    -614, -129, -693, -234,
    -396, -246, -475, -250,
    -265, -404, -376, -514,
    -417, -510, -300, -313,
    -334, -664, -463, -814,
    -386, -704, -337, -615,
    -234, -201, -233, -239,
    -167, -567, -203, -619,
    -147, -415, -115, -352,
    -166, -750, -171, -761,
    -270, -879, -264, -903,
    -367, -744, 43, -475,
    14, -653, 43, -670,
    11, -448, -59, -521,
    -126, -119, -155, -613,
    -42, -863, -27, -931,
    136, -483, 183, -468,
    55, -298, 55, -304,
    313, -609, 313, -720,
    322, -167, 100, -541,
    -3, -119, -111, -187,
    233, -236, 260, -234,
    26, -165, 134, -45,
    -40, -549, 360, -203,
    378, -388, 450, -383,
    275, 20, 182, -103,
    246, -111, 431, 37,
    462, -146, 487, -157,
    -284, -59, 503, -184,
    24, 53, -3, 54,
    122, 259, 333, 66,
    484, 104, 436, 68,
    195, 116, 190, 206,
    269, -9, 482, 352,
    382, 285, 399, 277,
    452, 256, 69, 186,
    13, 297, -13, 259,
    -95, 30, 56, 394,
    196, 425, 205, 456,
    281, 577, 15, 191,
    375, 290, 407, 576,
    -56, 227, 544, 405,
    0, 549, -92, 528,
    -229, 351, -245, 338,
    -362, 435, 167, 527,
    -75, 302, 91, 824,
    129, 599, 496, 679,
    186, 749, 153, 737,
    -281, 600, -348, 615,
    -236, 769, 41, 881,
    38, 890, -220, 841,
    -357, 883, -393, 903,
    -634, 474, -444, 850,
    -175, 678, -493, 242,
    -519, 785, -714, 582,
    -541, 366, -543, 434,
    -597, 500, -765, 222,
    -702, 917, -743, 962,
    -869, 501, -899, 548,
    -379, 200, -435, 157,
    -819, 214, -861, 157,
    -614, 40, -632, 94,
    -883, -54, -741, 516,
    -501, 298, -614, -171,
    -870, -161, -865, -23,
    -818, 93, -1015, -267,
    -662, -359, -549, 2,
    -442, -121, -377, 0,
    -227, 33, -414, -126,
    -129, 212, -934, 34,
    -1082, -282, -1119, -268,
    -710, -825, -420, -191,
    -1076, -928, -917, -93,
    -628, -358, 97, 7,
    -206, -393, -101, 24,
    -203, 38, -168, 83,
    -599, -423, -279, 426,
    -700, 118, -75, 206,
    -981, -673, -680, 417,
    -367, 37, -279, 474,
    -129, -318, 319, 296,
    -626, -39, 343, 602,
    -696, -39, -303, 940,
    104, 233, -380, 137,
    -36, 269, -75, -214,
    120, 43, -529, -477,
    459, 164, -202, -229,
    -49, -167, 609, 792,
    98, -220, 915, 148,
    293, 283, 869, 91,
    575, 394, 326, -78,
    717, 67, 365, -323,
    616, -36, 731, 27,
    619, 238, 632, 273,
    448, 99, 801, 476,
    869, 273, 685, 64,
    789, 72, 1021, 217,
    793, 459, 734, 360,
    646, 480, 360, 322,
    429, 464, 638, 430,
    756, 363, 1000, 404,
    683, 528, 602, 615,
    655, 413, 946, 687,
    937, 602, 904, 604,
    555, 737, 786, 662,
    467, 654, 362, 589,
    929, 710, 498, 478,
    415, 420, 693, 883,
    813, 683, 781, 925,
    913, 939, 726, 732,
    491, 853, 531, 948,
    734, 963, 315, 808,
    761, 755, 1144, 760,
    655, 1076, 826, 1057,
    1091, 838, 1003, 808,
    1047, 1133, 659, 1101,
    992, 1050, 1074, 1075,
    971, 694, 1226, 1054,
    571, 841, 884, 1404,
    1379, 1096, 1080, 861,
    1231, 735, 1284, 760,
    1272, 991, 1367, 1053,
    1257, 700, 1050, 534,
    988, 453, 1264, 599,
    1140, 679, 1621, 815,
    1384, 521, 1317, 393,
    1564, 805, 1448, 686,
    1068, 648, 875, 307,
    1083, 361, 1047, 317,
    1417, 964, 675, 571,
    1152, 79, 1114, -47,
    1530, 311, 1721, 314,
    1166, 689, 514, -94,
    349, 282, 1412, 328,
    1025, 487, -65, 57,
    805, 970, 36, 62,
    769, -263, 791, -346,
    637, 699, -137, 620,
    534, 541, -735, 194,
    711, 300, -268, -863,
    926, 769, -708, -428,
    506, 174, -892, -630,
    435, 547, -1435, -258,
    621, 471, -1018, -1368,
    -393, 521, -920, -686,
    -25, 20, -982, -1156,
    340, 9, -1558, -1135,
    -352, 48, -1579, -402,
    -887, 6, -1156, -888,
    -548, -352, -1643, -1168,
    -159, 610, -2024, -963,
    -225, 193, -1656, -1960,
    -245, -493, -964, -1680,
    -936, -635, -1299, -1744,
    -1388, -604, -1540, -835,
    -1397, -135, -1588, -290,
    -1670, -712, -2011, -1632,
    -1663, -27, -2258, -811,
    -1157, 184, -1265, 189,
    -1367, 586, -2011, 201,
    -790, 712, -1210, 3,
    -1033, 808, -1251, 830,
    -111, 635, -1636, 447,
    -463, -949, -445, -928,
    -504, -1162, -501, -1211,
    144, -351, -372, -1052,
    -283, -1059, -279, -1123,
    -575, -1438, -587, -1614,
    -935, -984, 229, 690,
    -921, -719, -403, 1362,
    -685, -465, 874, 397,
    -509, -46, 317, 1334,
    -485, 456, 813, 439,
    -411, 339, 898, 1067,
    -425, 46, 1441, 497,
    -909, -800, 1465, 1046,
    -254, -321, 1430, 1165,
    68, 350, 1034, 666,
    370, 11, 1311, 790,
    143, 232, 1041, 1562,
    -114, 663, 1616, 1078,
    454, 579, 1275, 1040,
    -76, 909, 752, 1067,
    153, 512, 348, 1214,
    614, 385, 1843, 808,
    269, 1034, 203, 1086,
    652, 1017, 1783, 1130,
    429, 1327, 387, 1384,
    -49, 1183, -72, 1215,
    -416, 1001, 544, 1749,
    -352, 1223, -502, 1199,
    -589, 569, -227, 1630,
    -142, 1578, -230, 1715,
    -714, 1288, -838, 1398,
    1131, 1357, -208, 1232,
    437, 965, -929, 818,
    811, 1410, 859, 1507,
    164, 1212, 1387, 1793,
    484, 1874, 456, 2063,
    996, 1170, 1326, 1402,
    1316, 1360, 1135, 1262,
    1234, 1618, 1361, 1768,
    1421, 1227, 1584, 1347,
    854, 672, 1685, 1566,
    1139, 1270, 2016, 1825,
    1773, 1581, 1532, 1460,
    1487, 946, 1659, 1021,
    1744, 1212, 1392, 977,
    1772, 1161, 1826, 1164,
    1718, 1429, 1973, 1591,
    1185, 864, 2132, 1061,
    1799, 814, 1838, 757,
    2104, 1315, 2054, 1258,
    2113, 915, 2331, 930,
    1467, 1147, 2590, 1439,
    2245, 1744, 2090, 1620,
    2358, 1454, 2666, 1506,
    1876, 1837, 2070, 1975,
    1739, 1577, 682, 1289,
    1584, 2045, 1454, 2098,
    2498, 2004, 2711, 2066,
    726, 1588, 2756, 2336,
    228, 847, 2456, 1659,
    36, 301, 1942, 1957,
    -446, -96, 2154, 1396,
    1533, 1101, 14, 608,
    -923, -732, 1383, 1982,
    1345, 952, -680, 321,
    1281, 1268, -1594, 365,
    941, 946, -1737, -822,
    2374, 2787, 1821, 2788
};

static const Word16 dico3_lsf[256 * 4] =
{
    -1812, -2275, -1879, -2537,
    -1640, -1848, -1695, -2004,
    -1220, -1912, -1221, -2106,
    -1559, -1588, -1573, -1556,
    -1195, -1615, -1224, -1727,
    -1359, -1151, -1616, -1948,
    -1274, -1391, -1305, -1403,
    -1607, -1179, -1676, -1311,
    -1443, -1478, -1367, -898,
    -1256, -1059, -1331, -1134,
    -982, -1133, -1149, -1504,
    -1080, -1308, -1020, -1183,
    -980, -1486, -967, -1495,
    -988, -922, -1047, -1077,
    -838, -1179, -858, -1222,
    -1131, -1041, -1064, -767,
    -872, -1157, -701, -880,
    -706, -906, -774, -1016,
    -578, -1080, -801, -1478,
    -591, -1111, -592, -1146,
    -713, -1388, -640, -1376,
    -597, -1059, -416, -903,
    -686, -832, -661, -708,
    -444, -868, -490, -921,
    -374, -776, -619, -1170,
    -585, -549, -769, -795,
    -435, -659, -530, -741,
    -498, -837, -357, -597,
    -279, -871, -243, -887,
    -282, -665, -280, -667,
    -165, -560, -394, -903,
    -362, -410, -448, -583,
    -409, -574, -313, -357,
    -637, -548, -570, -436,
    -896, -504, -382, -757,
    -58, -481, -165, -618,
    -191, -374, -234, -382,
    -222, -683, -25, -480,
    -418, -359, -730, -353,
    -324, -157, -432, -322,
    -394, -303, -284, -104,
    -601, -289, -556, -196,
    -588, -150, -659, -608,
    -473, -24, -68, -448,
    -474, -8, -506, -45,
    -748, -184, -844, -252,
    -901, -91, -584, -97,
    -652, 138, -764, -131,
    -678, -12, -670, 165,
    -259, -3, -840, -107,
    -909, 37, -992, 44,
    -854, -415, -839, 13,
    -1001, -271, -1026, -309,
    -798, -478, -832, -488,
    -943, 168, -1112, -387,
    -1185, -101, -1183, -40,
    -941, -316, -1030, -770,
    -1044, -625, -1081, -538,
    -1224, -299, -1312, -436,
    -1197, -663, -1167, -161,
    -1216, -690, -1237, -831,
    -1432, -720, -1403, -493,
    -898, -740, -922, -801,
    -1102, -402, -1579, -964,
    -1061, -638, -1269, -1438,
    -1499, -934, -1502, -895,
    -1598, -564, -1723, -717,
    -606, -597, -1166, -1085,
    -1369, -468, -1946, -1493,
    -1838, -953, -1932, -931,
    -1499, -188, -1635, -421,
    -1457, -338, -1448, -22,
    -1942, -422, -2006, -249,
    -496, -114, -1910, -755,
    -1289, 174, -1451, -109,
    -482, -257, -1221, -508,
    -1617, 151, -1694, 208,
    -654, 107, -1651, 29,
    -1141, 279, -1215, 306,
    -1228, -506, -730, -175,
    -1236, -101, -969, 551,
    -870, 278, -823, 315,
    -563, 376, -1051, 228,
    -507, 280, -599, 281,
    -758, 253, -305, 379,
    -755, -134, -611, 660,
    -824, 536, -817, 646,
    -413, 49, -341, 177,
    -453, 526, -482, 589,
    -71, 339, -657, 264,
    -244, 295, -237, 315,
    -387, 569, -506, -9,
    -377, 14, -160, 661,
    -216, 40, -308, -46,
    95, 214, -242, 167,
    -86, 192, -56, 27,
    -76, 31, 36, 309,
    -106, -182, -113, 74,
    -441, -22, 23, 139,
    81, -11, 44, 15,
    -87, -137, -118, -207,
    -158, -58, 272, -92,
    -156, -441, 8, -136,
    128, -221, 101, -218,
    40, -197, -76, -456,
    9, -445, 33, -423,
    226, 60, 73, -222,
    156, -399, 280, -318,
    245, -341, 166, -499,
    339, -190, 327, -219,
    325, -137, -89, -596,
    100, -627, 144, -677,
    487, 28, 252, -391,
    214, -41, 282, -28,
    99, -286, 331, 49,
    459, -388, 565, -369,
    436, 28, 336, -9,
    397, -167, 618, 34,
    596, -17, 561, -140,
    299, 79, 522, 125,
    203, 2, 244, 288,
    255, 211, 175, 82,
    596, 187, 517, 108,
    381, 255, 365, 297,
    497, 352, 327, -82,
    25, 210, 371, 245,
    261, 3, 545, 449,
    140, 294, 44, 295,
    212, 347, 244, 494,
    331, 528, 201, 307,
    349, 411, 613, 284,
    614, 413, 464, 322,
    624, 397, 97, 200,
    -160, 384, 149, 362,
    495, 525, 269, 585,
    33, 491, -121, 433,
    427, 611, 498, 516,
    171, 443, 497, 666,
    440, 275, 566, 575,
    146, 639, 155, 670,
    -33, 173, 212, 696,
    -166, 601, -191, 695,
    -489, 503, 175, 742,
    214, 476, 372, 1083,
    578, 530, 586, 777,
    425, 874, 315, 841,
    374, 848, -165, 565,
    35, 991, -39, 1062,
    329, 712, 786, 840,
    645, 795, 661, 676,
    571, 918, 632, 1079,
    673, 817, 318, 388,
    874, 1012, 564, 848,
    880, 620, 557, 479,
    671, 453, 692, 468,
    840, 642, 844, 645,
    506, 428, 897, 567,
    837, 387, 962, 499,
    691, 561, 939, 926,
    783, 296, 790, 268,
    1028, 530, 874, 329,
    548, 143, 675, 291,
    503, 66, 1041, 359,
    786, 97, 805, 33,
    837, 470, 511, 49,
    1092, 327, 1174, 323,
    3, 242, 872, 474,
    689, 429, 1329, 678,
    1042, 620, 1109, 664,
    321, 193, 889, 950,
    1153, 874, 893, 635,
    877, 862, 948, 913,
    1293, 665, 1320, 639,
    997, 793, 1402, 1030,
    1176, 1012, 1110, 959,
    1410, 925, 1403, 915,
    543, 862, 1116, 1222,
    835, 1190, 835, 1190,
    959, 1148, 1147, 1376,
    1300, 1193, 1415, 1231,
    1335, 1341, 746, 1092,
    1711, 1283, 1389, 1073,
    1334, 1566, 1153, 1475,
    1645, 1137, 1825, 1220,
    1056, 1382, 1521, 1730,
    1632, 1545, 1620, 1542,
    855, 1596, 865, 1667,
    693, 885, 1716, 1519,
    1167, 1296, 2209, 1760,
    1952, 1493, 2020, 1482,
    1534, 1866, 1694, 2008,
    1566, 748, 1761, 825,
    294, 1392, 1084, 2058,
    621, 1315, 365, 1287,
    198, 1028, 488, 1408,
    249, 403, 1014, 1561,
    324, 363, 1645, 1044,
    193, 367, 2034, 1859,
    -251, 579, 750, 994,
    -243, 30, 1325, 879,
    -28, -169, 624, 917,
    -453, 159, 186, 1370,
    -614, 6, 537, 392,
    -94, -291, 781, 229,
    -128, -298, 245, 491,
    -701, -648, 972, 789,
    -501, -640, 178, 255,
    -365, -390, -255, 317,
    -958, -294, -191, 228,
    -775, -447, 157, -237,
    -657, -720, -407, 92,
    -117, -611, 334, -230,
    -679, -1084, -144, -317,
    -901, -861, -738, -360,
    -85, -727, -90, -787,
    100, -22, -391, -263,
    -56, -73, -337, -754,
    5, -189, -706, -624,
    89, -344, -135, -1113,
    -353, -237, -684, -1135,
    -275, -1102, -269, -1203,
    152, 145, -722, -1232,
    49, 80, -1248, -776,
    -248, 391, -732, -547,
    469, 218, -255, -864,
    69, 366, -166, -485,
    -688, 191, -1212, -1196,
    -170, -169, -1308, -1631,
    321, 470, -1419, -1243,
    -64, 272, -1361, -248,
    492, 565, -721, -609,
    195, 485, -573, -133,
    427, 202, -171, -118,
    199, 575, 2, -31,
    694, 755, -1366, -39,
    552, 557, -489, 271,
    680, 537, 13, -453,
    855, 954, -133, -52,
    -81, 738, -1169, 637,
    1055, 1059, -95, 676,
    1259, 1081, 489, 305,
    -449, 954, -534, 996,
    -969, 866, -1058, 1059,
    -1294, 618, -1416, 617,
    -458, 1366, -159, 1821,
    -774, -528, -14, 1110,
    -1202, -901, -772, 433,
    -1256, -1255, -1011, -302,
    -602, -585, -759, -1618,
    -760, -1549, -840, -1921,
    -816, -539, -1769, -2235,
    -227, -36, -2034, -1831,
    -2107, -1126, -2471, -1816,
    -1470, 252, -2701, -415,
    -571, -467, 1509, 1554,
    2180, 1975, 2326, 2020
};

static const Word16 dico4_lsf[256 * 4] =
{
    -1857, -1681, -1857, -1755,
    -2056, -1150, -2134, -1654,
    -1619, -1099, -1704, -1131,
    -1345, -1608, -1359, -1638,
    -1338, -1293, -1325, -1265,
    -1664, -1649, -1487, -851,
    -1346, -1832, -1413, -2188,
    -1282, -681, -1785, -1649,
    -966, -1082, -1183, -1676,
    -1054, -1073, -1142, -1158,
    -1207, -744, -1274, -997,
    -934, -1383, -927, -1416,
    -1010, -1305, -783, -955,
    -1049, -900, -993, -817,
    -737, -823, -972, -1189,
    -738, -1094, -738, -1154,
    -784, -801, -810, -786,
    -892, -520, -1000, -818,
    -644, -965, -577, -882,
    -541, -694, -671, -917,
    -595, -642, -646, -615,
    -956, -621, -925, -515,
    -727, -483, -815, -485,
    -840, -578, -440, -713,
    -578, -325, -657, -670,
    -386, -570, -441, -666,
    -514, -787, -392, -529,
    -522, -453, -487, -423,
    -616, -585, -617, -157,
    -662, -268, -680, -348,
    -322, -323, -632, -444,
    -304, -430, -332, -458,
    -277, -468, -659, -793,
    -319, -636, -227, -554,
    -373, -347, -334, -210,
    -456, -192, -530, -242,
    -216, -198, -366, -370,
    -338, -161, -409, -748,
    -107, -380, -294, -643,
    -223, -665, -234, -741,
    -141, -496, -130, -510,
    -139, -327, -172, -305,
    -306, -580, -164, -263,
    -262, -172, -67, -402,
    31, -366, -10, -436,
    -86, -527, 71, -377,
    -22, -609, -12, -678,
    -67, -319, 63, -191,
    35, -181, -39, -242,
    126, -167, -140, -544,
    155, -297, 174, -297,
    38, -8, 117, -380,
    197, -452, 240, -522,
    223, -103, 110, -187,
    87, -155, 169, -47,
    157, 26, -83, -100,
    128, 80, 209, -62,
    6, 7, 22, 5,
    318, -20, 248, -45,
    -200, -63, 156, -69,
    250, -183, 369, -126,
    -113, -76, -142, -122,
    -64, -254, -31, 35,
    -177, -71, -7, 171,
    93, 27, 108, 212,
    -330, -209, -123, -70,
    -279, 95, -96, 20,
    -188, -61, -314, 87,
    -300, -78, -354, -134,
    11, 122, -140, 122,
    -275, 152, -293, 140,
    -82, 138, -321, -111,
    -480, -156, -359, 76,
    -254, -40, -635, -96,
    -522, 79, -507, 8,
    -268, 303, -539, 68,
    -446, 61, -522, 306,
    111, 189, -435, 122,
    -379, 166, -571, -398,
    -632, -74, -747, -95,
    -455, 194, -952, 83,
    -798, 192, -755, 192,
    -781, -162, -619, 234,
    -663, -297, -488, -109,
    -964, -132, -838, -68,
    -843, 58, -1112, -86,
    -805, -299, -944, -253,
    -778, -50, -965, -549,
    -352, -98, -992, -343,
    -1117, -315, -1117, -307,
    -1155, -374, -637, -230,
    -1166, -43, -1299, -100,
    -925, -393, -1274, -600,
    -689, -130, -1479, -312,
    -1321, -254, -1464, -442,
    -1292, -613, -1261, -503,
    -1501, -368, -1322, 26,
    -1432, -66, -1743, -161,
    -1644, -467, -1760, -548,
    -1393, -568, -1556, -871,
    -1495, -1034, -1387, -571,
    -1917, -528, -1783, -123,
    -1897, -231, -2054, -323,
    -2052, -906, -1976, -567,
    -1917, -620, -2047, -989,
    -1077, -370, -2031, -704,
    -2355, -749, -2740, -1089,
    -1909, 159, -2012, 248,
    -626, -123, -2339, -962,
    -669, -408, -1379, -1174,
    -452, -364, -1044, -735,
    -132, 183, -1620, -752,
    -547, -307, -777, -1261,
    -98, 41, -880, -1091,
    -257, 97, -1602, -1833,
    31, -26, -644, -561,
    -180, -546, -385, -1095,
    -410, -802, -414, -827,
    -457, -970, -490, -1109,
    -215, -916, -144, -937,
    -493, -1269, -517, -1507,
    181, 101, -332, -889,
    -836, -937, -559, -429,
    -629, -547, -183, -337,
    -545, -82, -250, -286,
    5, -132, -348, -252,
    -293, -472, -158, 100,
    -29, 197, -236, -424,
    -861, -213, -140, -7,
    -427, -443, 187, -97,
    -684, -736, -293, 258,
    -368, -152, -150, 392,
    -609, 175, -142, 299,
    -138, 152, -119, 329,
    -486, -52, 293, 198,
    -183, 117, 175, 331,
    -58, -274, 231, 300,
    -288, 330, -305, 372,
    -111, 409, -9, 423,
    83, 256, 67, 367,
    -19, 248, 91, 113,
    -35, 406, -191, 154,
    238, 296, 5, 197,
    141, 221, 313, 198,
    211, 421, 244, 334,
    88, 426, -243, 454,
    202, 552, -5, 403,
    291, 185, 219, 301,
    251, 138, 128, 69,
    197, 288, -140, -61,
    188, 361, 197, 598,
    442, 273, 290, 143,
    472, 482, 157, 370,
    415, 321, 372, 385,
    402, 552, 155, 24,
    550, 263, -11, 21,
    360, 227, 147, -254,
    424, 97, 366, -13,
    375, 141, 449, 232,
    396, 507, 474, 272,
    701, 324, 362, -47,
    587, 148, 543, 69,
    400, -51, 561, 59,
    220, -10, 352, 147,
    206, 211, 653, 185,
    563, 297, 565, 284,
    594, 121, 766, 192,
    398, 118, 642, 434,
    233, 264, 481, 467,
    129, -165, 699, 239,
    90, 26, 342, 474,
    -55, 27, 388, 94,
    -172, 0, 725, 379,
    -60, 337, 370, 465,
    95, 319, 806, 595,
    78, 260, 497, 851,
    210, 560, 458, 574,
    -464, 202, 497, 625,
    -202, 152, 48, 712,
    -20, 566, 100, 715,
    455, 468, 411, 605,
    319, 646, 195, 615,
    401, 538, 680, 739,
    201, 667, 434, 954,
    454, 425, 646, 491,
    606, 681, 416, 508,
    497, 822, 426, 815,
    660, 647, 628, 716,
    697, 466, 618, 457,
    685, 460, 365, 309,
    721, 567, 836, 601,
    609, 300, 825, 459,
    943, 687, 681, 533,
    915, 598, 591, 243,
    876, 451, 874, 420,
    786, 317, 732, 220,
    922, 317, 1108, 367,
    531, 466, 1028, 649,
    1053, 615, 1034, 553,
    829, 602, 1021, 799,
    927, 803, 878, 763,
    799, 496, 1373, 773,
    585, 770, 803, 930,
    1099, 793, 1222, 862,
    1209, 895, 1025, 727,
    772, 845, 1172, 1115,
    867, 1021, 830, 1013,
    841, 910, 506, 703,
    1239, 1077, 620, 819,
    1196, 1083, 1155, 1081,
    1142, 907, 1547, 1121,
    1309, 648, 1343, 612,
    1484, 988, 1479, 937,
    985, 1328, 955, 1341,
    429, 910, 841, 1338,
    564, 1179, 412, 1156,
    1427, 1320, 1434, 1330,
    640, 760, 1726, 1410,
    190, 555, 1073, 1005,
    426, 257, 839, 980,
    235, 231, 1520, 1167,
    109, 293, 1014, 1569,
    305, 142, 1148, 539,
    -291, -108, 1213, 972,
    22, -216, 667, 828,
    -482, 438, 453, 1431,
    -581, -422, 789, 387,
    -358, -454, 174, 780,
    -36, -372, 390, -134,
    -629, 160, -306, 751,
    -1258, -331, 177, 522,
    -248, 574, -251, 639,
    -531, 407, -596, 394,
    -419, 789, -617, 801,
    -986, 399, -857, 727,
    -7, 518, -703, 310,
    -1143, -24, -1002, 287,
    -960, 363, -1299, 312,
    -1534, 245, -1557, 305,
    28, 153, -859, -175,
    -33, 332, -1398, -154,
    212, 410, -593, -197,
    -1092, -704, -904, -65,
    282, 367, -918, -686,
    345, 93, -258, -357,
    696, 644, -693, -28,
    448, 493, -273, 193,
    527, 546, -243, -513,
    384, -136, 273, -353,
    512, -142, 537, -198,
    941, 750, 83, 248,
    578, 861, -56, 592,
    842, 44, 892, 24,
    33, 890, -16, 982,
    831, 1398, 1535, 1898,
    1716, 1376, 1948, 1465
};

static const Word16 dico5_lsf[64 * 4] =
{
    -1002, -929, -1096, -1203,
    -641, -931, -604, -961,
    -779, -673, -835, -788,
    -416, -664, -458, -766,
    -652, -521, -662, -495,
    -1023, -509, -1023, -428,
    -444, -552, -368, -449,
    -479, -211, -1054, -903,
    -316, -249, -569, -591,
    -569, -275, -541, -191,
    -716, -188, -842, -264,
    -333, -248, -318, -228,
    -275, 1, -567, -228,
    -115, -221, -238, -374,
    -197, -507, -222, -579,
    -258, -432, -61, -244,
    -345, 2, -338, 39,
    -215, -169, -58, 0,
    -56, -6, -203, -131,
    1, -186, -5, -211,
    6, -380, 11, -418,
    -116, 131, -134, 113,
    89, -4, 71, -2,
    -19, -192, 262, 24,
    189, 151, -133, -109,
    186, -153, 166, -219,
    37, 139, 193, 171,
    337, 124, 158, -61,
    141, 226, -13, 190,
    231, 34, 354, 109,
    316, 201, 244, 164,
    330, -85, 390, -84,
    254, 327, 257, 335,
    491, 147, 476, 105,
    54, 77, 437, 370,
    421, 314, 449, 342,
    329, 126, 673, 292,
    571, 388, 243, 193,
    653, 320, 621, 280,
    194, 380, 517, 581,
    45, 323, 111, 422,
    489, 395, 734, 534,
    622, 546, 486, 502,
    318, 572, 189, 550,
    385, 422, -157, 153,
    -125, 382, -197, 386,
    -263, 334, 228, 697,
    -188, 1, 51, 297,
    -507, 213, -376, 397,
    -24, 255, -547, 89,
    -502, -94, 387, 179,
    -620, 68, -684, 112,
    -642, -350, -260, 172,
    -438, -324, 264, 648,
    -964, -4, -1121, 7,
    -134, 134, -1133, -306,
    143, 96, -420, -497,
    -1221, -350, -1527, -685,
    -161, 72, 873, 691,
    732, 283, 921, 353,
    334, 475, 1095, 821,
    864, 524, 843, 497,
    714, 711, 788, 750,
    1076, 714, 1204, 753
};
# 67 "q_plsf_5.c" 2



void Q_plsf_5 (
    Word16 *lsp1,
    Word16 *lsp2,
    Word16 *lsp1_q,
    Word16 *lsp2_q,
    Word16 *indice,
    Word16 txdtx_ctrl,
 Word16 past_r2_q[],
 Word16 lsf_old_tx[][10]
)
{uc_segment_time+=20220;uc_segment_instr+=4044;static uc_icache_line_t line_list_0[]={{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false}};for (int ppp=0;ppp<505;ppp++) { if(line_list_0[ppp].hit==false) {ic_insert_line(&(line_list_0[ppp])); }}

    Word16 i;
    Word16 lsf1[10], lsf2[10], wf1[10], wf2[10], lsf_p[10], lsf_r1[10], lsf_r2[10];
    Word16 lsf1_q[10], lsf2_q[10];
    Word16 lsf_aver[10];
    static Word16 lsf_p_CN[10];



    Lsp_lsf (lsp1, lsf1, 10);
    Lsp_lsf (lsp2, lsf2, 10);




    uc_segment_time+=380;uc_segment_instr+=76;static uc_icache_line_t line_list_1[]={{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<9;ppp++) { if(line_list_1[ppp].hit==false) {ic_insert_line(&(line_list_1[ppp])); }}if ((txdtx_ctrl & 0x0001) == 0
        && (txdtx_ctrl & 0x0008) != 0)
    {
        update_lsf_p_CN (lsf_old_tx, lsf_p_CN);
    uc_segment_time+=55;uc_segment_instr+=11;static uc_icache_line_t line_list_2[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_2[ppp].hit==false) {ic_insert_line(&(line_list_2[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;if ((txdtx_ctrl & 0x0010) != 0)
    {



        aver_lsf_history (lsf_old_tx, lsf1, lsf2, lsf_aver);
    uc_segment_time+=25;uc_segment_instr+=5;}




    uc_segment_time+=5;uc_segment_instr+=1;if ((txdtx_ctrl & 0x0001) == 0)
    {
        update_lsf_history (lsf1, lsf2, lsf_old_tx);
    uc_segment_time+=25;uc_segment_instr+=5;}

    uc_segment_time+=5;uc_segment_instr+=1;if ((txdtx_ctrl & 0x0010) != 0)
    {




        Lsf_wt (lsf_aver, wf2);
        uc_segment_time+=25;uc_segment_instr+=5;for (i = 0; i < 10; i++)
        {
            wf1[i] = 0;
            lsf1[i] = lsf_aver[i];
            lsf2[i] = lsf_aver[i];
        uc_segment_time+=215;uc_segment_instr+=43;static uc_icache_line_t line_list_9[]={{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false}};for (int ppp=0;ppp<5;ppp++) { if(line_list_9[ppp].hit==false) {ic_insert_line(&(line_list_9[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}
    else
    {


        Lsf_wt (lsf1, wf1);
        Lsf_wt (lsf2, wf2);
    uc_segment_time+=5;uc_segment_instr+=1;}




    uc_segment_time+=5;uc_segment_instr+=1;if ((txdtx_ctrl & 0x0001) != 0)
    {
        uc_segment_time+=25;uc_segment_instr+=5;for (i = 0; i < 10; i++)
        {
            lsf_p[i] = add (mean_lsf[i], mult (past_r2_q[i], 21299));

            lsf_r1[i] = sub (lsf1[i], lsf_p[i]);
            lsf_r2[i] = sub (lsf2[i], lsf_p[i]);
        uc_segment_time+=335;uc_segment_instr+=67;static uc_icache_line_t line_list_14[]={{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false}};for (int ppp=0;ppp<8;ppp++) { if(line_list_14[ppp].hit==false) {ic_insert_line(&(line_list_14[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}
    else
    {
        uc_segment_time+=5;uc_segment_instr+=1;for (i = 0; i < 10; i++)
        {
            lsf_r1[i] = sub (lsf1[i], lsf_p_CN[i]);
            lsf_r2[i] = sub (lsf2[i], lsf_p_CN[i]);
        uc_segment_time+=235;uc_segment_instr+=47;static uc_icache_line_t line_list_17[]={{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false}};for (int ppp=0;ppp<5;ppp++) { if(line_list_17[ppp].hit==false) {ic_insert_line(&(line_list_17[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}



    indice[0] = Vq_subvec (&lsf_r1[0], &lsf_r2[0], dico1_lsf,
                           &wf1[0], &wf2[0], 128);


    indice[1] = Vq_subvec (&lsf_r1[2], &lsf_r2[2], dico2_lsf,
                           &wf1[2], &wf2[2], 256);


    indice[2] = Vq_subvec_s (&lsf_r1[4], &lsf_r2[4], dico3_lsf,
                             &wf1[4], &wf2[4], 256);


    indice[3] = Vq_subvec (&lsf_r1[6], &lsf_r2[6], dico4_lsf,
                           &wf1[6], &wf2[6], 256);


    indice[4] = Vq_subvec (&lsf_r1[8], &lsf_r2[8], dico5_lsf,
                           &wf1[8], &wf2[8], 64);







    uc_segment_time+=1005;uc_segment_instr+=201;static uc_icache_line_t line_list_19[]={{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false}};for (int ppp=0;ppp<25;ppp++) { if(line_list_19[ppp].hit==false) {ic_insert_line(&(line_list_19[ppp])); }}if ((txdtx_ctrl & 0x0001) != 0)
    {
        uc_segment_time+=25;uc_segment_instr+=5;for (i = 0; i < 10; i++)
        {
            lsf1_q[i] = add (lsf_r1[i], lsf_p[i]);
            lsf2_q[i] = add (lsf_r2[i], lsf_p[i]);
            past_r2_q[i] = lsf_r2[i];
        uc_segment_time+=305;uc_segment_instr+=61;static uc_icache_line_t line_list_21[]={{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false}};for (int ppp=0;ppp<7;ppp++) { if(line_list_21[ppp].hit==false) {ic_insert_line(&(line_list_21[ppp])); }}}



        Reorder_lsf (lsf1_q, 205, 10);
        Reorder_lsf (lsf2_q, 205, 10);





        uc_segment_time+=15;uc_segment_instr+=3;if ((txdtx_ctrl & 0x0004) != 0)
        {
            update_lsf_history (lsf1_q, lsf2_q, lsf_old_tx);
        uc_segment_time+=25;uc_segment_instr+=5;}


        Lsf_lsp (lsf1_q, lsp1_q, 10);
        Lsf_lsp (lsf2_q, lsp2_q, 10);
    uc_segment_time+=5;uc_segment_instr+=1;}
    else
    {
        uc_segment_time+=5;uc_segment_instr+=1;for (i = 0; i < 10; i++)
        {
            past_r2_q[i] = 0;
        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_26[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_26[ppp].hit==false) {ic_insert_line(&(line_list_26[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}

    uc_segment_time+=20;uc_segment_instr+=4;return;
}



Word16 Vq_subvec (
    Word16 *lsf_r1,
    Word16 *lsf_r2,
    const Word16 *dico,
    Word16 *wf1,
    Word16 *wf2,
    Word16 dico_size
)
{uc_segment_time+=0;uc_segment_instr+=0;

    Word16 i, index, temp;
    const Word16 *p_dico;
    Word32 dist_min, dist;

    dist_min = (Word32)0x7fffffffL;
    p_dico = dico;

    uc_segment_time+=70;uc_segment_instr+=14;static uc_icache_line_t line_list_30[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_30[ppp].hit==false) {ic_insert_line(&(line_list_30[ppp])); }}for (i = 0; i < dico_size; i++)
    {
        temp = sub (lsf_r1[0], *p_dico++);
        temp = mult (wf1[0], temp);
        dist = L_mult (temp, temp);

        temp = sub (lsf_r1[1], *p_dico++);
        temp = mult (wf1[1], temp);
        dist = L_mac (dist, temp, temp);

        temp = sub (lsf_r2[0], *p_dico++);
        temp = mult (wf2[0], temp);
        dist = L_mac (dist, temp, temp);

        temp = sub (lsf_r2[1], *p_dico++);
        temp = mult (wf2[1], temp);
        dist = L_mac (dist, temp, temp);


        uc_segment_time+=495;uc_segment_instr+=99;static uc_icache_line_t line_list_31[]={{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false}};for (int ppp=0;ppp<12;ppp++) { if(line_list_31[ppp].hit==false) {ic_insert_line(&(line_list_31[ppp])); }}if (L_sub (dist, dist_min) < (Word32) 0)
        {
            dist_min = dist;
            index = i;
        uc_segment_time+=35;uc_segment_instr+=7;}
    uc_segment_time+=5;uc_segment_instr+=1;}



    p_dico = &dico[shl (index, 2)];
    lsf_r1[0] = *p_dico++;
    lsf_r1[1] = *p_dico++;
    lsf_r2[0] = *p_dico++;
    lsf_r2[1] = *p_dico++;

    uc_segment_time+=340;uc_segment_instr+=68;static uc_icache_line_t line_list_34[]={{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false}};for (int ppp=0;ppp<8;ppp++) { if(line_list_34[ppp].hit==false) {ic_insert_line(&(line_list_34[ppp])); }}return index;

}



Word16 Vq_subvec_s (
    Word16 *lsf_r1,
    Word16 *lsf_r2,
    const Word16 *dico,
    Word16 *wf1,
    Word16 *wf2,
    Word16 dico_size)
{uc_segment_time+=0;uc_segment_instr+=0;

    Word16 i, index, sign, temp;
    const Word16 *p_dico;
    Word32 dist_min, dist;

    dist_min = (Word32)0x7fffffffL;
    p_dico = dico;

    uc_segment_time+=70;uc_segment_instr+=14;static uc_icache_line_t line_list_36[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_36[ppp].hit==false) {ic_insert_line(&(line_list_36[ppp])); }}for (i = 0; i < dico_size; i++)
    {


        temp = sub (lsf_r1[0], *p_dico++);
        temp = mult (wf1[0], temp);
        dist = L_mult (temp, temp);

        temp = sub (lsf_r1[1], *p_dico++);
        temp = mult (wf1[1], temp);
        dist = L_mac (dist, temp, temp);

        temp = sub (lsf_r2[0], *p_dico++);
        temp = mult (wf2[0], temp);
        dist = L_mac (dist, temp, temp);

        temp = sub (lsf_r2[1], *p_dico++);
        temp = mult (wf2[1], temp);
        dist = L_mac (dist, temp, temp);


        uc_segment_time+=495;uc_segment_instr+=99;static uc_icache_line_t line_list_37[]={{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false}};for (int ppp=0;ppp<12;ppp++) { if(line_list_37[ppp].hit==false) {ic_insert_line(&(line_list_37[ppp])); }}if (L_sub (dist, dist_min) < (Word32) 0)
        {
            dist_min = dist;
            index = i;
            sign = 0;
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_38[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_38[ppp].hit==false) {ic_insert_line(&(line_list_38[ppp])); }}}


        p_dico -= 4;
        temp = add (lsf_r1[0], *p_dico++);
        temp = mult (wf1[0], temp);
        dist = L_mult (temp, temp);

        temp = add (lsf_r1[1], *p_dico++);
        temp = mult (wf1[1], temp);
        dist = L_mac (dist, temp, temp);

        temp = add (lsf_r2[0], *p_dico++);
        temp = mult (wf2[0], temp);
        dist = L_mac (dist, temp, temp);

        temp = add (lsf_r2[1], *p_dico++);
        temp = mult (wf2[1], temp);
        dist = L_mac (dist, temp, temp);


        uc_segment_time+=480;uc_segment_instr+=96;static uc_icache_line_t line_list_39[]={{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false}};for (int ppp=0;ppp<12;ppp++) { if(line_list_39[ppp].hit==false) {ic_insert_line(&(line_list_39[ppp])); }}if (L_sub (dist, dist_min) < (Word32) 0)
        {
            dist_min = dist;
            index = i;
            sign = 1;
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_40[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_40[ppp].hit==false) {ic_insert_line(&(line_list_40[ppp])); }}}
    uc_segment_time+=5;uc_segment_instr+=1;}



    p_dico = &dico[shl (index, 2)];

    uc_segment_time+=65;uc_segment_instr+=13;static uc_icache_line_t line_list_42[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_42[ppp].hit==false) {ic_insert_line(&(line_list_42[ppp])); }}if (sign == 0)
    {
        lsf_r1[0] = *p_dico++;
        lsf_r1[1] = *p_dico++;
        lsf_r2[0] = *p_dico++;
        lsf_r2[1] = *p_dico++;
    uc_segment_time+=275;uc_segment_instr+=55;static uc_icache_line_t line_list_43[]={{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false}};for (int ppp=0;ppp<6;ppp++) { if(line_list_43[ppp].hit==false) {ic_insert_line(&(line_list_43[ppp])); }}}
    else
    {
        lsf_r1[0] = negate (*p_dico++);
        lsf_r1[1] = negate (*p_dico++);
        lsf_r2[0] = negate (*p_dico++);
        lsf_r2[1] = negate (*p_dico++);
    uc_segment_time+=265;uc_segment_instr+=53;static uc_icache_line_t line_list_44[]={{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false}};for (int ppp=0;ppp<6;ppp++) { if(line_list_44[ppp].hit==false) {ic_insert_line(&(line_list_44[ppp])); }}}

    index = shl (index, 1);
    index = add (index, sign);

    uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_45[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_45[ppp].hit==false) {ic_insert_line(&(line_list_45[ppp])); }}return index;

}
# 416 "q_plsf_5.c"
void Lsf_wt (
    Word16 *lsf,
    Word16 *wf)
{uc_segment_time+=0;uc_segment_instr+=0;

    Word16 temp;
    Word16 i;

    wf[0] = lsf[1];
    uc_segment_time+=120;uc_segment_instr+=24;static uc_icache_line_t line_list_47[]={{8,1,false},{8,2,false},{8,3,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_47[ppp].hit==false) {ic_insert_line(&(line_list_47[ppp])); }}for (i = 1; i < 9; i++)
    {
        wf[i] = sub (lsf[i + 1], lsf[i - 1]);
    uc_segment_time+=155;uc_segment_instr+=31;static uc_icache_line_t line_list_48[]={{8,2,false},{8,3,false},{8,4,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_48[ppp].hit==false) {ic_insert_line(&(line_list_48[ppp])); }}}

    wf[9] = sub (16384, lsf[8]);

    uc_segment_time+=85;uc_segment_instr+=17;static uc_icache_line_t line_list_49[]={{8,3,false},{8,4,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_49[ppp].hit==false) {ic_insert_line(&(line_list_49[ppp])); }}for (i = 0; i < 10; i++)
    {
        temp = sub (wf[i], 1843);

        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_50[]={{8,3,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_50[ppp].hit==false) {ic_insert_line(&(line_list_50[ppp])); }}if (temp < 0)
        {
            wf[i] = sub (3427, mult (wf[i], 28160));
        uc_segment_time+=85;uc_segment_instr+=17;static uc_icache_line_t line_list_51[]={{8,4,false},{8,5,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_51[ppp].hit==false) {ic_insert_line(&(line_list_51[ppp])); }}}
        else
        {
            wf[i] = sub (1843, mult (temp, 6242));
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_52[]={{8,4,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_52[ppp].hit==false) {ic_insert_line(&(line_list_52[ppp])); }}}

        wf[i] = shl (wf[i], 3);
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_53[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_53[ppp].hit==false) {ic_insert_line(&(line_list_53[ppp])); }}}
    uc_segment_time+=30;uc_segment_instr+=6;return;
}

