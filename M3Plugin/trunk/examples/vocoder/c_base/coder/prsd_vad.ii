# 1 "vad.c"
# 1 "/home/posadash/trabajo/scope/plugins/trunk/scope_xml_plugin/examples/vocoder/c_base/coder//"
# 1 "<interno>"
# 1 "<lÃ­nea de orden>"
# 1 "/home/posadash/trabajo/scope/scope//include/scope.h" 1 3 4
# 44 "/home/posadash/trabajo/scope/scope//include/scope.h" 3 4
# 1 "/usr/include/stdio.h" 1 3 4
# 28 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 335 "/usr/include/features.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 360 "/usr/include/sys/cdefs.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 361 "/usr/include/sys/cdefs.h" 2 3 4
# 336 "/usr/include/features.h" 2 3 4
# 359 "/usr/include/features.h" 3 4
# 1 "/usr/include/gnu/stubs.h" 1 3 4



# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 5 "/usr/include/gnu/stubs.h" 2 3 4


# 1 "/usr/include/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/gnu/stubs.h" 2 3 4
# 360 "/usr/include/features.h" 2 3 4
# 29 "/usr/include/stdio.h" 2 3 4

extern "C" {



# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 214 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 3 4
typedef unsigned int size_t;
# 35 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/bits/types.h" 1 3 4
# 28 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 29 "/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 131 "/usr/include/bits/types.h" 3 4
# 1 "/usr/include/bits/typesizes.h" 1 3 4
# 132 "/usr/include/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 37 "/usr/include/stdio.h" 2 3 4
# 45 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 65 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 75 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 78 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 53 "/usr/include/_G_config.h" 3 4
typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
# 33 "/usr/include/libio.h" 2 3 4
# 53 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 1 3 4
# 43 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/libio.h" 2 3 4
# 170 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 203 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 271 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 328 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 364 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 458 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 488 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 550 "/usr/include/libio.h" 3 4
}
# 76 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 89 "/usr/include/stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 141 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/bits/stdio_lim.h" 1 3 4
# 142 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;









extern int remove (__const char *__filename) throw ();

extern int rename (__const char *__old, __const char *__new) throw ();




extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) throw ();








extern FILE *tmpfile (void) ;
# 184 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;





extern char *tmpnam_r (char *__s) throw () ;
# 206 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 231 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 241 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes) ;




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 274 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (__const char *__restrict __filename,
        __const char *__restrict __modes) ;
extern FILE *freopen64 (__const char *__restrict __filename,
   __const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, __const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     __const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;


extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       __const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;







extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;




extern int scanf (__const char *__restrict __format, ...) ;

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) throw ();
# 443 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 502 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 530 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 541 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 574 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;






extern char *gets (char *__s) ;

# 620 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 636 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s) ;

# 697 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (__const char *__restrict __s,
      FILE *__restrict __stream);
# 708 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream) ;








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 744 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 763 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 786 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;








extern void perror (__const char *__s);






# 1 "/usr/include/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];


extern int _sys_nerr;
extern __const char *__const _sys_errlist[];
# 825 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 844 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      __const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       __const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 914 "/usr/include/stdio.h" 3 4
}
# 45 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 31 "/usr/include/time.h" 3 4
extern "C" {







# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 40 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/bits/time.h" 1 3 4
# 44 "/usr/include/time.h" 2 3 4
# 59 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 75 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 93 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 105 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 121 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };








struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  __const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;





typedef __pid_t pid_t;








extern clock_t clock (void) throw ();


extern time_t time (time_t *__timer) throw ();


extern double difftime (time_t __time1, time_t __time0)
     throw () __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) throw ();





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   __const char *__restrict __format,
   __const struct tm *__restrict __tp) throw ();





extern char *strptime (__const char *__restrict __s,
         __const char *__restrict __fmt, struct tm *__tp)
     throw ();





# 1 "/usr/include/xlocale.h" 1 3 4
# 28 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;
# 217 "/usr/include/time.h" 2 3 4

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     __const char *__restrict __format,
     __const struct tm *__restrict __tp,
     __locale_t __loc) throw ();

extern char *strptime_l (__const char *__restrict __s,
    __const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) throw ();






extern struct tm *gmtime (__const time_t *__timer) throw ();



extern struct tm *localtime (__const time_t *__timer) throw ();





extern struct tm *gmtime_r (__const time_t *__restrict __timer,
       struct tm *__restrict __tp) throw ();



extern struct tm *localtime_r (__const time_t *__restrict __timer,
          struct tm *__restrict __tp) throw ();





extern char *asctime (__const struct tm *__tp) throw ();


extern char *ctime (__const time_t *__timer) throw ();







extern char *asctime_r (__const struct tm *__restrict __tp,
   char *__restrict __buf) throw ();


extern char *ctime_r (__const time_t *__restrict __timer,
        char *__restrict __buf) throw ();




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) throw ();



extern int daylight;
extern long int timezone;





extern int stime (__const time_t *__when) throw ();
# 312 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) throw ();


extern time_t timelocal (struct tm *__tp) throw ();


extern int dysize (int __year) throw () __attribute__ ((__const__));
# 327 "/usr/include/time.h" 3 4
extern int nanosleep (__const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) throw ();


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) throw ();


extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)
     throw ();






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       __const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) throw ();




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) throw ();


extern int timer_delete (timer_t __timerid) throw ();


extern int timer_settime (timer_t __timerid, int __flags,
     __const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) throw ();


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     throw ();


extern int timer_getoverrun (timer_t __timerid) throw ();
# 389 "/usr/include/time.h" 3 4
extern int getdate_err;
# 398 "/usr/include/time.h" 3 4
extern struct tm *getdate (__const char *__string);
# 412 "/usr/include/time.h" 3 4
extern int getdate_r (__const char *__restrict __string,
        struct tm *__restrict __resbufp);


}
# 33 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 1 3 4
# 37 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 33 "/home/posadash/trabajo/scope/scope//include/time.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 38 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/signal.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/signal.h" 3 4
# 1 "/usr/include/signal.h" 1 3 4
# 31 "/usr/include/signal.h" 3 4
extern "C" {

# 1 "/usr/include/bits/sigset.h" 1 3 4
# 24 "/usr/include/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 104 "/usr/include/bits/sigset.h" 3 4
extern int __sigismember (__const __sigset_t *, int);
extern int __sigaddset (__sigset_t *, int);
extern int __sigdelset (__sigset_t *, int);
# 34 "/usr/include/signal.h" 2 3 4







typedef __sig_atomic_t sig_atomic_t;








typedef __sigset_t sigset_t;







# 1 "/usr/include/bits/signum.h" 1 3 4
# 59 "/usr/include/signal.h" 2 3 4
# 68 "/usr/include/signal.h" 3 4
typedef __uid_t uid_t;






typedef void (*__sighandler_t) (int);




extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     throw ();

extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)
     throw ();







extern __sighandler_t signal (int __sig, __sighandler_t __handler)
     throw ();
# 104 "/usr/include/signal.h" 3 4





extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)
     throw ();






extern int kill (__pid_t __pid, int __sig) throw ();






extern int killpg (__pid_t __pgrp, int __sig) throw ();




extern int raise (int __sig) throw ();




extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)
     throw ();
extern int gsignal (int __sig) throw ();




extern void psignal (int __sig, __const char *__s);
# 153 "/usr/include/signal.h" 3 4
extern int __sigpause (int __sig_or_mask, int __is_sig);
# 162 "/usr/include/signal.h" 3 4
extern int sigpause (int __sig) __asm__ ("__xpg_sigpause");
# 181 "/usr/include/signal.h" 3 4
extern int sigblock (int __mask) throw () __attribute__ ((__deprecated__));


extern int sigsetmask (int __mask) throw () __attribute__ ((__deprecated__));


extern int siggetmask (void) throw () __attribute__ ((__deprecated__));
# 196 "/usr/include/signal.h" 3 4
typedef __sighandler_t sighandler_t;




typedef __sighandler_t sig_t;







# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 210 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/bits/siginfo.h" 1 3 4
# 25 "/usr/include/bits/siginfo.h" 3 4
# 1 "/usr/include/bits/wordsize.h" 1 3 4
# 26 "/usr/include/bits/siginfo.h" 2 3 4







typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 51 "/usr/include/bits/siginfo.h" 3 4
typedef struct siginfo
  {
    int si_signo;
    int si_errno;

    int si_code;

    union
      {
 int _pad[((128 / sizeof (int)) - 3)];


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
   } _kill;


 struct
   {
     int si_tid;
     int si_overrun;
     sigval_t si_sigval;
   } _timer;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     sigval_t si_sigval;
   } _rt;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     int si_status;
     __clock_t si_utime;
     __clock_t si_stime;
   } _sigchld;


 struct
   {
     void *si_addr;
   } _sigfault;


 struct
   {
     long int si_band;
     int si_fd;
   } _sigpoll;
      } _sifields;
  } siginfo_t;
# 129 "/usr/include/bits/siginfo.h" 3 4
enum
{
  SI_ASYNCNL = -60,

  SI_TKILL = -6,

  SI_SIGIO,

  SI_ASYNCIO,

  SI_MESGQ,

  SI_TIMER,

  SI_QUEUE,

  SI_USER,

  SI_KERNEL = 0x80

};



enum
{
  ILL_ILLOPC = 1,

  ILL_ILLOPN,

  ILL_ILLADR,

  ILL_ILLTRP,

  ILL_PRVOPC,

  ILL_PRVREG,

  ILL_COPROC,

  ILL_BADSTK

};


enum
{
  FPE_INTDIV = 1,

  FPE_INTOVF,

  FPE_FLTDIV,

  FPE_FLTOVF,

  FPE_FLTUND,

  FPE_FLTRES,

  FPE_FLTINV,

  FPE_FLTSUB

};


enum
{
  SEGV_MAPERR = 1,

  SEGV_ACCERR

};


enum
{
  BUS_ADRALN = 1,

  BUS_ADRERR,

  BUS_OBJERR

};


enum
{
  TRAP_BRKPT = 1,

  TRAP_TRACE

};


enum
{
  CLD_EXITED = 1,

  CLD_KILLED,

  CLD_DUMPED,

  CLD_TRAPPED,

  CLD_STOPPED,

  CLD_CONTINUED

};


enum
{
  POLL_IN = 1,

  POLL_OUT,

  POLL_MSG,

  POLL_ERR,

  POLL_PRI,

  POLL_HUP

};
# 273 "/usr/include/bits/siginfo.h" 3 4
typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     void *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4

};
# 213 "/usr/include/signal.h" 2 3 4



extern int sigemptyset (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigfillset (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigaddset (sigset_t *__set, int __signo) throw () __attribute__ ((__nonnull__ (1)));


extern int sigdelset (sigset_t *__set, int __signo) throw () __attribute__ ((__nonnull__ (1)));


extern int sigismember (__const sigset_t *__set, int __signo)
     throw () __attribute__ ((__nonnull__ (1)));



extern int sigisemptyset (__const sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));


extern int sigandset (sigset_t *__set, __const sigset_t *__left,
        __const sigset_t *__right) throw () __attribute__ ((__nonnull__ (1, 2, 3)));


extern int sigorset (sigset_t *__set, __const sigset_t *__left,
       __const sigset_t *__right) throw () __attribute__ ((__nonnull__ (1, 2, 3)));




# 1 "/usr/include/bits/sigaction.h" 1 3 4
# 25 "/usr/include/bits/sigaction.h" 3 4
struct sigaction
  {


    union
      {

 __sighandler_t sa_handler;

 void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;







    __sigset_t sa_mask;


    int sa_flags;


    void (*sa_restorer) (void);
  };
# 247 "/usr/include/signal.h" 2 3 4


extern int sigprocmask (int __how, __const sigset_t *__restrict __set,
   sigset_t *__restrict __oset) throw ();






extern int sigsuspend (__const sigset_t *__set) __attribute__ ((__nonnull__ (1)));


extern int sigaction (int __sig, __const struct sigaction *__restrict __act,
        struct sigaction *__restrict __oact) throw ();


extern int sigpending (sigset_t *__set) throw () __attribute__ ((__nonnull__ (1)));






extern int sigwait (__const sigset_t *__restrict __set, int *__restrict __sig)
     __attribute__ ((__nonnull__ (1, 2)));






extern int sigwaitinfo (__const sigset_t *__restrict __set,
   siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));






extern int sigtimedwait (__const sigset_t *__restrict __set,
    siginfo_t *__restrict __info,
    __const struct timespec *__restrict __timeout)
     __attribute__ ((__nonnull__ (1)));



extern int sigqueue (__pid_t __pid, int __sig, __const union sigval __val)
     throw ();
# 304 "/usr/include/signal.h" 3 4
extern __const char *__const _sys_siglist[65];
extern __const char *__const sys_siglist[65];


struct sigvec
  {
    __sighandler_t sv_handler;
    int sv_mask;

    int sv_flags;

  };
# 328 "/usr/include/signal.h" 3 4
extern int sigvec (int __sig, __const struct sigvec *__vec,
     struct sigvec *__ovec) throw ();



# 1 "/usr/include/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/bits/sigcontext.h" 3 4
# 1 "/usr/include/asm/sigcontext.h" 1 3 4



# 1 "/usr/include/asm/types.h" 1 3 4





typedef unsigned short umode_t;






typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;



__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
# 5 "/usr/include/asm/sigcontext.h" 2 3 4
# 21 "/usr/include/asm/sigcontext.h" 3 4
struct _fpreg {
 unsigned short significand[4];
 unsigned short exponent;
};

struct _fpxreg {
 unsigned short significand[4];
 unsigned short exponent;
 unsigned short padding[3];
};

struct _xmmreg {
 unsigned long element[4];
};

struct _fpstate {

 unsigned long cw;
 unsigned long sw;
 unsigned long tag;
 unsigned long ipoff;
 unsigned long cssel;
 unsigned long dataoff;
 unsigned long datasel;
 struct _fpreg _st[8];
 unsigned short status;
 unsigned short magic;


 unsigned long _fxsr_env[6];
 unsigned long mxcsr;
 unsigned long reserved;
 struct _fpxreg _fxsr_st[8];
 struct _xmmreg _xmm[8];
 unsigned long padding[56];
};



struct sigcontext {
 unsigned short gs, __gsh;
 unsigned short fs, __fsh;
 unsigned short es, __esh;
 unsigned short ds, __dsh;
 unsigned long edi;
 unsigned long esi;
 unsigned long ebp;
 unsigned long esp;
 unsigned long ebx;
 unsigned long edx;
 unsigned long ecx;
 unsigned long eax;
 unsigned long trapno;
 unsigned long err;
 unsigned long eip;
 unsigned short cs, __csh;
 unsigned long eflags;
 unsigned long esp_at_signal;
 unsigned short ss, __ssh;
 struct _fpstate * fpstate;
 unsigned long oldmask;
 unsigned long cr2;
};
# 29 "/usr/include/bits/sigcontext.h" 2 3 4
# 334 "/usr/include/signal.h" 2 3 4


extern int sigreturn (struct sigcontext *__scp) throw ();






# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 344 "/usr/include/signal.h" 2 3 4




extern int siginterrupt (int __sig, int __interrupt) throw ();

# 1 "/usr/include/bits/sigstack.h" 1 3 4
# 26 "/usr/include/bits/sigstack.h" 3 4
struct sigstack
  {
    void *ss_sp;
    int ss_onstack;
  };



enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};
# 50 "/usr/include/bits/sigstack.h" 3 4
typedef struct sigaltstack
  {
    void *ss_sp;
    int ss_flags;
    size_t ss_size;
  } stack_t;
# 351 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/sys/ucontext.h" 1 3 4
# 23 "/usr/include/sys/ucontext.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/signal.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/signal.h" 3 4
# 1 "/usr/include/signal.h" 1 3 4
# 33 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 24 "/usr/include/sys/ucontext.h" 2 3 4



# 1 "/usr/include/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/sys/ucontext.h" 2 3 4



typedef int greg_t;





typedef greg_t gregset_t[19];



enum
{
  REG_GS = 0,

  REG_FS,

  REG_ES,

  REG_DS,

  REG_EDI,

  REG_ESI,

  REG_EBP,

  REG_ESP,

  REG_EBX,

  REG_EDX,

  REG_ECX,

  REG_EAX,

  REG_TRAPNO,

  REG_ERR,

  REG_EIP,

  REG_CS,

  REG_EFL,

  REG_UESP,

  REG_SS

};



struct _libc_fpreg
{
  unsigned short int significand[4];
  unsigned short int exponent;
};

struct _libc_fpstate
{
  unsigned long int cw;
  unsigned long int sw;
  unsigned long int tag;
  unsigned long int ipoff;
  unsigned long int cssel;
  unsigned long int dataoff;
  unsigned long int datasel;
  struct _libc_fpreg _st[8];
  unsigned long int status;
};


typedef struct _libc_fpstate *fpregset_t;


typedef struct
  {
    gregset_t gregs;


    fpregset_t fpregs;
    unsigned long int oldmask;
    unsigned long int cr2;
  } mcontext_t;


typedef struct ucontext
  {
    unsigned long int uc_flags;
    struct ucontext *uc_link;
    stack_t uc_stack;
    mcontext_t uc_mcontext;
    __sigset_t uc_sigmask;
    struct _libc_fpstate __fpregs_mem;
  } ucontext_t;
# 354 "/usr/include/signal.h" 2 3 4





extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)
     throw () __attribute__ ((__deprecated__));



extern int sigaltstack (__const struct sigaltstack *__restrict __ss,
   struct sigaltstack *__restrict __oss) throw ();







extern int sighold (int __sig) throw ();


extern int sigrelse (int __sig) throw ();


extern int sigignore (int __sig) throw ();


extern __sighandler_t sigset (int __sig, __sighandler_t __disp) throw ();





# 1 "/usr/include/bits/pthreadtypes.h" 1 3 4
# 36 "/usr/include/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


typedef union
{
  char __size[36];
  long int __align;
} pthread_attr_t;


typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;




typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;


    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };
  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;
    int __writer;
  } __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 389 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/bits/sigthread.h" 1 3 4
# 31 "/usr/include/bits/sigthread.h" 3 4
extern int pthread_sigmask (int __how,
       __const __sigset_t *__restrict __newmask,
       __sigset_t *__restrict __oldmask)throw ();


extern int pthread_kill (pthread_t __threadid, int __signo) throw ();
# 390 "/usr/include/signal.h" 2 3 4






extern int __libc_current_sigrtmin (void) throw ();

extern int __libc_current_sigrtmax (void) throw ();



}
# 33 "/home/posadash/trabajo/scope/scope//include/signal.h" 2 3 4
# 36 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 1 3 4
# 32 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 29 "/usr/include/sys/types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;
# 88 "/usr/include/sys/types.h" 3 4
typedef __off_t off_t;






typedef __off64_t off64_t;
# 105 "/usr/include/sys/types.h" 3 4
typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/sys/types.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 134 "/usr/include/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/i386-redhat-linux/4.1.2/include/stddef.h" 1 3 4
# 148 "/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 195 "/usr/include/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 217 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 218 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/select.h" 1 3 4
# 31 "/usr/include/sys/select.h" 3 4
# 1 "/usr/include/bits/select.h" 1 3 4
# 32 "/usr/include/sys/select.h" 2 3 4


# 1 "/usr/include/bits/sigset.h" 1 3 4
# 35 "/usr/include/sys/select.h" 2 3 4
# 44 "/usr/include/sys/select.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//include/time.h" 1 3 4
# 45 "/usr/include/sys/select.h" 2 3 4

# 1 "/usr/include/bits/time.h" 1 3 4
# 69 "/usr/include/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/sys/select.h" 2 3 4
# 55 "/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 67 "/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 99 "/usr/include/sys/select.h" 3 4
extern "C" {
# 109 "/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 121 "/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);


}
# 221 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 30 "/usr/include/sys/sysmacros.h" 3 4
__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     throw ();
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     throw ();
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     throw ();
# 224 "/usr/include/sys/types.h" 2 3 4




typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;
# 273 "/usr/include/sys/types.h" 3 4
}
# 33 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 1 3 4
# 34 "/home/posadash/trabajo/scope/scope//include/sys/types.h" 2 3 4
# 36 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/sys_uc_types.h" 2 3 4

typedef int uc_id_t;
typedef int uc_pid_t;
typedef int uc_gid_t;
typedef int uc_uid_t;
typedef int uc_pthread_t;
typedef int irqreturn_t;
typedef int atomic_t;
typedef struct __wait_queue wait_queue_t;
typedef int (*wait_queue_func_t)(wait_queue_t *wait, unsigned int mode, int sync, void *key);
typedef short unsigned int umode_t;
typedef unsigned int __u32;
# 37 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 2 3 4
# 56 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
typedef void (*uc_sighandler_t)(int);

typedef int uc_sig_atomic_t;


typedef uc_sighandler_t uc_sig_t;

union uc_sigval {
 int sival_int;
 void *sival_ptr;
};

typedef struct uc_pthread_attr uc_pthread_attr_t;



struct uc_sigevent{
 int sigev_notify;
 int sigev_signo;
 int si_code;
 union uc_sigval sigev_value;
 void (*sigev_notify_function)(union uc_sigval);
 uc_pthread_attr_t *sigev_notify_attributes;
 struct uc_timer_data *timer;
};

typedef struct{
 bool signal[64];
} uc_sigset_t;
# 93 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
typedef struct uc_siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 uc_pid_t si_pid;
 uc_uid_t si_uid;
 void *si_addr;
 int si_status;
 long si_band;
 union uc_sigval si_value;
 struct uc_timer_data *timer;
} uc_siginfo_t;




struct uc_sigaction {
 uc_sighandler_t sa_handler;
 void (*sa_sigaction)(int, uc_siginfo_t*, void*);
 int sa_flags;
 uc_sigset_t sa_mask;
};

void uc_signal_default(int signal);
void uc_signal_ignore(int signal);
void uc_signal_error(int signal);
# 293 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_signal.h" 3 4
int uc_kill(uc_pid_t, int);
int uc_killpg(uc_pid_t, int);
int uc_pthread_kill(uc_pthread_t, int);
int uc_pthread_sigmask(int, const uc_sigset_t *, uc_sigset_t *);
int uc_raise(int);
int uc_sigaction(int, const struct uc_sigaction *, struct uc_sigaction *);
int uc_sigaddset(uc_sigset_t *, int);
int uc_sigdelset(uc_sigset_t *, int);
int uc_sigemptyset(uc_sigset_t *);
int uc_sigfillset(uc_sigset_t *);

int uc_sigismember(const uc_sigset_t *, int);
uc_sighandler_t uc_signal(int sig, uc_sighandler_t handler);
int uc_sigpending(uc_sigset_t *);
int uc_sigprocmask(int, const uc_sigset_t *, uc_sigset_t *);
int uc_sigqueue(uc_pid_t, int, const union uc_sigval);
int uc_sigsuspend(const uc_sigset_t *);
int uc_sigtimedwait(const uc_sigset_t *, uc_siginfo_t *, const struct timespec *);
int uc_sigwait(const uc_sigset_t *, int *);
int uc_sigwaitinfo(const uc_sigset_t *, uc_siginfo_t *);

void (*uc_bsd_signal(int sig, void (*handler)(int)))(int);
void (*uc_sigset(int sig, void (*disp)(int)))(int);
int uc_sighold(int);
int uc_sigignore(int);
int uc_sigpause(int);
int uc_sigrelse(int);
int uc_siginterrupt(int, int);
# 39 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_os_defines.h" 1 3 4
# 40 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 2 3 4
# 73 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_time.h" 3 4
const struct timespec uc_infinite_time = {0x7fffffff,0x7fffffff};

const struct timespec uc_timespec_zero={0,0};


clock_t uc_clock();
time_t uc_time(time_t *);
double uc_difftime(time_t time1, time_t time0);
int uc_nanosleep(const struct timespec *nseconds, struct timespec *rem);


int uc_clock_getcpuclockid(int pid, clockid_t *clockid);


int uc_clock_getres(clockid_t clock_id, struct timespec *rqtp);

int uc_clock_gettime(clockid_t clock_id, struct timespec *rqtp);

int uc_clock_settime(clockid_t clock_id, const struct timespec *rqtp);


int uc_clock_nanosleep(clockid_t clock_id, int flags,
        const struct timespec *rqtp, struct timespec *rmtp);

int uc_timer_create(clockid_t clockid, struct uc_sigevent *s_ev, timer_t *timer);
int uc_timer_delete(timer_t timer);
int uc_timer_gettime(timer_t time, struct itimerspec * spec);
int uc_timer_getoverrun(timer_t timer);
int uc_timer_settime(timer_t timer, int flags, const struct itimerspec *i_spec,
      struct itimerspec *o_spec);
# 34 "/home/posadash/trabajo/scope/scope//include/time.h" 2 3 4
# 46 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4






# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 1 3 4
# 39 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache_line.h" 1 3 4
# 41 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache_line.h" 3 4
extern "C" {


typedef struct icache_line_s {
        short size;
 char num_set;
 char hit;
} uc_icache_line_t;


typedef struct icache_tag_s {
 int tag;
 int iStart;
 int iEnd;
} uc_icache_tag_t;


 void ic_insert_line(uc_icache_line_t *line);
 void ic_search_tag(int tag, int iStart, int iEnd);

}
# 40 "/home/posadash/trabajo/scope/scope//scope/rtos/kernel/uc_icache.h" 2 3 4


class UC_cpu_class;





class UC_icache_class {
public:
 UC_icache_class(int size, int assoc, int line_size, int instr_size, UC_cpu_class *cpu);
 ~UC_icache_class();

 void initialize_icache_size(int size);
 void insert_line(uc_icache_line_t *line);
 void miss_time(unsigned long long time_ns);
 void flush(void);
 unsigned long long m_total_misses;
 unsigned long long m_stall_cycles;

 UC_cpu_class *m_cpu;

 int m_annotate;
 unsigned long long m_last_annotation;

private:

 int m_size;
 int m_assoc;
 int m_line_size;
 int m_instr_size;
 int m_num_lines;
 int m_num_sets;
 int m_set_size;
 bool m_enable;
 int *m_victim_line;
 int *m_histogram;
 uc_icache_line_t ***m_data;
};
# 53 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4


extern unsigned long long uc_segment_time;
extern unsigned long long uc_segment_instr;
class UC_rtos_class;
class UC_process_class;
extern __thread UC_rtos_class *qt_parent_rtos;
extern __thread UC_process_class *qt_parent_process;

# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_posix_c.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/api/posix/uc_posix_c.h" 3 4
void UC_eat_time(unsigned long long time);
# 63 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "/home/posadash/trabajo/scope/scope//scope/rtos/low_level/uc_ll_bus_io.h" 1 3 4
# 35 "/home/posadash/trabajo/scope/scope//scope/rtos/low_level/uc_ll_bus_io.h" 3 4
char uc_ioread8(void *addr);
void uc_iowrite8(unsigned char value, void *addr);
long uc_ioread32(void *addr);
void uc_iowrite32(unsigned long value, void *addr);
int uc_ioreadBurst(void **value,int size, void *addr);
int uc_iowriteBurst(void *value, int size, void *addr);
# 64 "/home/posadash/trabajo/scope/scope//include/scope.h" 2 3 4
# 1 "<lÃ­nea de orden>" 2
# 1 "vad.c"
# 43 "vad.c"
# 1 "../common/typedef.h" 1
# 20 "../common/typedef.h"
typedef short Word16;
typedef int Word32;
typedef int Flag;
# 44 "vad.c" 2
# 1 "../common/cnst.h" 1
# 27 "../common/cnst.h"
# 1 "../common/typedef.h" 1
# 28 "../common/cnst.h" 2



static const Word16 F_gamma1[10] =
{
    29491, 26542, 23888, 21499, 19349,
    17414, 15672, 14105, 12694, 11425
};
static const Word16 F_gamma2[10] =
{
    19661, 11797, 7078, 4247, 2548,
    1529, 917, 550, 330, 198
};
# 45 "vad.c" 2
# 1 "../common/basic_op.h" 1





extern Flag Overflow;
extern Flag Carry;
# 21 "../common/basic_op.h"
Word16 add (Word16 var1, Word16 var2);
Word16 sub (Word16 var1, Word16 var2);
Word16 abs_s (Word16 var1);
Word16 shl (Word16 var1, Word16 var2);
Word16 shr (Word16 var1, Word16 var2);
Word16 mult (Word16 var1, Word16 var2);
Word32 L_mult (Word16 var1, Word16 var2);
Word16 negate (Word16 var1);
Word16 extract_h (Word32 L_var1);
Word16 extract_l (Word32 L_var1);
Word16 round (Word32 L_var1);
Word32 L_mac (Word32 L_var3, Word16 var1, Word16 var2);
Word32 L_msu (Word32 L_var3, Word16 var1, Word16 var2);
Word32 L_macNs (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_msuNs (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_add (Word32 L_var1, Word32 L_var2);
Word32 L_sub (Word32 L_var1, Word32 L_var2);
Word32 L_add_c (Word32 L_var1, Word32 L_var2);
Word32 L_sub_c (Word32 L_var1, Word32 L_var2);
Word32 L_negate (Word32 L_var1);
Word16 mult_r (Word16 var1, Word16 var2);
Word32 L_shl (Word32 L_var1, Word16 var2);
Word32 L_shr (Word32 L_var1, Word16 var2);
Word16 shr_r (Word16 var1, Word16 var2);

Word16 mac_r (Word32 L_var3, Word16 var1, Word16 var2);

Word16 msu_r (Word32 L_var3, Word16 var1, Word16 var2);

Word32 L_deposit_h (Word16 var1);
Word32 L_deposit_l (Word16 var1);

Word32 L_shr_r (Word32 L_var1, Word16 var2);

Word32 L_abs (Word32 L_var1);
Word32 L_sat (Word32 L_var1);
Word16 norm_s (Word16 var1);
Word16 div_s (Word16 var1, Word16 var2);
Word16 norm_l (Word32 L_var1);
# 46 "vad.c" 2
# 1 "../common/oper_32b.h" 1


void L_Extract (Word32 L_32, Word16 *hi, Word16 *lo);
Word32 L_Comp (Word16 hi, Word16 lo);
Word32 Mpy_32 (Word16 hi1, Word16 lo1, Word16 hi2, Word16 lo2);
Word32 Mpy_32_16 (Word16 hi, Word16 lo, Word16 n);
Word32 Div_32 (Word32 L_num, Word16 denom_hi, Word16 denom_lo);
# 47 "vad.c" 2
# 1 "vad.h" 1
# 15 "vad.h"
struct _fp
{
    Word16 e;
    Word16 m;
};

typedef struct _fp Pfloat;

void vad_reset (void);

Word16 vad_computation (
    Word16 r_h[],
    Word16 r_l[],
    Word16 scal_acf,
    Word16 rc[],
    Word16 ptch
);

void energy_computation (
    Word16 r_h[],
    Word16 scal_acf,
    Word16 rvad[],
    Word16 scal_rvad,
    Pfloat * acf0,
    Pfloat * pvad
);

void acf_averaging (
    Word16 r_h[],
    Word16 r_l[],
    Word16 scal_acf,
    Word32 L_av0[],
    Word32 L_av1[]
);

void predictor_values (
    Word32 L_av1[],
    Word16 rav1[],
    Word16 *scal_rav1
);

void schur_recursion (
    Word32 L_av1[],
    Word16 vpar[]
);

void step_up (
    Word16 np,
    Word16 vpar[],
    Word16 aav1[]
);

void compute_rav1 (
    Word16 aav1[],
    Word16 rav1[],
    Word16 *scal_rav1
);

Word16 spectral_comparison (
    Word16 rav1[],
    Word16 scal_rav1,
    Word32 L_av0[]
);

void threshold_adaptation (
    Word16 stat,
    Word16 ptch,
    Word16 tone,
    Word16 rav1[],
    Word16 scal_rav1,
    Pfloat pvad,
    Pfloat acf0,
    Word16 rvad[],
    Word16 *scal_rvad,
    Pfloat * thvad
);

void tone_detection (
    Word16 rc[],
    Word16 *tone
);

Word16 vad_decision (
    Pfloat pvad,
    Pfloat thvad
);

Word16 vad_hangover (
    Word16 vvad
);

Word16 periodicity_update (
    Word16 lags[]
);
# 48 "vad.c" 2
# 82 "vad.c"
static Word16 rvad[9], scal_rvad;
static Pfloat thvad;
static Word32 L_sacf[27];
static Word32 L_sav0[36];
static Word16 pt_sacf, pt_sav0;
static Word32 L_lastdm;
static Word16 adaptcount;
static Word16 burstcount, hangcount;
static Word16 oldlagcount, veryoldlagcount, oldlag;
# 103 "vad.c"
void vad_reset ()
{uc_segment_time+=860;uc_segment_instr+=172;static uc_icache_line_t line_list_0[]={{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false}};for (int ppp=0;ppp<21;ppp++) { if(line_list_0[ppp].hit==false) {ic_insert_line(&(line_list_0[ppp])); }}

    Word16 i;


    rvad[0] = 0x6000;
    uc_segment_time+=90;uc_segment_instr+=18;static uc_icache_line_t line_list_1[]={{8,5,false},{8,6,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_1[ppp].hit==false) {ic_insert_line(&(line_list_1[ppp])); }}for (i = 1; i < 9; i++)
    {
        rvad[i] = 0;
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_2[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_2[ppp].hit==false) {ic_insert_line(&(line_list_2[ppp])); }}}
    scal_rvad = 7;


    thvad.e = 20;
    thvad.m = 27083;


    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_3[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_3[ppp].hit==false) {ic_insert_line(&(line_list_3[ppp])); }}for (i = 0; i < 27; i++)
    {
        L_sacf[i] = 0L;
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_4[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_4[ppp].hit==false) {ic_insert_line(&(line_list_4[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;for (i = 0; i < 36; i++)
    {
        L_sav0[i] = 0L;
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_6[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_6[ppp].hit==false) {ic_insert_line(&(line_list_6[ppp])); }}}
    pt_sacf = 0;
    pt_sav0 = 0;


    L_lastdm = 0L;


    adaptcount = 0;


    burstcount = 0;
    hangcount = -1;


    oldlagcount = 0;
    veryoldlagcount = 0;
    oldlag = 18;



    uc_segment_time+=130;uc_segment_instr+=26;static uc_icache_line_t line_list_7[]={{8,7,false},{8,0,false},{8,1,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_7[ppp].hit==false) {ic_insert_line(&(line_list_7[ppp])); }}return;
}
# 171 "vad.c"
Word16 vad_computation (
    Word16 r_h[],
    Word16 r_l[],
    Word16 scal_acf,
    Word16 rc[],
    Word16 ptch
)
{uc_segment_time+=90;uc_segment_instr+=18;static uc_icache_line_t line_list_8[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_8[ppp].hit==false) {ic_insert_line(&(line_list_8[ppp])); }}

    Word32 L_av0[9], L_av1[9];
    Word16 vad, vvad, rav1[9], scal_rav1, stat, tone;
    Pfloat acf0, pvad;

    energy_computation (r_h, scal_acf, rvad, scal_rvad, &acf0, &pvad);
    acf_averaging (r_h, r_l, scal_acf, L_av0, L_av1);
    predictor_values (L_av1, rav1, &scal_rav1);
    stat = spectral_comparison (rav1, scal_rav1, L_av0);
    tone_detection (rc, &tone);
    threshold_adaptation (stat, ptch, tone, rav1, scal_rav1, pvad, acf0,
                          rvad, &scal_rvad, &thvad);
    vvad = vad_decision (pvad, thvad);
    vad = vad_hangover (vvad);

    uc_segment_time+=245;uc_segment_instr+=49;static uc_icache_line_t line_list_9[]={{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<6;ppp++) { if(line_list_9[ppp].hit==false) {ic_insert_line(&(line_list_9[ppp])); }}return vad;
}
# 216 "vad.c"
void energy_computation (
    Word16 r_h[],
    Word16 scal_acf,
    Word16 rvad[],
    Word16 scal_rvad,
    Pfloat * acf0,
    Pfloat * pvad
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_10[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_10[ppp].hit==false) {ic_insert_line(&(line_list_10[ppp])); }}

    Word16 i, temp, norm_prod;
    Word32 L_temp;





    acf0->e = sub (32, scal_acf);
    acf0->m = r_h[0] & 0x7ff8;



    pvad->e = add (acf0->e, 14);
    pvad->e = sub (pvad->e, scal_rvad);

    L_temp = 0L;

    uc_segment_time+=230;uc_segment_instr+=46;static uc_icache_line_t line_list_11[]={{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false}};for (int ppp=0;ppp<5;ppp++) { if(line_list_11[ppp].hit==false) {ic_insert_line(&(line_list_11[ppp])); }}for (i = 1; i <= 8; i++)
    {
        temp = shr (r_h[i], 3);
        L_temp = L_mac (L_temp, temp, rvad[i]);
    uc_segment_time+=115;uc_segment_instr+=23;static uc_icache_line_t line_list_12[]={{8,4,false},{8,5,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_12[ppp].hit==false) {ic_insert_line(&(line_list_12[ppp])); }}}

    temp = shr (r_h[0], 3);
    L_temp = L_add (L_temp, L_shr (L_mult (temp, rvad[0]), 1));


    uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_13[]={{8,5,false},{8,6,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_13[ppp].hit==false) {ic_insert_line(&(line_list_13[ppp])); }}if (L_temp <= 0L)
    {
        L_temp = 1L;
    uc_segment_time+=25;uc_segment_instr+=5;}
    norm_prod = norm_l (L_temp);
    pvad->e = sub (pvad->e, norm_prod);
 uc_segment_time+=55;uc_segment_instr+=11;static uc_icache_line_t line_list_15[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_15[ppp].hit==false) {ic_insert_line(&(line_list_15[ppp])); }}if(norm_prod<=0)
  {pvad->m = extract_h (L_shr (L_temp, -norm_prod));uc_segment_time+=50;uc_segment_instr+=10;static uc_icache_line_t line_list_16[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_16[ppp].hit==false) {ic_insert_line(&(line_list_16[ppp])); }}}
 else
  {pvad->m = extract_h (L_shl (L_temp, norm_prod));uc_segment_time+=30;uc_segment_instr+=6;}


    uc_segment_time+=20;uc_segment_instr+=4;return;
}
# 285 "vad.c"
void acf_averaging (
    Word16 r_h[],
    Word16 r_l[],
    Word16 scal_acf,
    Word32 L_av0[],
    Word32 L_av1[]
)
{uc_segment_time+=120;uc_segment_instr+=24;static uc_icache_line_t line_list_19[]={{8,6,false},{8,7,false},{8,0,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_19[ppp].hit==false) {ic_insert_line(&(line_list_19[ppp])); }}

    Word32 L_temp;
    Word16 scale;
    Word16 i;

    scale = add (9, scal_acf);

    uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_20[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_20[ppp].hit==false) {ic_insert_line(&(line_list_20[ppp])); }}for (i = 0; i <= 8; i++)
    {
  uc_segment_time+=35;uc_segment_instr+=7;if(scale<0)
   {L_temp = L_shl (L_Comp (r_h[i], r_l[i]), -scale);uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_22[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_22[ppp].hit==false) {ic_insert_line(&(line_list_22[ppp])); }}}
  else
   {L_temp = L_shr (L_Comp (r_h[i], r_l[i]), scale);uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_23[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_23[ppp].hit==false) {ic_insert_line(&(line_list_23[ppp])); }}}
        L_av0[i] = L_add (L_sacf[i], L_temp);
        L_av0[i] = L_add (L_sacf[i + 9], L_av0[i]);
        L_av0[i] = L_add (L_sacf[i + 18], L_av0[i]);
        L_sacf[pt_sacf + i] = L_temp;
        L_av1[i] = L_sav0[pt_sav0 + i];
        L_sav0[pt_sav0 + i] = L_av0[i];
    uc_segment_time+=505;uc_segment_instr+=101;static uc_icache_line_t line_list_24[]={{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false},{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false}};for (int ppp=0;ppp<12;ppp++) { if(line_list_24[ppp].hit==false) {ic_insert_line(&(line_list_24[ppp])); }}}




    uc_segment_time+=15;uc_segment_instr+=3;if (sub (pt_sacf, 18) == 0)
    {
        pt_sacf = 0;
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        pt_sacf = add (pt_sacf, 9);
    uc_segment_time+=15;uc_segment_instr+=3;}


    uc_segment_time+=5;uc_segment_instr+=1;if (sub (pt_sav0, 27) == 0)
    {
        pt_sav0 = 0;
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        pt_sav0 = add (pt_sav0, 9);
    uc_segment_time+=15;uc_segment_instr+=3;}

    uc_segment_time+=20;uc_segment_instr+=4;return;
}
# 355 "vad.c"
void predictor_values (
    Word32 L_av1[],
    Word16 rav1[],
    Word16 *scal_rav1
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_32[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_32[ppp].hit==false) {ic_insert_line(&(line_list_32[ppp])); }}

    Word16 vpar[8], aav1[9];

    schur_recursion (L_av1, vpar);
    step_up (8, vpar, aav1);
    compute_rav1 (aav1, rav1, scal_rav1);

    uc_segment_time+=125;uc_segment_instr+=25;static uc_icache_line_t line_list_33[]={{8,5,false},{8,6,false},{8,7,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_33[ppp].hit==false) {ic_insert_line(&(line_list_33[ppp])); }}return;
}
# 386 "vad.c"
void schur_recursion (
    Word32 L_av1[],
    Word16 vpar[]
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_34[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_34[ppp].hit==false) {ic_insert_line(&(line_list_34[ppp])); }}

    Word16 acf[9], pp[9], kk[9], temp;
    Word16 i, k, m, n;




    uc_segment_time+=140;uc_segment_instr+=28;static uc_icache_line_t line_list_35[]={{8,6,false},{8,7,false},{8,0,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_35[ppp].hit==false) {ic_insert_line(&(line_list_35[ppp])); }}if (L_av1[0] == 0)
    {
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_36[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_36[ppp].hit==false) {ic_insert_line(&(line_list_36[ppp])); }}for (i = 0; i < 8; i++)
        {
            vpar[i] = 0;
        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_37[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_37[ppp].hit==false) {ic_insert_line(&(line_list_37[ppp])); }}}
        uc_segment_time+=30;uc_segment_instr+=6;return;
    }
    temp = norm_l (L_av1[0]);

    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_39[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_39[ppp].hit==false) {ic_insert_line(&(line_list_39[ppp])); }}for (k = 0; k <= 8; k++)
    {
  uc_segment_time+=35;uc_segment_instr+=7;if(temp<=0)
   {acf[k] = extract_h (L_shr (L_av1[k], -temp));uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_41[]={{8,1,false},{8,2,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_41[ppp].hit==false) {ic_insert_line(&(line_list_41[ppp])); }}}
  else
   {acf[k] = extract_h (L_shl (L_av1[k], temp));uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_42[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_42[ppp].hit==false) {ic_insert_line(&(line_list_42[ppp])); }}}
    uc_segment_time+=5;uc_segment_instr+=1;}



    uc_segment_time+=15;uc_segment_instr+=3;for (i = 1; i <= 7; i++)
    {
        kk[9 - i] = acf[i];
    uc_segment_time+=115;uc_segment_instr+=23;static uc_icache_line_t line_list_45[]={{8,2,false},{8,3,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_45[ppp].hit==false) {ic_insert_line(&(line_list_45[ppp])); }}}

    uc_segment_time+=15;uc_segment_instr+=3;for (i = 0; i <= 8; i++)
    {
        pp[i] = acf[i];
    uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_47[]={{8,3,false},{8,4,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_47[ppp].hit==false) {ic_insert_line(&(line_list_47[ppp])); }}}



    uc_segment_time+=15;uc_segment_instr+=3;for (n = 0; n < 8; n++)
    {

        uc_segment_time+=35;uc_segment_instr+=7;if ((pp[0] == 0) ||
            (sub (pp[0], abs_s (pp[1])) < 0))
        {
            uc_segment_time+=125;uc_segment_instr+=25;static uc_icache_line_t line_list_50[]={{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_50[ppp].hit==false) {ic_insert_line(&(line_list_50[ppp])); }}for (i = n; i < 8; i++)
            {
                vpar[i] = 0;
            uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_51[]={{8,4,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_51[ppp].hit==false) {ic_insert_line(&(line_list_51[ppp])); }}}
            uc_segment_time+=30;uc_segment_instr+=6;return;
        }
        vpar[n] = div_s (abs_s (pp[1]), pp[0]);


        uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_53[]={{8,5,false},{8,6,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_53[ppp].hit==false) {ic_insert_line(&(line_list_53[ppp])); }}if (pp[1] > 0)
        {
            vpar[n] = negate (vpar[n]);
        uc_segment_time+=115;uc_segment_instr+=23;static uc_icache_line_t line_list_54[]={{8,6,false},{8,7,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_54[ppp].hit==false) {ic_insert_line(&(line_list_54[ppp])); }}}

        uc_segment_time+=5;uc_segment_instr+=1;if (sub (n, 7) == 0)
        {
            uc_segment_time+=30;uc_segment_instr+=6;return;
        }


        pp[0] = add (pp[0], mult_r (pp[1], vpar[n]));

        uc_segment_time+=135;uc_segment_instr+=27;static uc_icache_line_t line_list_57[]={{8,7,false},{8,0,false},{8,1,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_57[ppp].hit==false) {ic_insert_line(&(line_list_57[ppp])); }}for (m = 1; m <= 7 - n; m++)
        {
            pp[m] = add (pp[1 + m], mult_r (kk[9 - m], vpar[n]));

            kk[9 - m] = add (kk[9 - m], mult_r (pp[1 + m], vpar[n]));

        uc_segment_time+=355;uc_segment_instr+=71;static uc_icache_line_t line_list_58[]={{8,7,false},{8,0,false},{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<8;ppp++) { if(line_list_58[ppp].hit==false) {ic_insert_line(&(line_list_58[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}

    uc_segment_time+=30;uc_segment_instr+=6;return;
}
# 486 "vad.c"
void step_up (
    Word16 np,
    Word16 vpar[],
    Word16 aav1[]
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_61[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_61[ppp].hit==false) {ic_insert_line(&(line_list_61[ppp])); }}

    Word32 L_coef[9], L_work[9];
    Word16 temp;
    Word16 i, m;



    L_coef[0] = 0x20000000L;
    L_coef[1] = L_shl (L_deposit_l (vpar[0]), 14);



    uc_segment_time+=220;uc_segment_instr+=44;static uc_icache_line_t line_list_62[]={{8,2,false},{8,3,false},{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<5;ppp++) { if(line_list_62[ppp].hit==false) {ic_insert_line(&(line_list_62[ppp])); }}for (m = 2; m <= np; m++)
    {
        uc_segment_time+=35;uc_segment_instr+=7;for (i = 1; i < m; i++)
        {
            temp = extract_h (L_coef[m - i]);
            L_work[i] = L_mac (L_coef[i], vpar[m - 1], temp);
        uc_segment_time+=195;uc_segment_instr+=39;static uc_icache_line_t line_list_64[]={{8,4,false},{8,5,false},{8,6,false},{8,7,false}};for (int ppp=0;ppp<4;ppp++) { if(line_list_64[ppp].hit==false) {ic_insert_line(&(line_list_64[ppp])); }}}

        uc_segment_time+=15;uc_segment_instr+=3;for (i = 1; i < m; i++)
        {
            L_coef[i] = L_work[i];
        uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_66[]={{8,5,false},{8,6,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_66[ppp].hit==false) {ic_insert_line(&(line_list_66[ppp])); }}}

        L_coef[m] = L_shl (L_deposit_l (vpar[m - 1]), 14);
    uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_67[]={{8,6,false},{8,7,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_67[ppp].hit==false) {ic_insert_line(&(line_list_67[ppp])); }}}



    uc_segment_time+=15;uc_segment_instr+=3;for (i = 0; i <= np; i++)
    {
        aav1[i] = extract_h (L_shr (L_coef[i], 3));
    uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_69[]={{8,7,false},{8,0,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_69[ppp].hit==false) {ic_insert_line(&(line_list_69[ppp])); }}}

    uc_segment_time+=30;uc_segment_instr+=6;return;
}
# 546 "vad.c"
void compute_rav1 (
    Word16 aav1[],
    Word16 rav1[],
    Word16 *scal_rav1
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_71[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_71[ppp].hit==false) {ic_insert_line(&(line_list_71[ppp])); }}

    Word32 L_work[9];
    Word16 i, k;



    uc_segment_time+=80;uc_segment_instr+=16;static uc_icache_line_t line_list_72[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_72[ppp].hit==false) {ic_insert_line(&(line_list_72[ppp])); }}for (i = 0; i <= 8; i++)
    {
        L_work[i] = 0L;

        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_73[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_73[ppp].hit==false) {ic_insert_line(&(line_list_73[ppp])); }}for (k = 0; k <= 8 - i; k++)
        {
            L_work[i] = L_mac (L_work[i], aav1[k], aav1[k + i]);
        uc_segment_time+=185;uc_segment_instr+=37;static uc_icache_line_t line_list_74[]={{8,1,false},{8,2,false},{8,3,false},{8,4,false}};for (int ppp=0;ppp<4;ppp++) { if(line_list_74[ppp].hit==false) {ic_insert_line(&(line_list_74[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}


    uc_segment_time+=15;uc_segment_instr+=3;if (L_work[0] == 0L)
    {
        *scal_rav1 = 0;
    uc_segment_time+=65;uc_segment_instr+=13;static uc_icache_line_t line_list_77[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_77[ppp].hit==false) {ic_insert_line(&(line_list_77[ppp])); }}}
    else
    {
        *scal_rav1 = norm_l (L_work[0]);
    uc_segment_time+=55;uc_segment_instr+=11;static uc_icache_line_t line_list_78[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_78[ppp].hit==false) {ic_insert_line(&(line_list_78[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;for (i = 0; i <= 8; i++)
    {
  uc_segment_time+=35;uc_segment_instr+=7;if((*scal_rav1)<=0)
   {rav1[i] = extract_h (L_shr (L_work[i], -(*scal_rav1)));uc_segment_time+=115;uc_segment_instr+=23;static uc_icache_line_t line_list_81[]={{8,3,false},{8,4,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_81[ppp].hit==false) {ic_insert_line(&(line_list_81[ppp])); }}}
  else
   {rav1[i] = extract_h (L_shl (L_work[i], *scal_rav1));uc_segment_time+=85;uc_segment_instr+=17;static uc_icache_line_t line_list_82[]={{8,4,false},{8,5,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_82[ppp].hit==false) {ic_insert_line(&(line_list_82[ppp])); }}}
    uc_segment_time+=5;uc_segment_instr+=1;}

    uc_segment_time+=30;uc_segment_instr+=6;return;
}
# 606 "vad.c"
Word16 spectral_comparison (
    Word16 rav1[],
    Word16 scal_rav1,
    Word32 L_av0[]
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_85[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_85[ppp].hit==false) {ic_insert_line(&(line_list_85[ppp])); }}

    Word32 L_dm, L_sump, L_temp;
    Word16 stat, sav0[9], shift, divshift, temp;
    Word16 i;




    uc_segment_time+=80;uc_segment_instr+=16;static uc_icache_line_t line_list_86[]={{8,5,false},{8,6,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_86[ppp].hit==false) {ic_insert_line(&(line_list_86[ppp])); }}if (L_av0[0] == 0L)
    {
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_87[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_87[ppp].hit==false) {ic_insert_line(&(line_list_87[ppp])); }}for (i = 0; i <= 8; i++)
        {
            sav0[i] = 0x0fff;
        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_88[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_88[ppp].hit==false) {ic_insert_line(&(line_list_88[ppp])); }}}
    uc_segment_time+=15;uc_segment_instr+=3;}
    else
    {
        shift = sub (norm_l (L_av0[0]), 3);
        uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_90[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_90[ppp].hit==false) {ic_insert_line(&(line_list_90[ppp])); }}for (i = 0; i <= 8; i++)
        {
   uc_segment_time+=35;uc_segment_instr+=7;if(shift<=0)
    {sav0[i] = extract_h (L_shr (L_av0[i], -shift));uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_92[]={{8,7,false},{8,0,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_92[ppp].hit==false) {ic_insert_line(&(line_list_92[ppp])); }}}
   else
    {sav0[i] = extract_h (L_shl (L_av0[i], shift));uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_93[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_93[ppp].hit==false) {ic_insert_line(&(line_list_93[ppp])); }}}
        uc_segment_time+=5;uc_segment_instr+=1;}
    uc_segment_time+=15;uc_segment_instr+=3;}



    L_sump = 0L;
    uc_segment_time+=15;uc_segment_instr+=3;for (i = 1; i <= 8; i++)
    {
        L_sump = L_mac (L_sump, rav1[i], sav0[i]);
    uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_97[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_97[ppp].hit==false) {ic_insert_line(&(line_list_97[ppp])); }}}




    uc_segment_time+=15;uc_segment_instr+=3;if (L_sump < 0L)
    {
        L_temp = L_negate (L_sump);
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        L_temp = L_sump;
    uc_segment_time+=15;uc_segment_instr+=3;}


    uc_segment_time+=5;uc_segment_instr+=1;if (L_temp == 0L)
    {
        L_dm = 0L;
        shift = 0;
    uc_segment_time+=35;uc_segment_instr+=7;}
    else
    {
        sav0[0] = shl (sav0[0], 3);
        shift = norm_l (L_temp);
  uc_segment_time+=85;uc_segment_instr+=17;static uc_icache_line_t line_list_103[]={{8,1,false},{8,2,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_103[ppp].hit==false) {ic_insert_line(&(line_list_103[ppp])); }}if(shift<=0)
   {temp = extract_h (L_shr (L_temp, -shift));uc_segment_time+=35;uc_segment_instr+=7;}
  else
   {temp = extract_h (L_shl (L_temp, shift));uc_segment_time+=15;uc_segment_instr+=3;}


        uc_segment_time+=5;uc_segment_instr+=1;if (sub (sav0[0], temp) >= 0)
        {
            divshift = 0;
            temp = div_s (temp, sav0[0]);
        uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_107[]={{8,2,false},{8,3,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_107[ppp].hit==false) {ic_insert_line(&(line_list_107[ppp])); }}}
        else
        {
            divshift = 1;
            temp = sub (temp, sav0[0]);
            temp = div_s (temp, sav0[0]);
        uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_108[]={{8,3,false},{8,4,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_108[ppp].hit==false) {ic_insert_line(&(line_list_108[ppp])); }}}


        uc_segment_time+=5;uc_segment_instr+=1;if (sub (divshift, 1) == 0)
        {
            L_dm = 0x8000L;
        uc_segment_time+=25;uc_segment_instr+=5;}
        else
        {
            L_dm = 0L;
        uc_segment_time+=15;uc_segment_instr+=3;}

        L_dm = L_shl (L_add (L_dm, L_deposit_l (temp)), 1);


        uc_segment_time+=15;uc_segment_instr+=3;if (L_sump < 0L)
        {
            L_dm = L_negate (L_dm);
        uc_segment_time+=25;uc_segment_instr+=5;}
    uc_segment_time+=5;uc_segment_instr+=1;}



    L_dm = L_shl (L_dm, 14);
 uc_segment_time+=15;uc_segment_instr+=3;if(shift<0)
  {L_dm = L_shl (L_dm, -shift);uc_segment_time+=35;uc_segment_instr+=7;}
 else
  {L_dm = L_shr (L_dm, shift);uc_segment_time+=15;uc_segment_instr+=3;}
    L_dm = L_add (L_dm, L_shl (L_deposit_l (rav1[0]), 11));
 uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_118[]={{8,4,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_118[ppp].hit==false) {ic_insert_line(&(line_list_118[ppp])); }}if(scal_rav1<0)
  {L_dm = L_shl (L_dm, -scal_rav1);uc_segment_time+=35;uc_segment_instr+=7;}
 else
  {L_dm = L_shr (L_dm, scal_rav1);uc_segment_time+=15;uc_segment_instr+=3;}



    L_temp = L_sub (L_dm, L_lastdm);
    L_lastdm = L_dm;


    uc_segment_time+=25;uc_segment_instr+=5;if (L_temp < 0L)
    {
        L_temp = L_negate (L_temp);
    uc_segment_time+=25;uc_segment_instr+=5;}


    L_temp = L_sub (L_temp, 3670L);


    uc_segment_time+=15;uc_segment_instr+=3;if (L_temp < 0L)
    {
        stat = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        stat = 0;
    uc_segment_time+=15;uc_segment_instr+=3;}

    uc_segment_time+=20;uc_segment_instr+=4;return stat;
}
# 770 "vad.c"
void threshold_adaptation (
    Word16 stat,
    Word16 ptch,
    Word16 tone,
    Word16 rav1[],
    Word16 scal_rav1,
    Pfloat pvad,
    Pfloat acf0,
    Word16 rvad[],
    Word16 *scal_rvad,
    Pfloat * thvad
)
{uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_127[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_127[ppp].hit==false) {ic_insert_line(&(line_list_127[ppp])); }}

    Word16 comp, comp2;
    Word32 L_temp;
    Word16 temp;
    Pfloat p_temp;
    Word16 i;

    comp = 0;




    uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_128[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_128[ppp].hit==false) {ic_insert_line(&(line_list_128[ppp])); }}if (sub (acf0.e, 17) < 0)
    {
        comp = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}

    uc_segment_time+=5;uc_segment_instr+=1;if ((sub (acf0.e, 17) == 0) && (sub (acf0.m, 32500) < 0))
    {
        comp = 1;
    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_131[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_131[ppp].hit==false) {ic_insert_line(&(line_list_131[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;if (sub (comp, 1) == 0)
    {
        thvad->e = 19;
        thvad->m = 21667;

        uc_segment_time+=80;uc_segment_instr+=16;static uc_icache_line_t line_list_133[]={{8,7,false},{8,0,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_133[ppp].hit==false) {ic_insert_line(&(line_list_133[ppp])); }}return;
    }



    uc_segment_time+=5;uc_segment_instr+=1;if (sub (ptch, 1) == 0)
    {
        comp = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}

    uc_segment_time+=5;uc_segment_instr+=1;if (stat == 0)
    {
        comp = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}

    uc_segment_time+=5;uc_segment_instr+=1;if (sub (tone, 1) == 0)
    {
        comp = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}

    uc_segment_time+=5;uc_segment_instr+=1;if (sub (comp, 1) == 0)
    {
        adaptcount = 0;
        uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_141[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_141[ppp].hit==false) {ic_insert_line(&(line_list_141[ppp])); }}return;
    }


    adaptcount = add (adaptcount, 1);

    uc_segment_time+=15;uc_segment_instr+=3;if (sub (adaptcount, 8) <= 0)
    {
        uc_segment_time+=30;uc_segment_instr+=6;return;
    }


    thvad->m = sub (thvad->m, shr (thvad->m, 5));


    uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_144[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_144[ppp].hit==false) {ic_insert_line(&(line_list_144[ppp])); }}if (sub (thvad->m, 0x4000) < 0)
    {
        thvad->m = shl (thvad->m, 1);
        thvad->e = sub (thvad->e, 1);
    uc_segment_time+=110;uc_segment_instr+=22;static uc_icache_line_t line_list_145[]={{8,1,false},{8,2,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_145[ppp].hit==false) {ic_insert_line(&(line_list_145[ppp])); }}}


    L_temp = L_mult (pvad.m, 17203);
    L_temp = L_shr (L_temp, 15);
    p_temp.e = add (pvad.e, 1);


    uc_segment_time+=35;uc_segment_instr+=7;if (L_temp > 0x7fffL)
    {
        L_temp = L_shr (L_temp, 1);
        p_temp.e = add (p_temp.e, 1);
    uc_segment_time+=35;uc_segment_instr+=7;}
    p_temp.m = extract_l (L_temp);




    uc_segment_time+=15;uc_segment_instr+=3;if (sub (thvad->e, p_temp.e) < 0)
    {
        comp = 1;
    uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_149[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_149[ppp].hit==false) {ic_insert_line(&(line_list_149[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;if ((sub (thvad->e, p_temp.e) == 0) &&
        (sub (thvad->m, p_temp.m) < 0))
    {
        comp = 1;
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_151[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_151[ppp].hit==false) {ic_insert_line(&(line_list_151[ppp])); }}}



    uc_segment_time+=5;uc_segment_instr+=1;if (sub (comp, 1) == 0)
    {


        L_temp = L_add (L_deposit_l (thvad->m),
                        L_deposit_l (shr (thvad->m, 4)));


        uc_segment_time+=55;uc_segment_instr+=11;static uc_icache_line_t line_list_153[]={{8,3,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_153[ppp].hit==false) {ic_insert_line(&(line_list_153[ppp])); }}if (L_sub (L_temp, 0x7fffL) > 0)
        {
            thvad->m = extract_l (L_shr (L_temp, 1));
            thvad->e = add (thvad->e, 1);
        uc_segment_time+=80;uc_segment_instr+=16;static uc_icache_line_t line_list_154[]={{8,3,false},{8,4,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_154[ppp].hit==false) {ic_insert_line(&(line_list_154[ppp])); }}}
        else
        {
            thvad->m = extract_l (L_temp);
        uc_segment_time+=30;uc_segment_instr+=6;}

        comp2 = 0;


        uc_segment_time+=15;uc_segment_instr+=3;if (sub (p_temp.e, thvad->e) < 0)
        {
            comp2 = 1;
        uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_157[]={{8,4,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_157[ppp].hit==false) {ic_insert_line(&(line_list_157[ppp])); }}}

        uc_segment_time+=5;uc_segment_instr+=1;if ((sub (p_temp.e, thvad->e) == 0) &&
            (sub (p_temp.m, thvad->m) < 0))
        {
            comp2 = 1;
        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_159[]={{8,4,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_159[ppp].hit==false) {ic_insert_line(&(line_list_159[ppp])); }}}

        uc_segment_time+=5;uc_segment_instr+=1;if (sub (comp2, 1) == 0)
        {
            thvad->e = p_temp.e;
            thvad->m = p_temp.m;
        uc_segment_time+=65;uc_segment_instr+=13;static uc_icache_line_t line_list_161[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_161[ppp].hit==false) {ic_insert_line(&(line_list_161[ppp])); }}}
    uc_segment_time+=5;uc_segment_instr+=1;}



    uc_segment_time+=5;uc_segment_instr+=1;if (sub (pvad.e, 27) == 0)
    {
        L_temp = L_add (L_deposit_l (pvad.m), L_deposit_l (16927));
        p_temp.m = extract_l (L_shr (L_temp, 1));
        p_temp.e = add (pvad.e, 1);
    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_164[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_164[ppp].hit==false) {ic_insert_line(&(line_list_164[ppp])); }}}
    else
    {

        uc_segment_time+=5;uc_segment_instr+=1;if (sub (pvad.e, 27) > 0)
        {
            temp = sub (pvad.e, 27);
            temp = shr (16927, temp);
            L_temp = L_add (L_deposit_l (pvad.m), L_deposit_l (temp));


            uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_166[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_166[ppp].hit==false) {ic_insert_line(&(line_list_166[ppp])); }}if (L_sub (L_temp, 0x7fffL) > 0)
            {
                p_temp.e = add (pvad.e, 1);
                p_temp.m = extract_l (L_shr (L_temp, 1));

            uc_segment_time+=35;uc_segment_instr+=7;}
            else
            {
                p_temp.e = pvad.e;
                p_temp.m = extract_l (L_temp);
            uc_segment_time+=25;uc_segment_instr+=5;}
        uc_segment_time+=5;uc_segment_instr+=1;}
        else
        {
            temp = sub (27, pvad.e);
            temp = shr (pvad.m, temp);
            L_temp = L_add (L_deposit_l (16927), L_deposit_l (temp));


            uc_segment_time+=35;uc_segment_instr+=7;if (L_sub (L_temp, 0x7fffL) > 0)
            {
                p_temp.e = add (27, 1);
                p_temp.m = extract_l (L_shr (L_temp, 1));

            uc_segment_time+=35;uc_segment_instr+=7;}
            else
            {
                p_temp.e = 27;
                p_temp.m = extract_l (L_temp);
            uc_segment_time+=25;uc_segment_instr+=5;}
        uc_segment_time+=5;uc_segment_instr+=1;}
    uc_segment_time+=5;uc_segment_instr+=1;}



    comp = 0;


    uc_segment_time+=15;uc_segment_instr+=3;if (sub (thvad->e, p_temp.e) > 0)
    {
        comp = 1;
    uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_176[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_176[ppp].hit==false) {ic_insert_line(&(line_list_176[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;if ((sub (thvad->e, p_temp.e) == 0) &&
        (sub (thvad->m, p_temp.m) > 0))
    {
        comp = 1;
    uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_178[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_178[ppp].hit==false) {ic_insert_line(&(line_list_178[ppp])); }}}

    uc_segment_time+=5;uc_segment_instr+=1;if (sub (comp, 1) == 0)
    {
        thvad->e = p_temp.e;
        thvad->m = p_temp.m;
    uc_segment_time+=65;uc_segment_instr+=13;static uc_icache_line_t line_list_180[]={{8,0,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_180[ppp].hit==false) {ic_insert_line(&(line_list_180[ppp])); }}}


    *scal_rvad = scal_rav1;

    uc_segment_time+=25;uc_segment_instr+=5;for (i = 0; i <= 8; i++)
    {
        rvad[i] = rav1[i];
    uc_segment_time+=105;uc_segment_instr+=21;static uc_icache_line_t line_list_182[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_182[ppp].hit==false) {ic_insert_line(&(line_list_182[ppp])); }}}



    adaptcount = 9;

    uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_183[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_183[ppp].hit==false) {ic_insert_line(&(line_list_183[ppp])); }}return;
}
# 1026 "vad.c"
void tone_detection (
    Word16 rc[],
    Word16 *tone
)
{uc_segment_time+=30;uc_segment_instr+=6;

    Word32 L_num, L_den, L_temp;
    Word16 temp, prederr, a[3];
    Word16 i;

    *tone = 0;



    step_up (2, rc, a);



    temp = shl (a[1], 3);
    L_den = L_mult (temp, temp);



    L_temp = L_shl (L_deposit_h (a[2]), 3);
    L_num = L_sub (L_temp, L_den);




    uc_segment_time+=200;uc_segment_instr+=40;static uc_icache_line_t line_list_185[]={{8,1,false},{8,2,false},{8,3,false},{8,4,false},{8,5,false}};for (int ppp=0;ppp<5;ppp++) { if(line_list_185[ppp].hit==false) {ic_insert_line(&(line_list_185[ppp])); }}if (L_num <= 0)
    {
        uc_segment_time+=30;uc_segment_instr+=6;return;
    }

    uc_segment_time+=5;uc_segment_instr+=1;if (a[1] < 0)
    {
        temp = extract_h (L_den);
        L_den = L_mult (temp, 3189);

        L_temp = L_sub (L_num, L_den);


        uc_segment_time+=75;uc_segment_instr+=15;static uc_icache_line_t line_list_188[]={{8,3,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_188[ppp].hit==false) {ic_insert_line(&(line_list_188[ppp])); }}if (L_temp < 0)
        {
            uc_segment_time+=30;uc_segment_instr+=6;return;
        }
    uc_segment_time+=5;uc_segment_instr+=1;}


    prederr = 0x7fff;

    uc_segment_time+=15;uc_segment_instr+=3;for (i = 0; i < 4; i++)
    {
        temp = mult (rc[i], rc[i]);
        temp = sub (0x7fff, temp);
        prederr = mult (prederr, temp);
    uc_segment_time+=125;uc_segment_instr+=25;static uc_icache_line_t line_list_192[]={{8,4,false},{8,5,false},{8,6,false}};for (int ppp=0;ppp<3;ppp++) { if(line_list_192[ppp].hit==false) {ic_insert_line(&(line_list_192[ppp])); }}}



    temp = sub (prederr, 1464);


    uc_segment_time+=25;uc_segment_instr+=5;if (temp < 0)
    {
        *tone = 1;
    uc_segment_time+=35;uc_segment_instr+=7;}
    uc_segment_time+=20;uc_segment_instr+=4;return;
}
# 1112 "vad.c"
Word16 vad_decision (
    Pfloat pvad,
    Pfloat thvad
)
{uc_segment_time+=0;uc_segment_instr+=0;

    Word16 vvad;


    uc_segment_time+=50;uc_segment_instr+=10;static uc_icache_line_t line_list_197[]={{8,5,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_197[ppp].hit==false) {ic_insert_line(&(line_list_197[ppp])); }}if (sub (pvad.e, thvad.e) > 0)
    {
        vvad = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}
    else {uc_segment_time+=5;uc_segment_instr+=1;if ((sub (pvad.e, thvad.e) == 0) &&
               (sub (pvad.m, thvad.m) > 0))
    {
        vvad = 1;
    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_200[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_200[ppp].hit==false) {ic_insert_line(&(line_list_200[ppp])); }}}
    else
    {
        vvad = 0;
    uc_segment_time+=15;uc_segment_instr+=3;uc_segment_time+=5;uc_segment_instr+=1;}}

    uc_segment_time+=20;uc_segment_instr+=4;return vvad;
}
# 1153 "vad.c"
Word16 vad_hangover (
    Word16 vvad
)
{uc_segment_time+=0;uc_segment_instr+=0;

    uc_segment_time+=50;uc_segment_instr+=10;static uc_icache_line_t line_list_205[]={{8,6,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_205[ppp].hit==false) {ic_insert_line(&(line_list_205[ppp])); }}if (sub (vvad, 1) == 0)
    {
        burstcount = add (burstcount, 1);
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        burstcount = 0;
    uc_segment_time+=15;uc_segment_instr+=3;}


    uc_segment_time+=5;uc_segment_instr+=1;if (sub (burstcount, 3) >= 0)
    {
        hangcount = 10;
        burstcount = 3;
    uc_segment_time+=35;uc_segment_instr+=7;}

    uc_segment_time+=5;uc_segment_instr+=1;if (hangcount >= 0)
    {
        hangcount = sub (hangcount, 1);
        uc_segment_time+=40;uc_segment_instr+=8;static uc_icache_line_t line_list_211[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_211[ppp].hit==false) {ic_insert_line(&(line_list_211[ppp])); }}return 1;
    }
    uc_segment_time+=20;uc_segment_instr+=4;return vvad;
}
# 1197 "vad.c"
Word16 periodicity_update (
    Word16 lags[]
)
{uc_segment_time+=30;uc_segment_instr+=6;

    Word16 minlag, maxlag, lagcount, temp;
    Word16 i;
 Word16 ptch;



    lagcount = 0;

    uc_segment_time+=60;uc_segment_instr+=12;static uc_icache_line_t line_list_214[]={{8,7,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_214[ppp].hit==false) {ic_insert_line(&(line_list_214[ppp])); }}for (i = 0; i <= 1; i++)
    {



        uc_segment_time+=35;uc_segment_instr+=7;if (sub (oldlag, lags[i]) > 0)
        {
            minlag = lags[i];
            maxlag = oldlag;
        uc_segment_time+=95;uc_segment_instr+=19;static uc_icache_line_t line_list_216[]={{8,0,false},{8,1,false}};for (int ppp=0;ppp<2;ppp++) { if(line_list_216[ppp].hit==false) {ic_insert_line(&(line_list_216[ppp])); }}}
        else
        {
            minlag = oldlag;
            maxlag = lags[i];
        uc_segment_time+=55;uc_segment_instr+=11;static uc_icache_line_t line_list_217[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_217[ppp].hit==false) {ic_insert_line(&(line_list_217[ppp])); }}}

        temp = sub (maxlag, minlag);


        uc_segment_time+=15;uc_segment_instr+=3;if (sub (temp, 2) < 0)
        {
            lagcount = add (lagcount, 1);
        uc_segment_time+=25;uc_segment_instr+=5;}


        oldlag = lags[i];
    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_220[]={{8,1,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_220[ppp].hit==false) {ic_insert_line(&(line_list_220[ppp])); }}}



    veryoldlagcount = oldlagcount;

    oldlagcount = lagcount;



    temp = add (oldlagcount, veryoldlagcount);


    uc_segment_time+=45;uc_segment_instr+=9;static uc_icache_line_t line_list_221[]={{8,2,false}};for (int ppp=0;ppp<1;ppp++) { if(line_list_221[ppp].hit==false) {ic_insert_line(&(line_list_221[ppp])); }}if (sub (temp, 4) >= 0)
    {
        ptch = 1;
    uc_segment_time+=25;uc_segment_instr+=5;}
    else
    {
        ptch = 0;
    uc_segment_time+=15;uc_segment_instr+=3;}

    uc_segment_time+=20;uc_segment_instr+=4;return ptch;
}

