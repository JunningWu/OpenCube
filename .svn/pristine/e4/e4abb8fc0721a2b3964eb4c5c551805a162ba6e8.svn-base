<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>M3Explorer: m3_database Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>m3_database Class Reference</h1><!-- doxytag: class="m3_database" -->This class represents a collection of design points.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="m3__database_8h-source.html">m3_database.h</a>&gt;</code>
<p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#3f86988d2edb764c09fad63ae7d0fe36">clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear the database content.  <a href="#3f86988d2edb764c09fad63ae7d0fe36"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#e894b682d00524266d4acbe71cb5976d">copy_from</a> (<a class="el" href="classm3__list.html">m3_list</a> *<a class="el" href="classm3__database.html#cd84d025c262437515758afddb50de30">points</a>)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy the content of the target list of points.  <a href="#e894b682d00524266d4acbe71cb5976d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#5b0972e38b268fdd062c0ebe54ee238b">copy_xdr_data</a> (<a class="el" href="classm3__database.html">m3_database</a> *db)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy from a target database the xdr parameters.  <a href="#5b0972e38b268fdd062c0ebe54ee238b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__point.html">m3_point</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#57b67a54464420a50822418176ffcd4b">find_point</a> (<a class="el" href="classm3__point.html">m3_point</a> &amp;p)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Search in the database for a specific design point.  <a href="#57b67a54464420a50822418176ffcd4b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__list.html">m3_list</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#f0570bd8bd30952d838bc7c1c90e228b">generate_copy_of_database_list</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return a copy of the stored points.  <a href="#f0570bd8bd30952d838bc7c1c90e228b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__database.html">m3_database</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#ece2dce53a16a452aa594ee6ccb8b240">get_filtered_consistent</a> (<a class="el" href="classm3__env.html">m3_env</a> *env)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> containing only the points which are consistent with the design space.  <a href="#ece2dce53a16a452aa594ee6ccb8b240"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__database.html">m3_database</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#dab18fe853e89a0a51f3d33ed2fb278b">get_filtered_valid</a> (<a class="el" href="classm3__env.html">m3_env</a> *env)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> containing only the points which are valid for the design rules and consistent with the design space.  <a href="#dab18fe853e89a0a51f3d33ed2fb278b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__list.html">m3_list</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#98e912d699c43ac8875d2e3cf6d60990">get_list_of_points</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return the stored points.  <a href="#98e912d699c43ac8875d2e3cf6d60990"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__database.html">m3_database</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#3f5e5fbdb4d7cdd8ca5f3f7df4850c46">get_random_subset</a> (int points_number)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> by random sampling this one.  <a href="#3f5e5fbdb4d7cdd8ca5f3f7df4850c46"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#cab68476bf993f6dbbb749f49898f010">insert_point</a> (<a class="el" href="classm3__point.html">m3_point</a> *p)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add a design point to the collection.  <a href="#cab68476bf993f6dbbb749f49898f010"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#7955e34ddff532add612707b49232a33">m3_database</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, <a class="el" href="classm3__doe.html">m3_doe</a> *doe)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#7955e34ddff532add612707b49232a33"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#61aa6c68405738e88edef855a3b31722">m3_database</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#61aa6c68405738e88edef855a3b31722"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#49af2eff0cad8c8bcd148172f3d76b33">read_from_file</a> (const char *filename)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Load the design points from a file.  <a href="#49af2eff0cad8c8bcd148172f3d76b33"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#36a91dbac4feb00b2745618bcff98f03">size</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return the amount of stored points.  <a href="#36a91dbac4feb00b2745618bcff98f03"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#32d43269a35db08e4bf09c16de97392a">write_objectives_to_file</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, const char *filename, int obj1=0, int obj2=1)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Write 2 design point objectives to a file.  <a href="#32d43269a35db08e4bf09c16de97392a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#b2d1cb83620966426b8d15c18beb81c6">write_param_obj_to_file</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, const char *filename, int obj1, int par1, int par2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Write on a file a matrix which two dimensions represent two parameters and each cell content the average value of a given objective for the specific parameter combination.  <a href="#b2d1cb83620966426b8d15c18beb81c6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#44afbd4e667ad1c573ffcfe9a2acc052">write_to_file</a> (const char *filename)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Save the design points in a file.  <a href="#44afbd4e667ad1c573ffcfe9a2acc052"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#09930c2b7556a3d03bfc334c44a3fc93">xdr_init</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, double box_cox, bool box_cox_is_log)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize the xdr interface for the communication with the RSM.  <a href="#09930c2b7556a3d03bfc334c44a3fc93"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#808376c43f61110ccec0c4d79d09571f">xdr_init_predictors_only</a> (<a class="el" href="classm3__env.html">m3_env</a> *env)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize only the predictors in the xdr interface for the communication with the RSM.  <a href="#808376c43f61110ccec0c4d79d09571f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#89e3c4554d6bb2ea4dd5f8fdb58af503">xdr_read</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, string file_name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Read from a file the RSM predictions to be stored in the database.  <a href="#89e3c4554d6bb2ea4dd5f8fdb58af503"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#c365d486b545589439b3f6ee7da0ceae">xdr_write</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, string file_name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Write to a file the database in the format for the RSM communication.  <a href="#c365d486b545589439b3f6ee7da0ceae"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#280461de35f5868c3c36d12f8e02a5d8">xdr_write_predictors_only</a> (<a class="el" href="classm3__env.html">m3_env</a> *env, string file_name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Write to a file the predictors of the database in the format for the RSM communication.  <a href="#280461de35f5868c3c36d12f8e02a5d8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#9d5cd3144c98cb99aafcf09722fc3176">~m3_database</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#9d5cd3144c98cb99aafcf09722fc3176"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Data Fields</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classm3__list.html">m3_list</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#cd84d025c262437515758afddb50de30">points</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The collection of design points.  <a href="#cd84d025c262437515758afddb50de30"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">vector&lt; <a class="el" href="classm3__preprocess__pipeline.html">m3_preprocess_pipeline</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#52be1a37e78f94ed136b982c3fb19be0">xdr_metric_pipes</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Preprocessing pipelines.  <a href="#52be1a37e78f94ed136b982c3fb19be0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#633b50947e5daf22c60b1dd63fa05a86">xdr_n_metrics</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Amount of metrics visible to the RSM.  <a href="#633b50947e5daf22c60b1dd63fa05a86"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__database.html#699391115ccdeec29192661f0540a957">xdr_n_predictors</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Amount of parameters visible to the RSM.  <a href="#699391115ccdeec29192661f0540a957"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class represents a collection of design points. 
<p>Definition at line <a class="el" href="m3__database_8h-source.html#l00085">85</a> of file <a class="el" href="m3__database_8h-source.html">m3_database.h</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="61aa6c68405738e88edef855a3b31722"></a><!-- doxytag: member="m3_database::m3_database" ref="61aa6c68405738e88edef855a3b31722" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">m3_database::m3_database           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>

</div>
</div><p>
<a class="anchor" name="7955e34ddff532add612707b49232a33"></a><!-- doxytag: member="m3_database::m3_database" ref="7955e34ddff532add612707b49232a33" args="(m3_env *env, m3_doe *doe)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">m3_database::m3_database           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classm3__doe.html">m3_doe</a> *&nbsp;</td>
          <td class="paramname"> <em>doe</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 env </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>doe</em>&nbsp;</td><td>a design of experiments </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="9d5cd3144c98cb99aafcf09722fc3176"></a><!-- doxytag: member="m3_database::~m3_database" ref="9d5cd3144c98cb99aafcf09722fc3176" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">m3_database::~m3_database           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="3f86988d2edb764c09fad63ae7d0fe36"></a><!-- doxytag: member="m3_database::clear" ref="3f86988d2edb764c09fad63ae7d0fe36" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear the database content. 
<p>

</div>
</div><p>
<a class="anchor" name="e894b682d00524266d4acbe71cb5976d"></a><!-- doxytag: member="m3_database::copy_from" ref="e894b682d00524266d4acbe71cb5976d" args="(m3_list *points)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::copy_from           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__list.html">m3_list</a> *&nbsp;</td>
          <td class="paramname"> <em>points</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy the content of the target list of points. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>points</em>&nbsp;</td><td>the list of points </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="5b0972e38b268fdd062c0ebe54ee238b"></a><!-- doxytag: member="m3_database::copy_xdr_data" ref="5b0972e38b268fdd062c0ebe54ee238b" args="(m3_database *db)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::copy_xdr_data           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__database.html">m3_database</a> *&nbsp;</td>
          <td class="paramname"> <em>db</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy from a target database the xdr parameters. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>db</em>&nbsp;</td><td>the target database </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="57b67a54464420a50822418176ffcd4b"></a><!-- doxytag: member="m3_database::find_point" ref="57b67a54464420a50822418176ffcd4b" args="(m3_point &amp;p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__point.html">m3_point</a>* m3_database::find_point           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__point.html">m3_point</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>p</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Search in the database for a specific design point. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>p</em>&nbsp;</td><td>the design point to search </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the design point found with the metric values stored in the db. NULL if point not found </dd></dl>

</div>
</div><p>
<a class="anchor" name="f0570bd8bd30952d838bc7c1c90e228b"></a><!-- doxytag: member="m3_database::generate_copy_of_database_list" ref="f0570bd8bd30952d838bc7c1c90e228b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__list.html">m3_list</a>* m3_database::generate_copy_of_database_list           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return a copy of the stored points. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>a copy of the stored points </dd></dl>

</div>
</div><p>
<a class="anchor" name="ece2dce53a16a452aa594ee6ccb8b240"></a><!-- doxytag: member="m3_database::get_filtered_consistent" ref="ece2dce53a16a452aa594ee6ccb8b240" args="(m3_env *env)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__database.html">m3_database</a>* m3_database::get_filtered_consistent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> containing only the points which are consistent with the design space. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the filtered database </dd></dl>

</div>
</div><p>
<a class="anchor" name="dab18fe853e89a0a51f3d33ed2fb278b"></a><!-- doxytag: member="m3_database::get_filtered_valid" ref="dab18fe853e89a0a51f3d33ed2fb278b" args="(m3_env *env)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__database.html">m3_database</a>* m3_database::get_filtered_valid           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> containing only the points which are valid for the design rules and consistent with the design space. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the filtered database </dd></dl>

</div>
</div><p>
<a class="anchor" name="98e912d699c43ac8875d2e3cf6d60990"></a><!-- doxytag: member="m3_database::get_list_of_points" ref="98e912d699c43ac8875d2e3cf6d60990" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__list.html">m3_list</a>* m3_database::get_list_of_points           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return the stored points. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the stored points </dd></dl>

</div>
</div><p>
<a class="anchor" name="3f5e5fbdb4d7cdd8ca5f3f7df4850c46"></a><!-- doxytag: member="m3_database::get_random_subset" ref="3f5e5fbdb4d7cdd8ca5f3f7df4850c46" args="(int points_number)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__database.html">m3_database</a>* m3_database::get_random_subset           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>points_number</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Generate a new <a class="el" href="classm3__database.html" title="This class represents a collection of design points.">m3_database</a> by random sampling this one. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>points_number</em>&nbsp;</td><td>the amount of points to sample </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the randomly sampled database </dd></dl>

</div>
</div><p>
<a class="anchor" name="cab68476bf993f6dbbb749f49898f010"></a><!-- doxytag: member="m3_database::insert_point" ref="cab68476bf993f6dbbb749f49898f010" args="(m3_point *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::insert_point           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__point.html">m3_point</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add a design point to the collection. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>p</em>&nbsp;</td><td>the design point </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="49af2eff0cad8c8bcd148172f3d76b33"></a><!-- doxytag: member="m3_database::read_from_file" ref="49af2eff0cad8c8bcd148172f3d76b33" args="(const char *filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m3_database::read_from_file           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Load the design points from a file. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>the name of the target file </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="36a91dbac4feb00b2745618bcff98f03"></a><!-- doxytag: member="m3_database::size" ref="36a91dbac4feb00b2745618bcff98f03" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m3_database::size           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return the amount of stored points. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the amount of stored points </dd></dl>

</div>
</div><p>
<a class="anchor" name="32d43269a35db08e4bf09c16de97392a"></a><!-- doxytag: member="m3_database::write_objectives_to_file" ref="32d43269a35db08e4bf09c16de97392a" args="(m3_env *env, const char *filename, int obj1=0, int obj2=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m3_database::write_objectives_to_file           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>obj1</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>obj2</em> = <code>1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Write 2 design point objectives to a file. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 env </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>the name of the target file </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>obj1</em>&nbsp;</td><td>the index of the first objective </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>obj2</em>&nbsp;</td><td>the index of the second objective </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="b2d1cb83620966426b8d15c18beb81c6"></a><!-- doxytag: member="m3_database::write_param_obj_to_file" ref="b2d1cb83620966426b8d15c18beb81c6" args="(m3_env *env, const char *filename, int obj1, int par1, int par2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m3_database::write_param_obj_to_file           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>obj1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>par1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>par2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Write on a file a matrix which two dimensions represent two parameters and each cell content the average value of a given objective for the specific parameter combination. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 env </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>the name of the target file </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>obj1</em>&nbsp;</td><td>the index of the objective </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>par1</em>&nbsp;</td><td>the index of the first parameter </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>par2</em>&nbsp;</td><td>the index of the second parameter </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="44afbd4e667ad1c573ffcfe9a2acc052"></a><!-- doxytag: member="m3_database::write_to_file" ref="44afbd4e667ad1c573ffcfe9a2acc052" args="(const char *filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m3_database::write_to_file           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Save the design points in a file. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>filename</em>&nbsp;</td><td>the name of the target file </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="09930c2b7556a3d03bfc334c44a3fc93"></a><!-- doxytag: member="m3_database::xdr_init" ref="09930c2b7556a3d03bfc334c44a3fc93" args="(m3_env *env, double box_cox, bool box_cox_is_log)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::xdr_init           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>box_cox</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>box_cox_is_log</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize the xdr interface for the communication with the RSM. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>box_cox</em>&nbsp;</td><td>the box_cox order </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>box_cox_is_log</em>&nbsp;</td><td>the box_cox flag for the log transformation </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="808376c43f61110ccec0c4d79d09571f"></a><!-- doxytag: member="m3_database::xdr_init_predictors_only" ref="808376c43f61110ccec0c4d79d09571f" args="(m3_env *env)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_database::xdr_init_predictors_only           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialize only the predictors in the xdr interface for the communication with the RSM. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="89e3c4554d6bb2ea4dd5f8fdb58af503"></a><!-- doxytag: member="m3_database::xdr_read" ref="89e3c4554d6bb2ea4dd5f8fdb58af503" args="(m3_env *env, string file_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m3_database::xdr_read           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>file_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Read from a file the RSM predictions to be stored in the database. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>file_name</em>&nbsp;</td><td>the file name </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="c365d486b545589439b3f6ee7da0ceae"></a><!-- doxytag: member="m3_database::xdr_write" ref="c365d486b545589439b3f6ee7da0ceae" args="(m3_env *env, string file_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m3_database::xdr_write           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>file_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Write to a file the database in the format for the RSM communication. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>file_name</em>&nbsp;</td><td>the file name </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<a class="anchor" name="280461de35f5868c3c36d12f8e02a5d8"></a><!-- doxytag: member="m3_database::xdr_write_predictors_only" ref="280461de35f5868c3c36d12f8e02a5d8" args="(m3_env *env, string file_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m3_database::xdr_write_predictors_only           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classm3__env.html">m3_env</a> *&nbsp;</td>
          <td class="paramname"> <em>env</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&nbsp;</td>
          <td class="paramname"> <em>file_name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Write to a file the predictors of the database in the format for the RSM communication. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>env</em>&nbsp;</td><td>the M3 environment </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>file_name</em>&nbsp;</td><td>the file name </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>1 on success </dd></dl>

</div>
</div><p>
<hr><h2>Field Documentation</h2>
<a class="anchor" name="cd84d025c262437515758afddb50de30"></a><!-- doxytag: member="m3_database::points" ref="cd84d025c262437515758afddb50de30" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classm3__list.html">m3_list</a>* <a class="el" href="classm3__database.html#cd84d025c262437515758afddb50de30">m3_database::points</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The collection of design points. 
<p>

<p>Definition at line <a class="el" href="m3__database_8h-source.html#l00090">90</a> of file <a class="el" href="m3__database_8h-source.html">m3_database.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="52be1a37e78f94ed136b982c3fb19be0"></a><!-- doxytag: member="m3_database::xdr_metric_pipes" ref="52be1a37e78f94ed136b982c3fb19be0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;<a class="el" href="classm3__preprocess__pipeline.html">m3_preprocess_pipeline</a>&gt; <a class="el" href="classm3__database.html#52be1a37e78f94ed136b982c3fb19be0">m3_database::xdr_metric_pipes</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Preprocessing pipelines. 
<p>

<p>Definition at line <a class="el" href="m3__database_8h-source.html#l00231">231</a> of file <a class="el" href="m3__database_8h-source.html">m3_database.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="633b50947e5daf22c60b1dd63fa05a86"></a><!-- doxytag: member="m3_database::xdr_n_metrics" ref="633b50947e5daf22c60b1dd63fa05a86" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classm3__database.html#633b50947e5daf22c60b1dd63fa05a86">m3_database::xdr_n_metrics</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Amount of metrics visible to the RSM. 
<p>

<p>Definition at line <a class="el" href="m3__database_8h-source.html#l00227">227</a> of file <a class="el" href="m3__database_8h-source.html">m3_database.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="699391115ccdeec29192661f0540a957"></a><!-- doxytag: member="m3_database::xdr_n_predictors" ref="699391115ccdeec29192661f0540a957" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classm3__database.html#699391115ccdeec29192661f0540a957">m3_database::xdr_n_predictors</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Amount of parameters visible to the RSM. 
<p>

<p>Definition at line <a class="el" href="m3__database_8h-source.html#l00229">229</a> of file <a class="el" href="m3__database_8h-source.html">m3_database.h</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="m3__database_8h-source.html">m3_database.h</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue Nov 16 16:18:46 2010 for M3Explorer by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
