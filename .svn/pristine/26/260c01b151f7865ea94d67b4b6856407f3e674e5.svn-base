<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>M3Explorer: m3_design_space.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>m3_design_space.h</h1><a href="m3__design__space_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @M3EXPLORER_LICENSE_START@</span>
<a name="l00002"></a>00002 <span class="comment"> *</span>
<a name="l00003"></a>00003 <span class="comment"> * This file is part of the Multicube Explorer tool.</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Authors: Vittorio Zaccaria, Gianluca Palermo, Giovanni Mariani, Fabrizio Castro, Stefano Bolli (2009)</span>
<a name="l00006"></a>00006 <span class="comment"> * Copyright (c) 2008-2009, Politecnico di Milano, Universita' della Svizzera italiana</span>
<a name="l00007"></a>00007 <span class="comment"> * All rights reserved.</span>
<a name="l00008"></a>00008 <span class="comment"> * </span>
<a name="l00009"></a>00009 <span class="comment"> * Redistribution and use in source and binary forms, with or without modification, </span>
<a name="l00010"></a>00010 <span class="comment"> * are permitted provided that the following conditions are met:</span>
<a name="l00011"></a>00011 <span class="comment"> * </span>
<a name="l00012"></a>00012 <span class="comment"> *  * Redistributions of source code must retain the above copyright notice, </span>
<a name="l00013"></a>00013 <span class="comment"> *    this list of conditions and the following disclaimer.</span>
<a name="l00014"></a>00014 <span class="comment"> * </span>
<a name="l00015"></a>00015 <span class="comment"> *  * Redistributions in binary form must reproduce the above copyright notice, </span>
<a name="l00016"></a>00016 <span class="comment"> *    this list of conditions and the following disclaimer in the documentation </span>
<a name="l00017"></a>00017 <span class="comment"> *    and/or other materials provided with the distribution.</span>
<a name="l00018"></a>00018 <span class="comment"> * </span>
<a name="l00019"></a>00019 <span class="comment"> * Neither the name of Politecnico di Milano nor Universita' della Svizzera Italiana </span>
<a name="l00020"></a>00020 <span class="comment"> * nor the names of its contributors may be used to endorse or promote products </span>
<a name="l00021"></a>00021 <span class="comment"> * derived from this software without specific prior written permission.</span>
<a name="l00022"></a>00022 <span class="comment"> * </span>
<a name="l00023"></a>00023 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" </span>
<a name="l00024"></a>00024 <span class="comment"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, </span>
<a name="l00025"></a>00025 <span class="comment"> * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR </span>
<a name="l00026"></a>00026 <span class="comment"> * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR </span>
<a name="l00027"></a>00027 <span class="comment"> * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, </span>
<a name="l00028"></a>00028 <span class="comment"> * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, </span>
<a name="l00029"></a>00029 <span class="comment"> * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; </span>
<a name="l00030"></a>00030 <span class="comment"> * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, </span>
<a name="l00031"></a>00031 <span class="comment"> * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) </span>
<a name="l00032"></a>00032 <span class="comment"> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED </span>
<a name="l00033"></a>00033 <span class="comment"> * OF THE POSSIBILITY OF SUCH DAMAGE.</span>
<a name="l00034"></a>00034 <span class="comment"> *</span>
<a name="l00035"></a>00035 <span class="comment"> * This work was supported by the EC under grant MULTICUBE FP7-216693.</span>
<a name="l00036"></a>00036 <span class="comment"> * </span>
<a name="l00037"></a>00037 <span class="comment"> * @M3EXPLORER_LICENSE_END@ */</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">/* @additional_authors @, Stefano Bolli (2009)@*/</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="preprocessor">#ifndef M3_DESIGN_SPACE</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span><span class="preprocessor">#define M3_DESIGN_SPACE</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &lt;list&gt;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &lt;cstring&gt;</span>
<a name="l00055"></a>00055 <span class="preprocessor">#include &lt;<a class="code" href="m3__vector_8h.html">m3_vector.h</a>&gt;</span>
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">class </span><a class="code" href="classm3__design__space.html" title="This class represents the design space associated to the current use case.">m3_design_space</a>;
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="preprocessor">#include &lt;<a class="code" href="m3__env_8h.html">m3_env.h</a>&gt;</span>
<a name="l00060"></a>00060 <span class="preprocessor">#include &lt;<a class="code" href="m3__exception_8h.html">m3_exception.h</a>&gt;</span>
<a name="l00061"></a>00061 
<a name="l00062"></a><a class="code" href="m3__design__space_8h.html#822d35495708ca3742035ff503266c95">00062</a> <span class="preprocessor">#define M3_SCALAR_TYPE_INTEGER  0</span>
<a name="l00063"></a><a class="code" href="m3__design__space_8h.html#6916b1b2b0fc59bc2c632aee5448eaf1">00063</a> <span class="preprocessor"></span><span class="preprocessor">#define M3_SCALAR_TYPE_LIST     1</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span>
<a name="l00065"></a><a class="code" href="m3__design__space_8h.html#185395ff794d232ebbc77951357c8481">00065</a> <span class="preprocessor">#define TWO_LEVEL_FF_MODE_CLASSIC 0</span>
<a name="l00066"></a><a class="code" href="m3__design__space_8h.html#33e214a1984f31fc69fa6b06681e3559">00066</a> <span class="preprocessor"></span><span class="preprocessor">#define TWO_LEVEL_FF_MODE_SCRAMBLED 1</span>
<a name="l00067"></a>00067 <span class="preprocessor"></span>
<a name="l00069"></a><a class="code" href="structm3__scalar.html">00069</a> <span class="keyword">struct </span><a class="code" href="structm3__scalar.html" title="This class represents the scalar parameters within the design space.">m3_scalar</a>
<a name="l00070"></a>00070 {
<a name="l00072"></a><a class="code" href="structm3__scalar.html#e4dc25b6b0c86c52cdeb156df971e955">00072</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__scalar.html#e4dc25b6b0c86c52cdeb156df971e955" title="The type can be either M3_SCALAR_TYPE_INTEGER or M3_SCALAR_TYPE_LIST.">type</a>;
<a name="l00073"></a>00073     
<a name="l00075"></a><a class="code" href="structm3__scalar.html#553bfa9426e46ced82ae62780bbb4988">00075</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__scalar.html#553bfa9426e46ced82ae62780bbb4988" title="Minimum used for M3_SCALAR_TYPE_INTEGER.">min</a>;
<a name="l00076"></a>00076     
<a name="l00078"></a><a class="code" href="structm3__scalar.html#7525c47b9ecdbddcd5e23aba7e897a28">00078</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__scalar.html#7525c47b9ecdbddcd5e23aba7e897a28" title="Maximum used for M3_SCALAR_TYPE_INTEGER.">max</a>;
<a name="l00079"></a>00079     
<a name="l00081"></a><a class="code" href="structm3__scalar.html#0381b1f320ec691ba95112b6daccf223">00081</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__scalar.html#0381b1f320ec691ba95112b6daccf223" title="Size of the symbol list associated to M3_SCALAR_TYPE_LIST.">list_size</a>;
<a name="l00082"></a>00082     
<a name="l00084"></a><a class="code" href="structm3__scalar.html#ee8920339d170a6ee689365ccabf7179">00084</a>     vector&lt;string&gt; <a class="code" href="structm3__scalar.html#ee8920339d170a6ee689365ccabf7179" title="Symbol list associated to M3_SCALAR_TYPE_LIST.">list</a>;
<a name="l00085"></a>00085 };
<a name="l00086"></a>00086 
<a name="l00088"></a><a class="code" href="structm3__permutation.html">00088</a> <span class="keyword">struct </span><a class="code" href="structm3__permutation.html" title="This class represents the permutation parameters within the design space.">m3_permutation</a>
<a name="l00089"></a>00089 {
<a name="l00091"></a><a class="code" href="structm3__permutation.html#5f60c3b62560d7c27c25f39514d864df">00091</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__permutation.html#5f60c3b62560d7c27c25f39514d864df" title="True if the permutation has variable dimension.">variable_dimension</a>;
<a name="l00092"></a>00092     
<a name="l00094"></a><a class="code" href="structm3__permutation.html#99121339ef9f86e425b39a2216c46f25">00094</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__permutation.html#99121339ef9f86e425b39a2216c46f25" title="Parameter the dimension depends on.">variable_dimension_parameter</a>;
<a name="l00095"></a>00095     
<a name="l00097"></a><a class="code" href="structm3__permutation.html#3fffc7779aa397a781ce9cb63e6ffb66">00097</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__permutation.html#3fffc7779aa397a781ce9cb63e6ffb66" title="Contains the fixed dimension of the permutation.">fixed_dimension</a>;
<a name="l00098"></a>00098 };
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 
<a name="l00102"></a><a class="code" href="structm3__on__off__mask.html">00102</a> <span class="keyword">struct </span><a class="code" href="structm3__on__off__mask.html" title="This class represents the on off masks within the design space.">m3_on_off_mask</a>
<a name="l00103"></a>00103 {
<a name="l00105"></a><a class="code" href="structm3__on__off__mask.html#fc28c36711926c8824b601c95e39a05b">00105</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__on__off__mask.html#fc28c36711926c8824b601c95e39a05b" title="True if the mask has variable dimension.">variable_dimension</a>;
<a name="l00106"></a>00106     
<a name="l00108"></a><a class="code" href="structm3__on__off__mask.html#6deccaad11c964745dd391d2d4a33a7e">00108</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__on__off__mask.html#6deccaad11c964745dd391d2d4a33a7e" title="True if the on set has variable dimension.">variable_on_set_size</a>;
<a name="l00109"></a>00109     
<a name="l00111"></a><a class="code" href="structm3__on__off__mask.html#c1c8fabe5ebd42562069716066298e98">00111</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__on__off__mask.html#c1c8fabe5ebd42562069716066298e98" title="True if the mask does not have a fixed on set size.">no_on_set_size</a>;
<a name="l00112"></a>00112 
<a name="l00114"></a><a class="code" href="structm3__on__off__mask.html#dd1c20d34c5681ab24aed4f7924d536f">00114</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__on__off__mask.html#dd1c20d34c5681ab24aed4f7924d536f" title="Contains the fixed dimension of the mask.">fixed_dimension</a>;
<a name="l00115"></a>00115     
<a name="l00117"></a><a class="code" href="structm3__on__off__mask.html#6cac4b9a9e5b6c99ff3c361af83c43ad">00117</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__on__off__mask.html#6cac4b9a9e5b6c99ff3c361af83c43ad" title="Contains the fixed on set size of the mask.">fixed_on_set_size</a>;
<a name="l00118"></a>00118     
<a name="l00120"></a><a class="code" href="structm3__on__off__mask.html#c1322c39018840b9a2ba4330f3c237e7">00120</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__on__off__mask.html#c1322c39018840b9a2ba4330f3c237e7" title="Parameter the dimension depends on.">variable_dimension_parameter</a>;
<a name="l00121"></a>00121     
<a name="l00123"></a><a class="code" href="structm3__on__off__mask.html#f2871853443501239bab595706ee0f0c">00123</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__on__off__mask.html#f2871853443501239bab595706ee0f0c" title="Parameter the on set size depends on.">variable_on_set_size_parameter</a>;
<a name="l00124"></a>00124 };
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 
<a name="l00129"></a><a class="code" href="structm3__low__high__representation.html">00129</a> <span class="keyword">struct </span><a class="code" href="structm3__low__high__representation.html" title="This class represents a pair of scrambled configuration.">m3_low_high_representation</a>
<a name="l00130"></a>00130 {
<a name="l00132"></a><a class="code" href="structm3__low__high__representation.html#db3991b9c8e877b78ad7d6cd99e91886">00132</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__low__high__representation.html#db3991b9c8e877b78ad7d6cd99e91886" title="Contains the low level for the representation.">low_level</a>;
<a name="l00133"></a>00133     
<a name="l00135"></a><a class="code" href="structm3__low__high__representation.html#07e01411675b6ddbd170e046a30eae0a">00135</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__low__high__representation.html#07e01411675b6ddbd170e046a30eae0a" title="Contains the high level for the representation.">high_level</a>;
<a name="l00136"></a>00136 };
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 
<a name="l00140"></a><a class="code" href="structm3__mask__low__high__parameter.html">00140</a> <span class="keyword">struct </span><a class="code" href="structm3__mask__low__high__parameter.html" title="This class represents the parameters need to identify a low high mask pair.">m3_mask_low_high_parameter</a>
<a name="l00141"></a>00141 {
<a name="l00143"></a><a class="code" href="structm3__mask__low__high__parameter.html#de136cb44063e677e070554d9b6727e4">00143</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__mask__low__high__parameter.html#de136cb44063e677e070554d9b6727e4" title="The mask name.">mask_name</a>;
<a name="l00144"></a>00144     
<a name="l00146"></a><a class="code" href="structm3__mask__low__high__parameter.html#7290052f301c6dde36f138f4ae974667">00146</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__mask__low__high__parameter.html#7290052f301c6dde36f138f4ae974667" title="True if the mask has variable dimension.">variable_dimension</a>;
<a name="l00147"></a>00147     
<a name="l00149"></a><a class="code" href="structm3__mask__low__high__parameter.html#ee967acb50054b68b47db1c863de30fe">00149</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__mask__low__high__parameter.html#ee967acb50054b68b47db1c863de30fe" title="True if the on set has variable dimension.">variable_on_set_size</a>;
<a name="l00150"></a>00150     
<a name="l00152"></a><a class="code" href="structm3__mask__low__high__parameter.html#c578472b608aa7caca9c098950d9440e">00152</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__mask__low__high__parameter.html#c578472b608aa7caca9c098950d9440e" title="True if the mask does not have a fixed on set size.">no_on_set_size</a>;
<a name="l00153"></a>00153 
<a name="l00155"></a><a class="code" href="structm3__mask__low__high__parameter.html#957a1549bd51d418de6fbc7a2c022d29">00155</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__mask__low__high__parameter.html#957a1549bd51d418de6fbc7a2c022d29" title="Contains the fixed dimension of the mask in a specific configuration.">on_set_size</a>;
<a name="l00156"></a>00156     
<a name="l00158"></a><a class="code" href="structm3__mask__low__high__parameter.html#c96cbc82567a1939227b98e0b5e00c03">00158</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__mask__low__high__parameter.html#c96cbc82567a1939227b98e0b5e00c03" title="Contains the fixed on set size of the mask in a specific configuration.">dimension</a>;
<a name="l00159"></a>00159 
<a name="l00162"></a><a class="code" href="structm3__mask__low__high__parameter.html#1c88224cc69e39abbd9d683ea8a75e84">00162</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__mask__low__high__parameter.html#1c88224cc69e39abbd9d683ea8a75e84" title="Contains the index where are available the low and high representation for mask parametrized...">index</a>;
<a name="l00163"></a>00163 };
<a name="l00164"></a>00164 
<a name="l00166"></a><a class="code" href="structm3__permutation__low__high__parameter.html">00166</a> <span class="keyword">struct </span><a class="code" href="structm3__permutation__low__high__parameter.html" title="This class represents the parameters need to identify a low high permutation pair...">m3_permutation_low_high_parameter</a>
<a name="l00167"></a>00167 {
<a name="l00169"></a><a class="code" href="structm3__permutation__low__high__parameter.html#5a122648b2df8ef984f2572dd80e3259">00169</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__permutation__low__high__parameter.html#5a122648b2df8ef984f2572dd80e3259" title="The permutation name.">permutation_name</a>;
<a name="l00170"></a>00170     
<a name="l00172"></a><a class="code" href="structm3__permutation__low__high__parameter.html#188bf95f89923be83f5b268388cef981">00172</a>     <span class="keywordtype">bool</span> <a class="code" href="structm3__permutation__low__high__parameter.html#188bf95f89923be83f5b268388cef981" title="True if the permutation has variable dimension.">variable_dimension</a>;
<a name="l00173"></a>00173     
<a name="l00176"></a><a class="code" href="structm3__permutation__low__high__parameter.html#887bae0cb4392e6ca53c9a5dcaa6bdd1">00176</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__permutation__low__high__parameter.html#887bae0cb4392e6ca53c9a5dcaa6bdd1" title="Contains the fixed on set size of the permutation in a specific configuration.">dimension</a>;
<a name="l00177"></a>00177 
<a name="l00180"></a><a class="code" href="structm3__permutation__low__high__parameter.html#3527206be432992fc58f53edf7901fd6">00180</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__permutation__low__high__parameter.html#3527206be432992fc58f53edf7901fd6" title="Contains the index where are available the low and high representation for permutation...">index</a>;
<a name="l00181"></a>00181 };
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 
<a name="l00184"></a><a class="code" href="m3__design__space_8h.html#619ba1eae6da5c1d49f12274fcaaf2a0">00184</a> <span class="preprocessor">#define M3_DS_SCALAR        0 </span>
<a name="l00185"></a><a class="code" href="m3__design__space_8h.html#784082730bd96f6c7c06f5f0d51d995a">00185</a> <span class="preprocessor"></span><span class="preprocessor">#define M3_DS_PERMUTATION   1 </span>
<a name="l00186"></a><a class="code" href="m3__design__space_8h.html#2009a9f138685973b6eae06170d4a485">00186</a> <span class="preprocessor"></span><span class="preprocessor">#define M3_DS_ON_OFF_MASK   2  </span>
<a name="l00187"></a>00187 <span class="preprocessor"></span>
<a name="l00189"></a><a class="code" href="structm3__parameter.html">00189</a> <span class="keyword">struct </span><a class="code" href="structm3__parameter.html" title="This class represent a generic parameter.">m3_parameter</a>
<a name="l00190"></a>00190 {
<a name="l00192"></a><a class="code" href="structm3__parameter.html#9bea82d4de227865f79d15af05ee56a2">00192</a>     <span class="keywordtype">string</span> <a class="code" href="structm3__parameter.html#9bea82d4de227865f79d15af05ee56a2" title="Name of the parameter.">name</a>;
<a name="l00193"></a>00193 
<a name="l00200"></a><a class="code" href="structm3__parameter.html#9d0084334b73835ec6b9c0bd63d8bc9d">00200</a>     <span class="keywordtype">int</span> <a class="code" href="structm3__parameter.html#9d0084334b73835ec6b9c0bd63d8bc9d" title="Type of the parameter.">type</a>;
<a name="l00201"></a>00201 };
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00204"></a>00204 <span class="comment">//  function prototypes for internal/external representation conversion</span>
<a name="l00205"></a>00205 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 vector &lt;int&gt; <a class="code" href="m3__design__space_8h.html#8a1b5cc9eb6d876c6f2e1cfd1d9c1adf">factoradic_to_permutation</a>(<span class="keywordtype">int</span> fact, <span class="keywordtype">int</span> dimension);
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="keywordtype">int</span> <a class="code" href="m3__design__space_8h.html#ce2cd71bcbd519b6c9fa9873481320f7">permutation_to_factoradic</a>(vector &lt;int&gt; perm);
<a name="l00210"></a>00210 
<a name="l00211"></a>00211 vector&lt;int&gt; <a class="code" href="m3__design__space_8h.html#0b2195b9d5aff006abe2086f99d961d3">int_to_bit_vector</a>(<span class="keywordtype">int</span> j, <span class="keywordtype">int</span> dimension);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213 <span class="keywordtype">int</span> <a class="code" href="m3__design__space_8h.html#c36a11ccc8cd90d3811fdcf6c528bdee">bit_vector_to_int</a>(vector&lt;int&gt; v);
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00216"></a>00216 <span class="comment">//                  function prototypes for distance    </span>
<a name="l00217"></a>00217 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00218"></a>00218 
<a name="l00219"></a>00219 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#12957a18c90d65edbdf73ae9aafa788a">m3_dice_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="keywordtype">int</span> <a class="code" href="m3__design__space_8h.html#b1e752bb69d1288dfd767cdd0bd5c036">levenshtein_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#73ebe7f6e066d972f43d7844e1ab42fb">normalized_levenshtein_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00224"></a>00224 
<a name="l00225"></a>00225 <span class="keywordtype">int</span> <a class="code" href="m3__design__space_8h.html#ff7d0b5a0dc6cb51c1ec763d6c417e1c">hamming_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00226"></a>00226 
<a name="l00227"></a>00227 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#50535c9815a65e9d4ae4663c1e3f2d30">normalized_hamming_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00228"></a>00228 
<a name="l00229"></a>00229 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#06eed8a496bffb420ce500bcd1660c0b">shift_factor</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#11ddf568dd9a22213649bf56b85a186b">normalized_shift_factor</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00232"></a>00232 
<a name="l00233"></a>00233 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#f160215b80e70c6070876e6479995e2d">normalized_average_mask_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00234"></a>00234 
<a name="l00235"></a>00235 <span class="keywordtype">double</span> <a class="code" href="m3__design__space_8h.html#8e4df858032b3d1064fcd31baa6b7fa2">normalized_average_permutation_distance</a>(vector&lt;int&gt; x, vector&lt;int&gt; y);
<a name="l00236"></a>00236 
<a name="l00237"></a>00237 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00238"></a>00238 <span class="comment">//                   others function prototypes    </span>
<a name="l00239"></a>00239 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00240"></a>00240 <span class="keywordtype">int</span> <a class="code" href="m3__design__space_8h.html#55918f6a20978bf43a54883eb6713110">on_set_size</a>(vector &lt;int&gt; vect);
<a name="l00241"></a>00241 
<a name="l00242"></a>00242 <span class="keywordtype">void</span> <a class="code" href="m3__design__space_8h.html#38a164aa988823619686e15f725b95b5">print_vector</a>(vector &lt;int&gt; x);
<a name="l00243"></a>00243 
<a name="l00244"></a>00244 <span class="comment">//------------------------------------------------------------------------</span>
<a name="l00245"></a>00245 
<a name="l00246"></a>00246 
<a name="l00251"></a><a class="code" href="classm3__design__space.html">00251</a> <span class="keyword">class </span><a class="code" href="classm3__design__space.html" title="This class represents the design space associated to the current use case.">m3_design_space</a>
<a name="l00252"></a>00252 {
<a name="l00253"></a>00253         <span class="keyword">public</span>:
<a name="l00254"></a>00254 
<a name="l00255"></a><a class="code" href="classm3__design__space.html#996c4e0ac028a9aab6bc500b4ebe0482">00255</a>         <span class="keywordtype">string</span> <a class="code" href="classm3__design__space.html#996c4e0ac028a9aab6bc500b4ebe0482">architecture_name</a>;
<a name="l00256"></a>00256 
<a name="l00257"></a><a class="code" href="classm3__design__space.html#909beed2320f8272285311b628802023">00257</a>         <span class="keywordtype">string</span> <a class="code" href="classm3__design__space.html#909beed2320f8272285311b628802023">architecture_owner</a>;
<a name="l00258"></a>00258 
<a name="l00260"></a><a class="code" href="classm3__design__space.html#8ac3b5f346f72dba1a32453e8fc07632">00260</a>         vector&lt;m3_parameter&gt; <a class="code" href="classm3__design__space.html#8ac3b5f346f72dba1a32453e8fc07632" title="Vector of the parameters of the design space.">ds_parameters</a>;
<a name="l00261"></a>00261 
<a name="l00263"></a><a class="code" href="classm3__design__space.html#7fb3da00a4a8f289efc65d33a3c703cf">00263</a>         map&lt;string, m3_scalar&gt; <a class="code" href="classm3__design__space.html#7fb3da00a4a8f289efc65d33a3c703cf" title="Scalar parameters the parameters of the design space.">scalar_parameters</a>;
<a name="l00264"></a>00264 
<a name="l00266"></a><a class="code" href="classm3__design__space.html#5b2dc676c16d78586b49b7201fb2f4cf">00266</a>         map&lt;string, m3_permutation&gt; <a class="code" href="classm3__design__space.html#5b2dc676c16d78586b49b7201fb2f4cf" title="Permutation parameters of the design space.">permutation_parameters</a>;
<a name="l00267"></a>00267 
<a name="l00269"></a><a class="code" href="classm3__design__space.html#9e7e54a19f9c5cff86922fb255c4e670">00269</a>         map&lt;string, m3_on_off_mask&gt; <a class="code" href="classm3__design__space.html#9e7e54a19f9c5cff86922fb255c4e670" title="Mask parameters of the design space.">on_off_mask_parameters</a>;
<a name="l00270"></a>00270 
<a name="l00272"></a><a class="code" href="classm3__design__space.html#395b320a58aab5858650b1406ddf7505">00272</a>         map&lt;string, int&gt; <a class="code" href="classm3__design__space.html#395b320a58aab5858650b1406ddf7505" title="Map from parameter names to their position in the design space.">ds_parameters_index</a>;
<a name="l00273"></a>00273 
<a name="l00276"></a><a class="code" href="classm3__design__space.html#bad5f7e4c4c1f68b5a0f3113adeaa3c9">00276</a>         vector&lt;m3_permutation_low_high_parameter&gt; <a class="code" href="classm3__design__space.html#bad5f7e4c4c1f68b5a0f3113adeaa3c9" title="Map from permutation parameter to the index at which the opposite configuration are...">permutation_opposite_level_index</a>;      
<a name="l00278"></a><a class="code" href="classm3__design__space.html#16e28df850cf383e67b4636f268720e0">00278</a>         vector&lt;m3_low_high_representation&gt; <a class="code" href="classm3__design__space.html#16e28df850cf383e67b4636f268720e0" title="Contain the opposite &amp;#39;low&amp;#39; and &amp;#39;high&amp;#39; levels for the permutation...">permutation_opposite_level</a>;
<a name="l00279"></a>00279 
<a name="l00281"></a><a class="code" href="classm3__design__space.html#416bcc64e77f9174ed05c9f2854c6945">00281</a>         vector&lt; vector&lt;int&gt; &gt; <a class="code" href="classm3__design__space.html#416bcc64e77f9174ed05c9f2854c6945" title="Contain the multiple scrambled value for scramble doe construction.">permutation_scrambled_level</a>;
<a name="l00282"></a>00282 
<a name="l00285"></a><a class="code" href="classm3__design__space.html#41e1b0491b5c5a108341c08511bb03ea">00285</a>         vector&lt;m3_mask_low_high_parameter&gt; <a class="code" href="classm3__design__space.html#41e1b0491b5c5a108341c08511bb03ea" title="Map from mask parameter to the index at which the opposite configuration are available...">mask_opposite_level_index</a>;      
<a name="l00286"></a>00286 
<a name="l00288"></a><a class="code" href="classm3__design__space.html#737698b92ce4ed2f37ebc2b09b445af6">00288</a>         vector&lt;m3_low_high_representation&gt; <a class="code" href="classm3__design__space.html#737698b92ce4ed2f37ebc2b09b445af6" title="Contain the opposite &amp;#39;low&amp;#39; and &amp;#39;high&amp;#39; levels for the mask.">mask_opposite_level</a>;
<a name="l00289"></a>00289 
<a name="l00291"></a><a class="code" href="classm3__design__space.html#aa6320d766693387297c8da0e8dc5f11">00291</a>         vector&lt; vector&lt;int&gt; &gt; <a class="code" href="classm3__design__space.html#aa6320d766693387297c8da0e8dc5f11" title="Contain the multiple scrambled value for scramble doe construction.">mask_scrambled_level</a>;
<a name="l00292"></a>00292 
<a name="l00294"></a><a class="code" href="classm3__design__space.html#48263cd0531a3a1c84b89109c2212111">00294</a>         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#48263cd0531a3a1c84b89109c2212111" title="Current metrics available.">metric_names</a>;
<a name="l00295"></a>00295         
<a name="l00297"></a><a class="code" href="classm3__design__space.html#f806896885111fa052b42243efaeb206">00297</a>         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#f806896885111fa052b42243efaeb206" title="Current metric units.">unit_names</a>;
<a name="l00298"></a>00298 
<a name="l00300"></a><a class="code" href="classm3__design__space.html#bd68f1230f956e65913e5544450c49fd">00300</a>         map&lt;string, int&gt; <a class="code" href="classm3__design__space.html#bd68f1230f956e65913e5544450c49fd" title="Map from metrics names to their index.">metric_index</a>;
<a name="l00301"></a>00301 
<a name="l00303"></a><a class="code" href="classm3__design__space.html#4e1eda8e5f4e47aa8e11b3dc7a912f0f">00303</a>         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#4e1eda8e5f4e47aa8e11b3dc7a912f0f" title="Objective.">objectives</a>;
<a name="l00304"></a>00304         
<a name="l00306"></a><a class="code" href="classm3__design__space.html#0c522f430e6a4d2cead8d27402961029">00306</a>         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#0c522f430e6a4d2cead8d27402961029" title="Objective.">objectives_names</a>;
<a name="l00307"></a>00307 
<a name="l00309"></a><a class="code" href="classm3__design__space.html#13d61e87f2654be141b397f9df8a3aa7">00309</a>         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#13d61e87f2654be141b397f9df8a3aa7" title="Current objectives units.">objectives_units</a>;
<a name="l00310"></a>00310 
<a name="l00311"></a>00311 
<a name="l00313"></a>00313         <a class="code" href="classm3__design__space.html#47e203b328fcbed9379d43133d4b2f6b" title="Constructor.">m3_design_space</a>();
<a name="l00314"></a>00314    
<a name="l00318"></a><a class="code" href="classm3__design__space.html#00e9e9e060281e33f6134ad01337c87c">00318</a>         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#00e9e9e060281e33f6134ad01337c87c" title="Return the number of parameters in the design space.">size</a>() { <span class="keywordflow">return</span> <a class="code" href="classm3__design__space.html#8ac3b5f346f72dba1a32453e8fc07632" title="Vector of the parameters of the design space.">ds_parameters</a>.size(); };
<a name="l00319"></a>00319 
<a name="l00326"></a><a class="code" href="classm3__design__space.html#4f24f19701f74685a438282b27d1f0f0">00326</a>         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#4f24f19701f74685a438282b27d1f0f0" title="Insert a metric in the design space.">insert_metric</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> name, <span class="keywordtype">string</span> unit) 
<a name="l00327"></a>00327         { 
<a name="l00328"></a>00328             <a class="code" href="classm3__design__space.html#48263cd0531a3a1c84b89109c2212111" title="Current metrics available.">metric_names</a>.push_back(name); 
<a name="l00329"></a>00329             <a class="code" href="classm3__design__space.html#f806896885111fa052b42243efaeb206" title="Current metric units.">unit_names</a>.push_back(unit); 
<a name="l00330"></a>00330             <a class="code" href="classm3__design__space.html#bd68f1230f956e65913e5544450c49fd" title="Map from metrics names to their index.">metric_index</a>.insert(pair&lt;string, int&gt;(name, <a class="code" href="classm3__design__space.html#48263cd0531a3a1c84b89109c2212111" title="Current metrics available.">metric_names</a>.size()-1)); 
<a name="l00331"></a>00331         }
<a name="l00332"></a>00332 
<a name="l00345"></a>00345         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#3365eaf71bec2cdadef2148e8de50149" title="Insert a scalar into the design space.">insert_scalar</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> name, <span class="keywordtype">int</span> type, <span class="keywordtype">int</span> min, <span class="keywordtype">int</span> max, vector&lt;string&gt; list_of_values);
<a name="l00346"></a>00346 
<a name="l00356"></a>00356         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#4fb7201acab4e853e919f5b4e9f4a286" title="Insert a permutation into the design space.">insert_permutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, 
<a name="l00357"></a>00357                                 <span class="keywordtype">string</span> name, 
<a name="l00358"></a>00358                                 <span class="keywordtype">bool</span> variable_dimension, 
<a name="l00359"></a>00359                                 <span class="keywordtype">string</span> variable_dimension_parameter, 
<a name="l00360"></a>00360                                 <span class="keywordtype">int</span> fixed_dimension);
<a name="l00361"></a>00361 
<a name="l00376"></a>00376         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#d5f5fa303331d008b8e5bbc60cccc85f" title="Insert an on_off mask into the design space.">insert_on_off_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, 
<a name="l00377"></a>00377                                 <span class="keywordtype">string</span> name, 
<a name="l00378"></a>00378                                 <span class="keywordtype">bool</span> variable_dimension, 
<a name="l00379"></a>00379                                 <span class="keywordtype">string</span> variable_dimension_parameter, 
<a name="l00380"></a>00380                                 <span class="keywordtype">int</span> fixed_dimension, 
<a name="l00381"></a>00381                                 <span class="keywordtype">bool</span> no_on_set_size,
<a name="l00382"></a>00382                                 <span class="keywordtype">bool</span> variable_on_set_size, 
<a name="l00383"></a>00383                                 <span class="keywordtype">string</span> variable_on_set_size_parameter, 
<a name="l00384"></a>00384                                 <span class="keywordtype">int</span> fixed_on_set_size);
<a name="l00385"></a>00385 
<a name="l00395"></a>00395         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#c24bee7786fe251c14db8ffd2bff2655" title="Computes the internal coding of the symbol associated to a parameter.">get_scalar_level</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> par, <span class="keywordtype">string</span> symbol);
<a name="l00396"></a>00396 
<a name="l00403"></a>00403         <span class="keywordtype">string</span> <a class="code" href="classm3__design__space.html#c7fe3337e4d2c66901d0021664be6d74" title="Returns the symbol associated to the minimum value of a parameter.">get_scalar_min_symbol</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname);
<a name="l00404"></a>00404         
<a name="l00411"></a>00411         <span class="keywordtype">string</span> <a class="code" href="classm3__design__space.html#2595801257702cacb01ed7d98f67e172" title="Returns the symbol associated to the maximum value of a parameter.">get_scalar_max_symbol</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname);
<a name="l00412"></a>00412 
<a name="l00413"></a>00413         <span class="comment">/* SUPPORT TO FULL SEARCH */</span>
<a name="l00414"></a>00414 
<a name="l00420"></a>00420         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#7b5cf2826530c92e2287b56f013d254f" title="Initializes the iterator to the full search.">begin</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env);
<a name="l00421"></a>00421 
<a name="l00428"></a>00428         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#088b5732b5e4bed41deaf47939ffb5bb" title="Computes the next point in the design space.">next</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;point);
<a name="l00429"></a>00429 
<a name="l00430"></a>00430         <span class="comment">/* SUPPORT FOR RANDOM SEARCH */</span>
<a name="l00431"></a>00431 
<a name="l00438"></a>00438         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#a27ba513d427b513192ebe4b249f9113" title="Computes a very random point in the design space.">random_point_unsafe</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env);
<a name="l00439"></a>00439         
<a name="l00446"></a>00446         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#3382f2352752a36dc4b0249e342a7d58" title="Computes a random point in the design space.">random_point</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env);
<a name="l00447"></a>00447 
<a name="l00456"></a>00456         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#bfa59631d6e15ea9b9ae390143135ca0" title="Computes the next valid mask value associated to a parameter in a point.">look_for_next_valid_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> mask_name);
<a name="l00457"></a>00457        
<a name="l00458"></a>00458         <span class="comment">/* NEIGHBORHOOD SEARCH */</span> 
<a name="l00459"></a>00459 
<a name="l00466"></a>00466         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#ec06f99c06be7b3efbfbe3aa47401433" title="Returns a set of points closest to a point.">get_closest_points</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, vector&lt;m3_point&gt; &amp;nearest);
<a name="l00467"></a>00467 
<a name="l00475"></a>00475         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#cff9fbf933afc9d50a71c1e81bd38e67" title="Returns a set of points closest to a point within distance N.">get_points_at_distance_N</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">int</span> N,vector&lt;m3_point&gt; &amp;nearest);
<a name="l00476"></a>00476 
<a name="l00484"></a>00484         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a>* <a class="code" href="classm3__design__space.html#29ae65c502cc7c348da80e0947830c33" title="Returns a random point within distance N.">get_random_point_at_distance_N</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">int</span> N);
<a name="l00485"></a>00485 
<a name="l00486"></a>00486         <span class="comment">/* EVOLUTIONARY ALGORITHMS */</span>
<a name="l00496"></a>00496         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#0d0a7d9c7bbbaebcae1d9bb4951fe61b" title="Uniform random genetic crossover operator.">genetic_crossover</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_0, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_1);
<a name="l00497"></a>00497 
<a name="l00505"></a>00505         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#c8fa9fed0744d5d11be09e6283628d94" title="Uniform random mutation operator.">genetic_mutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *mutant,<span class="keywordtype">double</span> p_gen_mutate=0.2);
<a name="l00506"></a>00506 
<a name="l00507"></a>00507         <span class="keyword">private</span>:
<a name="l00508"></a>00508 
<a name="l00517"></a>00517         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#2b826362aaf06d07a0f59d005a4214be" title="Performs the crossover operation inheriting a permutation parameter from given parents...">crossover_permutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> perm_name, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_0, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_1, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;child);
<a name="l00518"></a>00518 
<a name="l00527"></a>00527         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#d31678d2af8899ce12df42d8acee7726" title="Performs the crossover operation inheriting a mask parameters from given parents...">crossover_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> mask_name, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_0, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *parent_1, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;child);
<a name="l00528"></a>00528 
<a name="l00535"></a>00535         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#a52b980ed4e64fcf07275e44f1e83f95" title="Performs the mutation operation for a given permutation over a given ponit.">mutate_permutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> perm_name);
<a name="l00536"></a>00536 
<a name="l00543"></a>00543         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#fddcf5347332f22f9bedab2c8573a8a7" title="Performs the mutation operation for a given mask over a given ponit.">mutate_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> mask_name);
<a name="l00544"></a>00544 
<a name="l00545"></a>00545         <span class="keyword">public</span>:
<a name="l00546"></a>00546         <span class="comment">/* INTERNAL TO EXTERNAL REPRESENTATIONS */</span>
<a name="l00547"></a>00547        
<a name="l00556"></a>00556         <span class="keywordtype">void</span>     <a class="code" href="classm3__design__space.html#6411cb1bf597175b313afc8a42be6647" title="Converts a two level, boolean factorial representation into a feasible design space...">convert_two_level_factorial_representation_from_int</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;point, <span class="keywordtype">int</span> i, <span class="keywordtype">string</span> &amp; res, <span class="keywordtype">int</span> mode);
<a name="l00557"></a>00557 
<a name="l00565"></a>00565         <span class="keywordtype">void</span>     <a class="code" href="classm3__design__space.html#8738f986da81d8932b9c02cb17f8458a" title="Converts a two level, boolean factorial representation into a feasible design space...">convert_two_level_factorial_representation_from_int_multi</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, vector&lt;m3_point&gt; &amp;points, <span class="keywordtype">int</span> i, <span class="keywordtype">string</span> &amp; res);
<a name="l00566"></a>00566 
<a name="l00567"></a>00567 
<a name="l00576"></a>00576         <span class="keywordtype">bool</span>     <a class="code" href="classm3__design__space.html#f3c5fbf4dcbb7236841f25ad38c1bd75" title="Converts a three level, factorial representation into a feasible design space point...">convert_factorial_representation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;point, vector&lt;string&gt; fact, <span class="keywordtype">int</span> mode);
<a name="l00577"></a>00577 
<a name="l00585"></a>00585         <span class="keywordtype">bool</span>     <a class="code" href="classm3__design__space.html#7d4bc7d6e26579a763bf0844b44da74f" title="Converts a three level, factorial representation into a feasible design space point...">convert_factorial_representation_multi</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, vector&lt;m3_point&gt; &amp;points, vector&lt;string&gt; fact);
<a name="l00586"></a>00586 
<a name="l00593"></a>00593         <span class="keywordtype">string</span>   <a class="code" href="classm3__design__space.html#ac138cc2ddca064837746da5b60ae9c5" title="Returns the point representation in string format.">get_point_representation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;point); 
<a name="l00594"></a>00594 
<a name="l00602"></a>00602         <span class="keywordtype">string</span>   <a class="code" href="classm3__design__space.html#61b403e2b84c0a6303e04e0721d8684e" title="Returns the string representation of a single parameter.">get_parameter_representation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> &amp;point, <span class="keywordtype">string</span> parname);
<a name="l00603"></a>00603         
<a name="l00610"></a>00610         <span class="keywordtype">string</span>   <a class="code" href="classm3__design__space.html#48934d4b5cb9eda6775a0c7443705fe6" title="Returns the string representation of an integer vector.">get_vector_representation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, vector&lt;int&gt; vector);
<a name="l00611"></a>00611 
<a name="l00619"></a>00619         vector&lt;int&gt; <a class="code" href="classm3__design__space.html#d263e8b5a6d47feb0105d77a35c1b55b" title="Returns the integer vectors associated to a permutation in a point.">get_permutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> parname);
<a name="l00620"></a>00620 
<a name="l00628"></a>00628         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#bb5a85eecb671da1c0864f5de59b647f" title="Sets the integer vectors associated to a permutation in a point.">set_permutation</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> parname, vector&lt;int&gt; v);
<a name="l00629"></a>00629         
<a name="l00637"></a>00637         vector&lt;int&gt; <a class="code" href="classm3__design__space.html#fe54cc40eb5d0bd60158a2b907e721d1" title="Returns the integer vectors associated to a mask in a point.">get_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> parname);
<a name="l00638"></a>00638  
<a name="l00646"></a>00646         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#77ac1ea87ad3d9625e1df5ebe8e373f8" title="Sets the integer vector associated to a mask in a point.">set_mask</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point, <span class="keywordtype">string</span> parname, vector&lt;int&gt; v);
<a name="l00647"></a>00647  
<a name="l00654"></a>00654         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#91944ab7b8d974a19684cbf35f8a3632" title="Checks for feasibility rules.">is_valid</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00655"></a>00655 
<a name="l00662"></a>00662         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#9a9fdb0a65392b960e9d37282de37a4f" title="Checks all the parameters of the point and fixes inconsistencies on masks and permutations...">consolidate</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> point);
<a name="l00663"></a>00663 
<a name="l00676"></a>00676         <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> <a class="code" href="classm3__design__space.html#aa63221a207e1018a9c4035143b1f689" title="vector&amp;lt;string&amp;gt; get_upper_bound(); vector&amp;lt;string&amp;gt; get_lower_bound(); vector&amp;lt;string&amp;gt;...">string_vector_to_point</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__vector.html" title="Vector class derived from object.">m3_vector</a> *vector);
<a name="l00677"></a>00677 
<a name="l00684"></a>00684         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#6644750baee428772ef118a40e7b02b5" title="Returns the level associated to the minimum value of a parameter.">get_scalar_min</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname);
<a name="l00685"></a>00685         
<a name="l00692"></a>00692         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#580d0c1956fad879bc78a339f7968685" title="Returns the level associated to the maximum value of a parameter.">get_scalar_max</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname);
<a name="l00693"></a>00693 
<a name="l00702"></a>00702         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#a6c3ad21fd58e6cc4cf01dc2d7a44ade" title="Returns the dimension of a permutation associated to a point.">get_permutation_dimension</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00703"></a>00703         
<a name="l00712"></a>00712         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#ed177f5541acd36f411db49643500214" title="Returns the permutation minimum value associated to a point.">get_permutation_min</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00713"></a>00713         
<a name="l00722"></a>00722         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#25094108cc8ac664ba242bd43f7c0984" title="Returns the permutation maximum value associated to a point.">get_permutation_max</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00723"></a>00723 
<a name="l00732"></a>00732         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#8a35d244abdfaad46c3ce3d7c3e89630" title="Returns the dimension of a mask associated to a point.">get_mask_dimension</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00733"></a>00733         
<a name="l00741"></a>00741         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#36235eca30bbae466001c1be230cf3dc" title="Returns the on set size of a mask associated to a point.">get_mask_on_set_size</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p);
<a name="l00742"></a>00742       
<a name="l00751"></a>00751         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#b50581fc544f91ec47b23c048f35467f" title="Returns the mask minimum value associated to a point.">get_mask_min</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00752"></a>00752         
<a name="l00761"></a>00761         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#8c55b3634aa2b384bad6a5657677a44a" title="Returns the mask maximum value associated to a point.">get_mask_max</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00762"></a>00762 
<a name="l00771"></a>00771         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#2c9f99723ac27e79b8f890296f37a1e2" title="Sets the objectives of the optimization problem.">set_objectives</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__object.html" title="This class is the root of all the objects created within the shell.">m3_object</a> *list);
<a name="l00772"></a>00772 
<a name="l00781"></a>00781         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#19649e9899ce3aac9a0b16d9d298a8d9" title="Sets the objective units of the optimization problem.">set_objectives_units</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__object.html" title="This class is the root of all the objects created within the shell.">m3_object</a> *list);
<a name="l00782"></a>00782 
<a name="l00792"></a>00792         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#28241be70c3d78499008f9df313414fc" title="Sets the objective names of the optimization problem.">set_objectives_names</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__object.html" title="This class is the root of all the objects created within the shell.">m3_object</a> *list);
<a name="l00793"></a>00793 
<a name="l00801"></a>00801         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#8b0be485d634fdda94b352ec10d92783" title="Evaluates a point in the design space computing the associated statistics and metrics...">evaluate</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *point);
<a name="l00802"></a>00802 
<a name="l00807"></a>00807         <span class="keywordtype">void</span> <a class="code" href="classm3__design__space.html#111d26ffcebbf1cc99827afc39a8cc24" title="Prints the current content of the design space.">print</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env);
<a name="l00808"></a>00808 
<a name="l00809"></a>00809 
<a name="l00833"></a>00833         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#872df59b9f67da305ed95d3c92703122" title="Evaluates an expression composed.">eval_expression</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *x, <span class="keywordtype">string</span> expr, <span class="keywordtype">bool</span> is_objective_or_constraint, <span class="keywordtype">double</span> &amp; value);
<a name="l00834"></a>00834 
<a name="l00860"></a>00860         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#651ea1f115d59bd2b27d4f567fd04e22" title="Evaluates an expression composed of 2 points (x and y).">eval_expression_2</a>(  <a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *x, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *y, <span class="keywordtype">string</span> expr, <span class="keywordtype">double</span> &amp; value);
<a name="l00861"></a>00861 
<a name="l00862"></a>00862         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#ded1683f344dd1cf8d39e6dea1074924">set_architecture_info</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__object.html" title="This class is the root of all the objects created within the shell.">m3_object</a> *cf);
<a name="l00863"></a>00863 
<a name="l00869"></a>00869         <span class="keywordtype">bool</span> <a class="code" href="classm3__design__space.html#f04515ea3abc31dc013c3240a4af1464" title="Returns true if all design parameters of the point are within scalar bounds.">is_within_scalar_bounds</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> point);
<a name="l00870"></a>00870 
<a name="l00876"></a>00876         vector&lt;string&gt; <a class="code" href="classm3__design__space.html#091e4592e36ebb403f1b30416b3027b8" title="Returns the boundaries for the scalar parameter.">get_scalar_range</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname);
<a name="l00877"></a>00877 
<a name="l00878"></a>00878         <span class="comment">/* SCRAMBLE FOR MASK AND PERMUTATION */</span>
<a name="l00879"></a>00879 
<a name="l00885"></a>00885         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#516f97cdd93b977b9e08c8bbf3c8907b" title="Returns the index in permutation_opposite_level of a couple of scrambled assignment...">get_permutation_opposite_level_index</a>(<a class="code" href="structm3__permutation__low__high__parameter.html" title="This class represents the parameters need to identify a low high permutation pair...">m3_permutation_low_high_parameter</a> t);
<a name="l00886"></a>00886         
<a name="l00894"></a>00894         <span class="comment">// OVERLOAD: if the index aren't available generate a new couple of configuration for the given permutation</span>
<a name="l00895"></a>00895         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#516f97cdd93b977b9e08c8bbf3c8907b" title="Returns the index in permutation_opposite_level of a couple of scrambled assignment...">get_permutation_opposite_level_index</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <span class="keywordtype">string</span> parname);
<a name="l00896"></a>00896 
<a name="l00904"></a>00904          <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#b6c8d41a1a29024375282e5ac4e0aad2" title="Returns the index in permutation_opposite_level of a couple of scrambled assignment...">get_permutation_multi_opposite_level_index</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <span class="keywordtype">string</span> parname);
<a name="l00905"></a>00905 
<a name="l00911"></a>00911         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#bd5ede2fd73d25248f7fb306ce8eaf9e" title="Returns the index in mask_opposite_level of a couple of scrambled assignment for...">get_mask_opposite_level_index</a>(<a class="code" href="structm3__mask__low__high__parameter.html" title="This class represents the parameters need to identify a low high mask pair.">m3_mask_low_high_parameter</a> t);
<a name="l00912"></a>00912    
<a name="l00920"></a>00920         <span class="comment">// OVERLOAD: if the index aren't available generate a new couple of configuration for the given mask</span>
<a name="l00921"></a>00921         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#bd5ede2fd73d25248f7fb306ce8eaf9e" title="Returns the index in mask_opposite_level of a couple of scrambled assignment for...">get_mask_opposite_level_index</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <span class="keywordtype">string</span> parname);
<a name="l00922"></a>00922 
<a name="l00923"></a>00923     
<a name="l00931"></a>00931         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#d1cc6370b58a83fbe45b742b7ac91af5" title="Returns the index in mask_opposite_level of a couple of scrambled assignment for...">get_mask_multi_opposite_level_index</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <span class="keywordtype">string</span> parname);
<a name="l00940"></a>00940         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#98f353561c5bfd9f0292c67ec384d8ea" title="Generate a couple of low high permutation according to the parameter in cur_permutation...">scramble_permutation_generator</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <a class="code" href="structm3__permutation__low__high__parameter.html" title="This class represents the parameters need to identify a low high permutation pair...">m3_permutation_low_high_parameter</a> cur_permutation);
<a name="l00941"></a>00941         
<a name="l00950"></a>00950         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#c75c1ffeaed849ddb29441eb1f83a113" title="Generate a set of permutation such that it is close respect the scramble operator...">scramble_multi_permutation_generator</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <a class="code" href="structm3__permutation__low__high__parameter.html" title="This class represents the parameters need to identify a low high permutation pair...">m3_permutation_low_high_parameter</a> cur_permutation);
<a name="l00951"></a>00951         
<a name="l00952"></a>00952 
<a name="l00959"></a>00959         vector &lt;int&gt; <a class="code" href="classm3__design__space.html#47733421ece2858f58459aa8e7c2c7a7" title="Given start_permutation and its parametrization throught cur_permutation returns...">permutation_scrambler</a>(vector &lt;int&gt; start_permutation, <a class="code" href="structm3__permutation__low__high__parameter.html" title="This class represents the parameters need to identify a low high permutation pair...">m3_permutation_low_high_parameter</a> cur_permutation);
<a name="l00960"></a>00960           
<a name="l00969"></a>00969         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#52f3c739c21c763a87962816160ab552" title="Generate a couple of low high mask according to the parameter in cur_mask and save...">scramble_mask_generator</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <a class="code" href="structm3__mask__low__high__parameter.html" title="This class represents the parameters need to identify a low high mask pair.">m3_mask_low_high_parameter</a> cur_mask);
<a name="l00970"></a>00970         
<a name="l00979"></a>00979         <span class="keywordtype">int</span> <a class="code" href="classm3__design__space.html#e205a68fe08d71867576ecba6faefb44" title="Generate a set of mask such that it is close respect the scramble operatorand the...">scramble_multi_mask_generator</a>(<a class="code" href="classm3__env.html" title="This class represent the environment of m3explorer.">m3_env</a> *env, <span class="keywordtype">string</span> parname, <a class="code" href="classm3__point.html" title="The point derived from the object class.">m3_point</a> *p, <a class="code" href="structm3__mask__low__high__parameter.html" title="This class represents the parameters need to identify a low high mask pair.">m3_mask_low_high_parameter</a> cur_mask);
<a name="l00980"></a>00980 
<a name="l00987"></a>00987         vector &lt;int&gt; <a class="code" href="classm3__design__space.html#4410ccad5ad713a594027191f8011c9b" title="Given start_mask and its parametrization throught cur_mask returns the corresponding...">mask_scrambler</a>(vector &lt;int&gt; start_mask, <a class="code" href="structm3__mask__low__high__parameter.html" title="This class represents the parameters need to identify a low high mask pair.">m3_mask_low_high_parameter</a> cur_mask);
<a name="l00988"></a>00988                
<a name="l00989"></a>00989 };
<a name="l00990"></a>00990 
<a name="l00992"></a><a class="code" href="classm3__design__space__exception.html">00992</a> <span class="keyword">class </span><a class="code" href="classm3__design__space__exception.html" title="Design space exception class.">m3_design_space_exception</a>: <span class="keyword">public</span> <a class="code" href="classm3__exception.html" title="A generic multicube exception.">m3_exception</a>
<a name="l00993"></a>00993 {
<a name="l00994"></a>00994         <span class="keyword">public</span>:
<a name="l00997"></a>00997                 <a class="code" href="classm3__design__space__exception.html#6405bb1722ffeea0961689db8bfd8393" title="Constructor.">m3_design_space_exception</a>(<span class="keywordtype">string</span> description);
<a name="l00998"></a>00998 
<a name="l01000"></a>01000                 <a class="code" href="classm3__design__space__exception.html#a3e288b83a34306699c30caff1c08b9c" title="Destructur.">~m3_design_space_exception</a>() <span class="keywordflow">throw</span>();
<a name="l01001"></a>01001 };
<a name="l01002"></a>01002         
<a name="l01003"></a>01003 <span class="keywordtype">void</span> <a class="code" href="m3__design__space_8h.html#758d026006160fdf1f7a7a6856571e5f">m3_shutdown_expression_eval</a>();
<a name="l01004"></a>01004 <span class="keywordtype">void</span> <a class="code" href="m3__design__space_8h.html#b82589f88fc3a52605cbb0ba3419c8c4">m3_init_expression_eval</a>();
<a name="l01005"></a>01005 
<a name="l01006"></a>01006 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue Nov 16 16:18:46 2010 for M3Explorer by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
