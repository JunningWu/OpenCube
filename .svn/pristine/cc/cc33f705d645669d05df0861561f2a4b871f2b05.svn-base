<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>M3Explorer: m3_design_space.h File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>m3_design_space.h File Reference</h1><code>#include &lt;iostream&gt;</code><br>
<code>#include &lt;list&gt;</code><br>
<code>#include &lt;map&gt;</code><br>
<code>#include &lt;vector&gt;</code><br>
<code>#include &lt;algorithm&gt;</code><br>
<code>#include &lt;string&gt;</code><br>
<code>#include &lt;cstring&gt;</code><br>
<code>#include &lt;<a class="el" href="m3__vector_8h-source.html">m3_vector.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="m3__env_8h-source.html">m3_env.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="m3__exception_8h-source.html">m3_exception.h</a>&gt;</code><br>

<p>
<a href="m3__design__space_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__design__space.html">m3_design_space</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the design space associated to the current use case.  <a href="classm3__design__space.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classm3__design__space__exception.html">m3_design_space_exception</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Design space exception class.  <a href="classm3__design__space__exception.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__low__high__representation.html">m3_low_high_representation</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents a pair of scrambled configuration.  <a href="structm3__low__high__representation.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__mask__low__high__parameter.html">m3_mask_low_high_parameter</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the parameters need to identify a low high mask pair.  <a href="structm3__mask__low__high__parameter.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__on__off__mask.html">m3_on_off_mask</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the on off masks within the design space.  <a href="structm3__on__off__mask.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__parameter.html">m3_parameter</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represent a generic parameter.  <a href="structm3__parameter.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__permutation.html">m3_permutation</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the permutation parameters within the design space.  <a href="structm3__permutation.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__permutation__low__high__parameter.html">m3_permutation_low_high_parameter</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the parameters need to identify a low high permutation pair.  <a href="structm3__permutation__low__high__parameter.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structm3__scalar.html">m3_scalar</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class represents the scalar parameters within the design space.  <a href="structm3__scalar.html#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#2009a9f138685973b6eae06170d4a485">M3_DS_ON_OFF_MASK</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#784082730bd96f6c7c06f5f0d51d995a">M3_DS_PERMUTATION</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#619ba1eae6da5c1d49f12274fcaaf2a0">M3_DS_SCALAR</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#822d35495708ca3742035ff503266c95">M3_SCALAR_TYPE_INTEGER</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#6916b1b2b0fc59bc2c632aee5448eaf1">M3_SCALAR_TYPE_LIST</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#185395ff794d232ebbc77951357c8481">TWO_LEVEL_FF_MODE_CLASSIC</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#33e214a1984f31fc69fa6b06681e3559">TWO_LEVEL_FF_MODE_SCRAMBLED</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#c36a11ccc8cd90d3811fdcf6c528bdee">bit_vector_to_int</a> (vector&lt; int &gt; v)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">vector&lt; int &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#8a1b5cc9eb6d876c6f2e1cfd1d9c1adf">factoradic_to_permutation</a> (int fact, int dimension)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#ff7d0b5a0dc6cb51c1ec763d6c417e1c">hamming_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">vector&lt; int &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#0b2195b9d5aff006abe2086f99d961d3">int_to_bit_vector</a> (int j, int dimension)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#b1e752bb69d1288dfd767cdd0bd5c036">levenshtein_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#12957a18c90d65edbdf73ae9aafa788a">m3_dice_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#b82589f88fc3a52605cbb0ba3419c8c4">m3_init_expression_eval</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#758d026006160fdf1f7a7a6856571e5f">m3_shutdown_expression_eval</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#f160215b80e70c6070876e6479995e2d">normalized_average_mask_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#8e4df858032b3d1064fcd31baa6b7fa2">normalized_average_permutation_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#50535c9815a65e9d4ae4663c1e3f2d30">normalized_hamming_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#73ebe7f6e066d972f43d7844e1ab42fb">normalized_levenshtein_distance</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#11ddf568dd9a22213649bf56b85a186b">normalized_shift_factor</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#55918f6a20978bf43a54883eb6713110">on_set_size</a> (vector&lt; int &gt; vect)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#ce2cd71bcbd519b6c9fa9873481320f7">permutation_to_factoradic</a> (vector&lt; int &gt; perm)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#38a164aa988823619686e15f725b95b5">print_vector</a> (vector&lt; int &gt; x)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="m3__design__space_8h.html#06eed8a496bffb420ce500bcd1660c0b">shift_factor</a> (vector&lt; int &gt; x, vector&lt; int &gt; y)</td></tr>

</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="2009a9f138685973b6eae06170d4a485"></a><!-- doxytag: member="m3_design_space.h::M3_DS_ON_OFF_MASK" ref="2009a9f138685973b6eae06170d4a485" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M3_DS_ON_OFF_MASK&nbsp;&nbsp;&nbsp;2          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00186">186</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="784082730bd96f6c7c06f5f0d51d995a"></a><!-- doxytag: member="m3_design_space.h::M3_DS_PERMUTATION" ref="784082730bd96f6c7c06f5f0d51d995a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M3_DS_PERMUTATION&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00185">185</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="619ba1eae6da5c1d49f12274fcaaf2a0"></a><!-- doxytag: member="m3_design_space.h::M3_DS_SCALAR" ref="619ba1eae6da5c1d49f12274fcaaf2a0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M3_DS_SCALAR&nbsp;&nbsp;&nbsp;0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00184">184</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="822d35495708ca3742035ff503266c95"></a><!-- doxytag: member="m3_design_space.h::M3_SCALAR_TYPE_INTEGER" ref="822d35495708ca3742035ff503266c95" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M3_SCALAR_TYPE_INTEGER&nbsp;&nbsp;&nbsp;0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00062">62</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="6916b1b2b0fc59bc2c632aee5448eaf1"></a><!-- doxytag: member="m3_design_space.h::M3_SCALAR_TYPE_LIST" ref="6916b1b2b0fc59bc2c632aee5448eaf1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define M3_SCALAR_TYPE_LIST&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00063">63</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="185395ff794d232ebbc77951357c8481"></a><!-- doxytag: member="m3_design_space.h::TWO_LEVEL_FF_MODE_CLASSIC" ref="185395ff794d232ebbc77951357c8481" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWO_LEVEL_FF_MODE_CLASSIC&nbsp;&nbsp;&nbsp;0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00065">65</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<a class="anchor" name="33e214a1984f31fc69fa6b06681e3559"></a><!-- doxytag: member="m3_design_space.h::TWO_LEVEL_FF_MODE_SCRAMBLED" ref="33e214a1984f31fc69fa6b06681e3559" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWO_LEVEL_FF_MODE_SCRAMBLED&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Definition at line <a class="el" href="m3__design__space_8h-source.html#l00066">66</a> of file <a class="el" href="m3__design__space_8h-source.html">m3_design_space.h</a>.</p>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="c36a11ccc8cd90d3811fdcf6c528bdee"></a><!-- doxytag: member="m3_design_space.h::bit_vector_to_int" ref="c36a11ccc8cd90d3811fdcf6c528bdee" args="(vector&lt; int &gt; v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bit_vector_to_int           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>v</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8a1b5cc9eb6d876c6f2e1cfd1d9c1adf"></a><!-- doxytag: member="m3_design_space.h::factoradic_to_permutation" ref="8a1b5cc9eb6d876c6f2e1cfd1d9c1adf" args="(int fact, int dimension)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;int&gt; factoradic_to_permutation           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>fact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>dimension</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ff7d0b5a0dc6cb51c1ec763d6c417e1c"></a><!-- doxytag: member="m3_design_space.h::hamming_distance" ref="ff7d0b5a0dc6cb51c1ec763d6c417e1c" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hamming_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0b2195b9d5aff006abe2086f99d961d3"></a><!-- doxytag: member="m3_design_space.h::int_to_bit_vector" ref="0b2195b9d5aff006abe2086f99d961d3" args="(int j, int dimension)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt;int&gt; int_to_bit_vector           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>dimension</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b1e752bb69d1288dfd767cdd0bd5c036"></a><!-- doxytag: member="m3_design_space.h::levenshtein_distance" ref="b1e752bb69d1288dfd767cdd0bd5c036" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int levenshtein_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="12957a18c90d65edbdf73ae9aafa788a"></a><!-- doxytag: member="m3_design_space.h::m3_dice_distance" ref="12957a18c90d65edbdf73ae9aafa788a" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double m3_dice_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="b82589f88fc3a52605cbb0ba3419c8c4"></a><!-- doxytag: member="m3_design_space.h::m3_init_expression_eval" ref="b82589f88fc3a52605cbb0ba3419c8c4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_init_expression_eval           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="758d026006160fdf1f7a7a6856571e5f"></a><!-- doxytag: member="m3_design_space.h::m3_shutdown_expression_eval" ref="758d026006160fdf1f7a7a6856571e5f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void m3_shutdown_expression_eval           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f160215b80e70c6070876e6479995e2d"></a><!-- doxytag: member="m3_design_space.h::normalized_average_mask_distance" ref="f160215b80e70c6070876e6479995e2d" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double normalized_average_mask_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="8e4df858032b3d1064fcd31baa6b7fa2"></a><!-- doxytag: member="m3_design_space.h::normalized_average_permutation_distance" ref="8e4df858032b3d1064fcd31baa6b7fa2" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double normalized_average_permutation_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="50535c9815a65e9d4ae4663c1e3f2d30"></a><!-- doxytag: member="m3_design_space.h::normalized_hamming_distance" ref="50535c9815a65e9d4ae4663c1e3f2d30" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double normalized_hamming_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="73ebe7f6e066d972f43d7844e1ab42fb"></a><!-- doxytag: member="m3_design_space.h::normalized_levenshtein_distance" ref="73ebe7f6e066d972f43d7844e1ab42fb" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double normalized_levenshtein_distance           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="11ddf568dd9a22213649bf56b85a186b"></a><!-- doxytag: member="m3_design_space.h::normalized_shift_factor" ref="11ddf568dd9a22213649bf56b85a186b" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double normalized_shift_factor           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="55918f6a20978bf43a54883eb6713110"></a><!-- doxytag: member="m3_design_space.h::on_set_size" ref="55918f6a20978bf43a54883eb6713110" args="(vector&lt; int &gt; vect)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int on_set_size           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>vect</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ce2cd71bcbd519b6c9fa9873481320f7"></a><!-- doxytag: member="m3_design_space.h::permutation_to_factoradic" ref="ce2cd71bcbd519b6c9fa9873481320f7" args="(vector&lt; int &gt; perm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int permutation_to_factoradic           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>perm</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="38a164aa988823619686e15f725b95b5"></a><!-- doxytag: member="m3_design_space.h::print_vector" ref="38a164aa988823619686e15f725b95b5" args="(vector&lt; int &gt; x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print_vector           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="06eed8a496bffb420ce500bcd1660c0b"></a><!-- doxytag: member="m3_design_space.h::shift_factor" ref="06eed8a496bffb420ce500bcd1660c0b" args="(vector&lt; int &gt; x, vector&lt; int &gt; y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double shift_factor           </td>
          <td>(</td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; int &gt;&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue Nov 16 16:18:46 2010 for M3Explorer by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
