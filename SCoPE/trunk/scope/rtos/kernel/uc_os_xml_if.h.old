//==========================================================================
//	uc_cpu_xml_if.h
//	Author: David Quijano, Juan Castillo, HÃ©ctor Posadas
//	Date: vie ago 8 2008
//	Description:
//==========================================================================
//  Copyright (C) 2008 Design of Systems on Silicon(DS2)
//  Main developer: University of Cantabria
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License (GPL) or GNU Lesser General Public License(LGPL) as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License (GPL) or GNU Lesser General Public License(LGPL) for more details.
//
//  You should have received a copy of the GNU General Public License (GPL) or GNU Lesser General Public License(LGPL)
//  along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  For more information about SCoPE you can visit
//  http://www.teisa.unican.es/scope or write an e-mail to
//  scope@teisa.unican.es or a letter to SCoPE, GIM - TEISA, University
//  of Cantabria, AV. Los Castros s/n, ETSIIT, 39005, Santander, Spain
//==========================================================================
/*!
 * \file uc_cpu_xml_if.h
 */
#ifndef UC_OS_XML_IH_H
#define UC_OS_XML_IH_H

#include "tinyxml.h"

uc_os_xml_if_class * uc_load_os_info(char *name, char *file)



/*!
 * \class uc_os_xml_if_class
 * \brief Class to get os patameters from xml file
 */
class uc_os_xml_if_class {
public:
	uc_os_xml_if_class();
	~uc_os_xml_if_class();
	
	int load_os(char *name, char *file);

private:
		
	static std::vector<char*> 		m_names ;		//!< Name of the OS previously loaded for current project
	static std::vector<uc_os_xml_if_class*> m_os_params ;	//!< List of uc_os_xml_if_class previously loaded for current project

	char *m_os_fileName;			//!< Xml file with processor description (default: $SCOPE_HOME/config/os.xml)
	char *m_os_name;			//!< Name of the os type
	TiXmlDocument m_doc;			//!< Xml document of processors collection
	TiXmlElement *m_root;			//!< Root node of processors xml tree
	TiXmlElement *m_os;			//!< The current cpu Xml node

	int m_os_posix_time[_TOTAL_POSIX_NUM];
	int m_os_ucos_time[_TOTAL_UCOS_NUM];
	int m_os_internal_time[_TOTAL_INTERNALS_NUM];
	int m_os_irq_time[_TOTAL_IRQ_NUM];
};

#endif
