//==========================================================================
//	scope.h
//	Author: David Quijano, Juan Castillo, HÃ©ctor Posadas
//	Date: mar mar 4 2008
//	Description:
//==========================================================================
//  The following code is derived, directly or indirectly, from PERFidiX,
//  released June 30, 2006. Copyright (C) 2006 Design of Systems on Silicon(DS2)
//  The Initial Developer of the Original Code is the University of Cantabria
//  for Design of Systems on Silicon (DS2)
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License (GPL) or GNU Lesser General Public License(LGPL) as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License (GPL) or GNU Lesser General Public License(LGPL) for more details.
//
//  You should have received a copy of the GNU General Public License (GPL) or GNU Lesser General Public License(LGPL)
//  along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  For more information about SCope you can visit
//  http://www.teisa.unican.es/scope or write an e-mail to
//  scope@teisa.unican.es or a letter to SCope, GIM - TEISA, University
//  of Cantabria, AV. Los Castros s/n, ETSIIT, 39005, Santander, Spain
//==========================================================================
/*!
 * \file scope.h
 * \brief Definitions to use Scope with user code
 *
 * This file is included in the user code by the preprocessor
 * command line. The command line is formed by the software
 * compiler.
 */
#ifndef _UC_SCOPE_H_
#define _UC_SCOPE_H_

//System headers:
#include <stdio.h>
#include <time.h>

//Scope includes:
#include "uc_icache.h"

//Definitions for code execution:
extern unsigned long long uc_segment_time;
extern unsigned long long uc_segment_instr;
class UC_rtos_class;
class UC_process_class;
extern __thread UC_rtos_class *qt_parent_rtos;
extern __thread UC_process_class *qt_parent_process;

/*
#include "systemc.h"
*/
// #include "uc_rtos_class.h"
// #include "uc_process_class.h"
#include "uc_posix_c.h"
// #include "uc_hal_hw_class.h"
#include "uc_hal_sw.h"
#include "uc_ll_bus_io.h"
// #include "uc_pthread.h"

/******************************************************************
/* DEFINIDO PARA DIC
/*****************************************************************
			 
#include "uc_semaphore.h"
#include "uc_unistd.h"
#include "uc_pthread.h"
#include "sys_uc_time.h"
			 
*/
//#include "uc_sched.h"
			 
#define cpu_set_t unsigned long
#undef CPU_ZERO
#undef CPU_SET
#define CPU_ZERO(cpu_set) *cpu_set=0;
#define CPU_SET(cpu, cpu_set) *cpu_set |= 1<<cpu;
			 
/******************************************************************/
			 

#define insmod(rtos, driver) \
				 uc_module_init_class kernel_module_init_##driver(); \
				 rtos->kernel_module_init(kernel_module_init_##driver())

// #define pthread_create(a,b,c,d) uc_pthread_create(a,b,(void *(*)(void *))c,d,#c)


// void ic_insert_line(uc_icache_line_t *line);

// Basura de los test de POSIX
// #include "uc_signal.h"
// #include "sys_uc_time.h"
// #include "sys_uc_wait.h"
// #include "uc_stdlib.h"
// #include "uc_unistd.h"
// #include "uc_pthread_class.h" // revisar la funcion uc_pthread_mutex_init::init_mutex() referenciada por la macro PTHREAD_MUTEX_INITIALIZER
// #include "uc_semaphore.h"
// #include "uc_pthread_rwlock.h"
#define main(...) main(int argc, char *argv[])
#define dummyfcn(...) main(int argc, char *argv[])


#endif
